Return-Path: <alsa-devel-bounces@alsa-project.org>
X-Original-To: lists+alsa-devel@lfdr.de
Delivered-To: lists+alsa-devel@lfdr.de
Received: from alsa0.perex.cz (alsa0.perex.cz [77.48.224.243])
	by mail.lfdr.de (Postfix) with ESMTPS id 95ECA83031
	for <lists+alsa-devel@lfdr.de>; Tue,  6 Aug 2019 12:59:11 +0200 (CEST)
Received: from alsa1.perex.cz (alsa1.perex.cz [207.180.221.201])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by alsa0.perex.cz (Postfix) with ESMTPS id 32C141677;
	Tue,  6 Aug 2019 12:58:21 +0200 (CEST)
DKIM-Filter: OpenDKIM Filter v2.11.0 alsa0.perex.cz 32C141677
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=alsa-project.org;
	s=default; t=1565089151;
	bh=cGZ4VDaJV7lgu+DPsaMLWU1oa/755nv3mf7dlamTKZE=;
	h=Date:From:To:In-Reply-To:References:Cc:Subject:List-Id:
	 List-Unsubscribe:List-Archive:List-Post:List-Help:List-Subscribe:
	 From;
	b=arnF0AY4Oyr75CZ4sUsN5AI+lureby1OkIbNpsW+Xsd4kB0FZkFqlfAo/2wjKlAlx
	 xCIiJdpymRwjJcZciKOAi4xUQxXYUZRDx/wfajDMqIaTA0MHdxby/kjsrqYDtnyJ40
	 Lv7/SRzhfEQ38Eq9J7W9x5InlaHFOcsHQc3hBPdA=
Received: from alsa1.perex.cz (localhost.localdomain [127.0.0.1])
	by alsa1.perex.cz (Postfix) with ESMTP id 5EB1DF804CB;
	Tue,  6 Aug 2019 12:57:27 +0200 (CEST)
X-Original-To: alsa-devel@alsa-project.org
Delivered-To: alsa-devel@alsa-project.org
Received: by alsa1.perex.cz (Postfix, from userid 50401)
 id 27FF7F80483; Tue,  6 Aug 2019 12:57:25 +0200 (CEST)
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on alsa1.perex.cz
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=SPF_HELO_NONE,SPF_PASS
 autolearn=disabled version=3.4.0
Received: from mx1.suse.de (mx2.suse.de [195.135.220.15])
 (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
 (No client certificate requested)
 by alsa1.perex.cz (Postfix) with ESMTPS id 4A44BF800F4
 for <alsa-devel@alsa-project.org>; Tue,  6 Aug 2019 12:57:21 +0200 (CEST)
DKIM-Filter: OpenDKIM Filter v2.11.0 alsa1.perex.cz 4A44BF800F4
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay2.suse.de (unknown [195.135.220.254])
 by mx1.suse.de (Postfix) with ESMTP id 3F9E2AE7F;
 Tue,  6 Aug 2019 10:57:21 +0000 (UTC)
Date: Tue, 06 Aug 2019 12:57:21 +0200
Message-ID: <s5hwofqmui6.wl-tiwai@suse.de>
From: Takashi Iwai <tiwai@suse.de>
To: Paul Pawlowski <mrarmdev@gmail.com>
In-Reply-To: <CAKSqxP_po3DRQvhqb-VrwD_NitzSRa0a+28NNA8SajUaZN+qbQ@mail.gmail.com>
References: <CAKSqxP_po3DRQvhqb-VrwD_NitzSRa0a+28NNA8SajUaZN+qbQ@mail.gmail.com>
User-Agent: Wanderlust/2.15.9 (Almost Unreal) SEMI/1.14.6 (Maruoka)
 FLIM/1.14.9 (=?UTF-8?B?R29qxY0=?=) APEL/10.8 Emacs/25.3
 (x86_64-suse-linux-gnu) MULE/6.0 (HANACHIRUSATO)
MIME-Version: 1.0 (generated by SEMI 1.14.6 - "Maruoka")
Cc: alsa-devel@alsa-project.org
Subject: Re: [alsa-devel] What to do when a device clears the buffer in
	the	start trigger?
X-BeenThere: alsa-devel@alsa-project.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: "Alsa-devel mailing list for ALSA developers -
 http://www.alsa-project.org" <alsa-devel.alsa-project.org>
List-Unsubscribe: <https://mailman.alsa-project.org/mailman/options/alsa-devel>, 
 <mailto:alsa-devel-request@alsa-project.org?subject=unsubscribe>
List-Archive: <http://mailman.alsa-project.org/pipermail/alsa-devel/>
List-Post: <mailto:alsa-devel@alsa-project.org>
List-Help: <mailto:alsa-devel-request@alsa-project.org?subject=help>
List-Subscribe: <https://mailman.alsa-project.org/mailman/listinfo/alsa-devel>, 
 <mailto:alsa-devel-request@alsa-project.org?subject=subscribe>
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: 7bit
Errors-To: alsa-devel-bounces@alsa-project.org
Sender: "Alsa-devel" <alsa-devel-bounces@alsa-project.org>

On Wed, 31 Jul 2019 19:48:13 +0200,
Paul Pawlowski wrote:
> 
> Hello,
> I have a device which clears the DMA buffer when I command it to start the
> playback. How can this be workarounded?

So it clears the DMA buffer at start, then you need to put the data on
the DMA buffer again on the running stream?  What a weird chip.

> I found the SNDRV_PCM_INFO_DOUBLE flag, but it doesn't seem that it changes
> alsa/alsa-lib behaviour. I wasn't able to find any drivers which shared
> this quirk.
> I'd like to avoid double buffering if possible, as once the stream is
> actually started it's not required.

The PCM_INFO_DOUBLE flag has no effect for anything like that.  It's
merely a information bit exposed to the user-space as a hint.

In such a case, you need to implement some ugly workaround in the
driver side.  Since the double-buffer is needed only at start, you can
save the whole content (up to appl_ptr) and write back after starting
the stream.


Takashi
_______________________________________________
Alsa-devel mailing list
Alsa-devel@alsa-project.org
https://mailman.alsa-project.org/mailman/listinfo/alsa-devel
