Return-Path: <alsa-devel-bounces@alsa-project.org>
X-Original-To: lists+alsa-devel@lfdr.de
Delivered-To: lists+alsa-devel@lfdr.de
Received: from alsa0.perex.cz (alsa0.perex.cz [77.48.224.243])
	by mail.lfdr.de (Postfix) with ESMTPS id F080E365466
	for <lists+alsa-devel@lfdr.de>; Tue, 20 Apr 2021 10:43:58 +0200 (CEST)
Received: from alsa1.perex.cz (alsa1.perex.cz [207.180.221.201])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by alsa0.perex.cz (Postfix) with ESMTPS id 7F7811686;
	Tue, 20 Apr 2021 10:43:08 +0200 (CEST)
DKIM-Filter: OpenDKIM Filter v2.11.0 alsa0.perex.cz 7F7811686
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=alsa-project.org;
	s=default; t=1618908238;
	bh=3i8ntoT1yfTkS7561sa8lH1twzji0oPL4FRdAXdFsQA=;
	h=Date:From:To:Subject:In-Reply-To:References:Cc:List-Id:
	 List-Unsubscribe:List-Archive:List-Post:List-Help:List-Subscribe:
	 From;
	b=e8sfuxcrxdhRTc4m/uRFvIPp+ctYXWEbkjw3asKKrC1SeTSAwX6DoWHeCAK24phtC
	 Sz7pswy0C3kz13ZvIdVSIy5xgumIwO3oakg0KRgcVeC3sTcDxS/CvcryjFnIeZJzRT
	 +BPHJRb1y5Dr6YjM3vJ57mQuMGF4ttNChMo62YRY=
Received: from alsa1.perex.cz (localhost.localdomain [127.0.0.1])
	by alsa1.perex.cz (Postfix) with ESMTP id CABC2F800FE;
	Tue, 20 Apr 2021 10:42:29 +0200 (CEST)
X-Original-To: alsa-devel@alsa-project.org
Delivered-To: alsa-devel@alsa-project.org
Received: by alsa1.perex.cz (Postfix, from userid 50401)
 id 11178F80253; Tue, 20 Apr 2021 10:42:28 +0200 (CEST)
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on alsa1.perex.cz
X-Spam-Level: *
X-Spam-Status: No, score=1.0 required=5.0 tests=PRX_BODY_30,SPF_HELO_NONE,
 SPF_NONE,URIBL_BLOCKED autolearn=disabled version=3.4.0
Received: from mx2.suse.de (mx2.suse.de [195.135.220.15])
 (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
 (No client certificate requested)
 by alsa1.perex.cz (Postfix) with ESMTPS id 71D99F800FE
 for <alsa-devel@alsa-project.org>; Tue, 20 Apr 2021 10:42:15 +0200 (CEST)
DKIM-Filter: OpenDKIM Filter v2.11.0 alsa1.perex.cz 71D99F800FE
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay2.suse.de (unknown [195.135.221.27])
 by mx2.suse.de (Postfix) with ESMTP id B0C44ABC2;
 Tue, 20 Apr 2021 08:42:15 +0000 (UTC)
Date: Tue, 20 Apr 2021 10:42:15 +0200
Message-ID: <s5h5z0he49k.wl-tiwai@suse.de>
From: Takashi Iwai <tiwai@suse.de>
To: Yizhuo Zhai <yzhai003@ucr.edu>
Subject: Re: [PATCH] ALSA: ctxfi: Avoid writing uninitialized variable in
 uaa_to_xfi()
In-Reply-To: <CABvMjLQqYA60BpBs+yvE5q9He+4hutb_4vAPX1nt2nu14Lp-xg@mail.gmail.com>
References: <CABvMjLQqYA60BpBs+yvE5q9He+4hutb_4vAPX1nt2nu14Lp-xg@mail.gmail.com>
User-Agent: Wanderlust/2.15.9 (Almost Unreal) SEMI/1.14.6 (Maruoka)
 FLIM/1.14.9 (=?UTF-8?B?R29qxY0=?=) APEL/10.8 Emacs/25.3
 (x86_64-suse-linux-gnu) MULE/6.0 (HANACHIRUSATO)
MIME-Version: 1.0 (generated by SEMI 1.14.6 - "Maruoka")
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
Cc: alsa-devel@alsa-project.org, Takashi Iwai <tiwai@suse.com>
X-BeenThere: alsa-devel@alsa-project.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: "Alsa-devel mailing list for ALSA developers -
 http://www.alsa-project.org" <alsa-devel.alsa-project.org>
List-Unsubscribe: <https://mailman.alsa-project.org/mailman/options/alsa-devel>, 
 <mailto:alsa-devel-request@alsa-project.org?subject=unsubscribe>
List-Archive: <http://mailman.alsa-project.org/pipermail/alsa-devel/>
List-Post: <mailto:alsa-devel@alsa-project.org>
List-Help: <mailto:alsa-devel-request@alsa-project.org?subject=help>
List-Subscribe: <https://mailman.alsa-project.org/mailman/listinfo/alsa-devel>, 
 <mailto:alsa-devel-request@alsa-project.org?subject=subscribe>
Errors-To: alsa-devel-bounces@alsa-project.org
Sender: "Alsa-devel" <alsa-devel-bounces@alsa-project.org>

On Mon, 19 Apr 2021 18:41:33 +0200,
Yizhuo Zhai wrote:
> 
> Inside the function uaa_to_xfi(), variable "l_timer" could be
> uninitialized if pci_bus_read_config_dword() returns
> PCIBIOS_BAD_REGISTER_NUMBER. However, it is write back to PCI
> config space via pci_write_config_dword(), which is potentially
> unsafe.

Thanks for the patch.  But it cannot be taken as is.

First off, practically seen, reading PCI_LATENCY_TIMER would never
fail.  And, even if it were to fail, it's not safer at all to proceed
with a value -1.

If any, it should return an error instead.  Also, there are a few
other similar PCI config reads and those have to be treated as well.
But it's likely not worth.  If it's a device that is used on VM, you
might have more chance to break something unexpectedly, but on a real
hardware, it's not.  And it's about the init sequence, which won't
bring to anything actually crashing the kernel.


Takashi

> 
> Signed-off-by: Yizhuo <yzhai003@ucr.edu>
> ---
>  sound/pci/ctxfi/cthw20k1.c | 2 +-
>  1 file changed, 1 insertion(+), 1 deletion(-)
> 
> diff --git a/sound/pci/ctxfi/cthw20k1.c b/sound/pci/ctxfi/cthw20k1.c
> index 0cea4982ed7d..7c3436499974 100644
> --- a/sound/pci/ctxfi/cthw20k1.c
> +++ b/sound/pci/ctxfi/cthw20k1.c
> @@ -1789,7 +1789,7 @@ static struct capabilities hw_capabilities(struct hw
> *hw)
>  static int uaa_to_xfi(struct pci_dev *pci)
>  {
>         unsigned int bar0, bar1, bar2, bar3, bar4, bar5;
> -       unsigned int cmd, irq, cl_size, l_timer, pwr;
> +       unsigned int cmd, irq, cl_size, l_timer = ~0, pwr;
>         unsigned int is_uaa;
>         unsigned int data[4] = {0};
>         unsigned int io_base;
> -- 
> 2.31.1
> 
> --
> Kind Regards,
> 
> Yizhuo Zhai
> 
> Computer Science, Graduate Student
> University of California, Riverside 
> 
> 
