Return-Path: <alsa-devel-bounces@alsa-project.org>
X-Original-To: lists+alsa-devel@lfdr.de
Delivered-To: lists+alsa-devel@lfdr.de
Received: from alsa0.perex.cz (alsa0.perex.cz [77.48.224.243])
	by mail.lfdr.de (Postfix) with ESMTPS id 7CB344859F3
	for <lists+alsa-devel@lfdr.de>; Wed,  5 Jan 2022 21:21:39 +0100 (CET)
Received: from alsa1.perex.cz (alsa1.perex.cz [207.180.221.201])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by alsa0.perex.cz (Postfix) with ESMTPS id 13AC4164E;
	Wed,  5 Jan 2022 21:20:49 +0100 (CET)
DKIM-Filter: OpenDKIM Filter v2.11.0 alsa0.perex.cz 13AC4164E
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=alsa-project.org;
	s=default; t=1641414099;
	bh=DFkUHEO8qtLMzPExB9mkuXQlctjlwAG+qmoMphRLo3E=;
	h=Date:From:To:Subject:In-Reply-To:References:Cc:List-Id:
	 List-Unsubscribe:List-Archive:List-Post:List-Help:List-Subscribe:
	 From;
	b=B9kXEAtoh4V4cGGh8tlw2HshjlHbSYee03vS/t4nlt0vnuSl1t6zYAkupzs2AU9+i
	 JA1tZzNYpIj+JlZ1YTYGrI14hmuicjwCxTLNThBPcAuWrU3ccDrx6B8AuyHnSQzSja
	 Kh8lOJH+hlBgKoksKOTG/gDhbWe0SiHpTmFw7ok0=
Received: from alsa1.perex.cz (localhost.localdomain [127.0.0.1])
	by alsa1.perex.cz (Postfix) with ESMTP id 8A305F800BB;
	Wed,  5 Jan 2022 21:20:32 +0100 (CET)
X-Original-To: alsa-devel@alsa-project.org
Delivered-To: alsa-devel@alsa-project.org
Received: by alsa1.perex.cz (Postfix, from userid 50401)
 id C3C7EF80167; Wed,  5 Jan 2022 21:20:30 +0100 (CET)
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on alsa1.perex.cz
X-Spam-Level: 
X-Spam-Status: No, score=-0.1 required=5.0 tests=DKIM_SIGNED,DKIM_VALID,
 DKIM_VALID_AU,SPF_HELO_NONE,SPF_NONE autolearn=disabled version=3.4.0
Received: from smtp-out2.suse.de (smtp-out2.suse.de [195.135.220.29])
 (using TLSv1.2 with cipher ECDHE-RSA-AES128-GCM-SHA256 (128/128 bits))
 (No client certificate requested)
 by alsa1.perex.cz (Postfix) with ESMTPS id 04703F8007E
 for <alsa-devel@alsa-project.org>; Wed,  5 Jan 2022 21:20:23 +0100 (CET)
DKIM-Filter: OpenDKIM Filter v2.11.0 alsa1.perex.cz 04703F8007E
Authentication-Results: alsa1.perex.cz;
 dkim=pass (1024-bit key) header.d=suse.de header.i=@suse.de
 header.b="zvMryBKA"; 
 dkim=permerror (0-bit key) header.d=suse.de header.i=@suse.de
 header.b="Gg8wPyGC"
Received: from relay2.suse.de (relay2.suse.de [149.44.160.134])
 by smtp-out2.suse.de (Postfix) with ESMTP id 79F831F37F;
 Wed,  5 Jan 2022 20:20:18 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=suse.de; s=susede2_rsa;
 t=1641414018; h=from:from:reply-to:date:date:message-id:message-id:to:to:cc:cc:
 mime-version:mime-version:content-type:content-type:
 content-transfer-encoding:content-transfer-encoding:
 in-reply-to:in-reply-to:references:references;
 bh=1A01dXNZjzWdqkHOQxIJzHWqD7gPQavoLNNPtsTBYEY=;
 b=zvMryBKANkZB6nmhe5SS2gRrcwgfzc7xJaNe/FgbEqchmApR0DLGVHphtViq0T4Cexh7Fk
 7qFTgr6WU5ZzCqk2Oo0pTW6UgvT4bkfyNbk/hQWj9SbYuQR5Kl7u864rvoxqpUBb6QhUl2
 juwjm8njm2Tit5jwI+EWZvh41y0heb8=
DKIM-Signature: v=1; a=ed25519-sha256; c=relaxed/relaxed; d=suse.de;
 s=susede2_ed25519; t=1641414018;
 h=from:from:reply-to:date:date:message-id:message-id:to:to:cc:cc:
 mime-version:mime-version:content-type:content-type:
 content-transfer-encoding:content-transfer-encoding:
 in-reply-to:in-reply-to:references:references;
 bh=1A01dXNZjzWdqkHOQxIJzHWqD7gPQavoLNNPtsTBYEY=;
 b=Gg8wPyGCr9UMJqtoBsok2w1T3FtlbIa/IqEL72uBELGqnDIrsg+owRLyNbOpa3CUJerTdE
 7rVpYe94Ti7YB2BQ==
Received: from alsa1.suse.de (alsa1.suse.de [10.160.4.42])
 by relay2.suse.de (Postfix) with ESMTP id 68B2FA3B85;
 Wed,  5 Jan 2022 20:20:18 +0000 (UTC)
Date: Wed, 05 Jan 2022 21:20:18 +0100
Message-ID: <s5h1r1mhr3x.wl-tiwai@suse.de>
From: Takashi Iwai <tiwai@suse.de>
To: Stefan Sauer <st.kost@gmail.com>
Subject: Re: slow snd_rawmidi_drain() for VirMidi devcies
In-Reply-To: <CAJ4JBRNbi1Suu=uRwe33Wpd-9EPqBEMwnCK1pBh6_TrsmkOGaQ@mail.gmail.com>
References: <CAJ4JBRO7qE63TAC-=4y=QMaiAEfkyjRmgiZEF_57Hm+ztc8+Qg@mail.gmail.com>
 <s5hiluzjy3d.wl-tiwai@suse.de>
 <CAJ4JBRMKsrJ54ee0gPwRTeScghA4SB8m2iOWybQA=6584ejG-g@mail.gmail.com>
 <s5hlezui82s.wl-tiwai@suse.de>
 <CAJ4JBRNbi1Suu=uRwe33Wpd-9EPqBEMwnCK1pBh6_TrsmkOGaQ@mail.gmail.com>
User-Agent: Wanderlust/2.15.9 (Almost Unreal) SEMI/1.14.6 (Maruoka)
 FLIM/1.14.9 (=?UTF-8?B?R29qxY0=?=) APEL/10.8 Emacs/25.3
 (x86_64-suse-linux-gnu) MULE/6.0 (HANACHIRUSATO)
MIME-Version: 1.0 (generated by SEMI 1.14.6 - "Maruoka")
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
Cc: alsa-devel@alsa-project.org
X-BeenThere: alsa-devel@alsa-project.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: "Alsa-devel mailing list for ALSA developers -
 http://www.alsa-project.org" <alsa-devel.alsa-project.org>
List-Unsubscribe: <https://mailman.alsa-project.org/mailman/options/alsa-devel>, 
 <mailto:alsa-devel-request@alsa-project.org?subject=unsubscribe>
List-Archive: <http://mailman.alsa-project.org/pipermail/alsa-devel/>
List-Post: <mailto:alsa-devel@alsa-project.org>
List-Help: <mailto:alsa-devel-request@alsa-project.org?subject=help>
List-Subscribe: <https://mailman.alsa-project.org/mailman/listinfo/alsa-devel>, 
 <mailto:alsa-devel-request@alsa-project.org?subject=subscribe>
Errors-To: alsa-devel-bounces@alsa-project.org
Sender: "Alsa-devel" <alsa-devel-bounces@alsa-project.org>

On Wed, 05 Jan 2022 20:53:33 +0100,
Stefan Sauer wrote:
> 
> From 6b97042bc91ebee267cbb05e6b937cbab5502f61 Mon Sep 17 00:00:00 2001
> From: Stefan Sauer <ensonic@google.com>
> Date: Wed, 5 Jan 2022 20:44:57 +0100
> Subject: [PATCH] ALSA: seq: virmidi: Add a drain operation
> 
> If a driver does not supply a drain operation for outputs, a default code
> path will execute msleep(50). Especially for a virtual midi device
> this severely limits the throughput.
> 
> This implementation for the virtual midi driver simply flushes the output
> workqueue.

Your signed-off-by is missing.  Could you resubmit with it?


thanks,

Takashi

> ---
>  sound/core/seq/seq_virmidi.c | 11 +++++++++++
>  1 file changed, 11 insertions(+)
> 
> diff --git a/sound/core/seq/seq_virmidi.c b/sound/core/seq/seq_virmidi.c
> index 4abc38c70cae..1d708dc20443 100644
> --- a/sound/core/seq/seq_virmidi.c
> +++ b/sound/core/seq/seq_virmidi.c
> @@ -262,6 +262,16 @@ static int snd_virmidi_output_close(struct
> snd_rawmidi_substream *substream)
>   return 0;
>  }
>  
> +/*
> + * drain output work queue
> + */
> +static void snd_virmidi_output_drain(struct snd_rawmidi_substream *substream)
> +{
> + struct snd_virmidi *vmidi = substream->runtime->private_data;
> +
> + flush_work(&vmidi->output_work);
> +}
> +
>  /*
>   * subscribe callback - allow output to rawmidi device
>   */
> @@ -336,6 +346,7 @@ static const struct snd_rawmidi_ops snd_virmidi_output_ops
> = {
>   .open = snd_virmidi_output_open,
>   .close = snd_virmidi_output_close,
>   .trigger = snd_virmidi_output_trigger,
> + .drain = snd_virmidi_output_drain,
>  };
>  
>  /*
> --
> 2.34.1
> 
> Am Mi., 5. Jan. 2022 um 15:13 Uhr schrieb Takashi Iwai <tiwai@suse.de>:
> >
> > On Wed, 05 Jan 2022 14:39:05 +0100,
> > Stefan Sauer wrote:
> > >
> > > -   28,78%     0,00%  rawmidi_alsa  [snd_rawmidi]         [k]
> > > snd_rawmidi_drain_output
> > >    - snd_rawmidi_drain_output
> > >       - 26,59% msleep
> > >            schedule_timeout
> > >            schedule
> > >          + __schedule
> > >       + 2,13% schedule_timeout
> > >
> > > Seems to be because of:
> > > https://github.com/torvalds/linux/blob/master/sound/core/rawmidi.c#L244
> > > if (substream->ops->drain)
> > >   substream->ops->drain(substream);
> > > else
> > >   msleep(50);
> > >
> > > It see what fileops have no drain impl:
> > > https://github.com/torvalds/linux/blob/master/sound/core/rawmidi.c#L1708
> > > and I see
> > > 
> https://github.com/torvalds/linux/blob/master/sound/core/seq/seq_virmidi.c#L329
> > > that define no drain op. Not which ones are actually used here :/
> > >
> > > The docs confirm teh 50 ms wait though:
> > > 
> https://github.com/torvalds/linux/blob/master/Documentation/sound/kernel-api/writing-an-alsa-driver.rst#drain-callback
> > >
> > > would it make sense to have a dummy drain function for the seq_virmidi
> output
> > > ops?
> >
> > Yes, a proper drain implementation is definitely better.
> > I guess just calling flush_work(&vmidi->output_work) there would
> > suffice.
> >
> >
> > thanks,
> >
> > Takashi
> >
> > >
> > > Stefan
> > >
> > > Am Di., 4. Jan. 2022 um 16:54 Uhr schrieb Takashi Iwai <tiwai@suse.de>:
> > >
> > >     On Sat, 01 Jan 2022 12:49:13 +0100,
> > >     Stefan Sauer wrote:
> > >     >
> > >     > hi,
> > >     >
> > >     > I've tried to link BitwigStudio to the webapp cables.gl over
> virmidi.
> > >     > Unfortunately Bitwig Studio only supports rawmidi. What I discovered
> is
> > >     > that there is a strange slowness when sending data to virmidi caused
> > >     > by snd_rawmidi_drain().
> > >     >
> > >     > I've posted two tiny, self-contained c apps to:
> > >     > https://gist.github.com/ensonic/c7588b87fa6c1fa94a8f753b1e0aa394
> > >     > See some examples below. 2 observations:
> > >     > * snd_rawmidi_type() is *not* reporting virmidi as VIRTUAL
> > >     > * snd_rawmidi_drain() takes about 60ms! on virtual vs. less that 0.1
> ms
> > >     on
> > >     > usb midi (I checked all my hw midi and the worst was avg=1ms on
> physical
> > >     > midi image unitor8)
> > >     >
> > >     > When comparing the implementations:
> > >     >
> > >     
> https://github.com/alsa-project/alsa-lib/blob/master/src/rawmidi/rawmidi_virt.c#L173
> > >     >
> > >     
> https://github.com/alsa-project/alsa-lib/blob/master/src/rawmidi/rawmidi_hw.c#L164
> > >     > I see that the hw one results in an IOCTL which I can see when
> striking
> > >     the
> > >     > code and I wonder if this is the root cause? Why is rawmidi_virt.c
> not
> > >     used
> > >     > for virmidi?
> > >     > >From poking at snd_rawmidi_open_conf() I have not yet figured where
> > >     this is
> > >     > decided ....
> > >     >
> > >     > Stefan
> > >     >
> > >     > > amidi -l
> > >     > Dir Device    Name
> > >     > IO  hw:0,0,0  Scarlett 18i20 USB MIDI 1
> > >     > IO  hw:3,0,0  nanoKEY2 nanoKEY2 _ KEYBOARD
> > >     > IO  hw:5,0,0  nanoKONTROL nanoKONTROL _ SLIDE
> > >     > IO  hw:10,0    Virtual Raw MIDI (16 subdevices)
> > >     > IO  hw:11,0    Virtual Raw MIDI (16 subdevices)
> > >     >
> > >     > # using direct i/o to virmidi - all good
> > >     > > ./rawmidi_oss /dev/midi11 0
> > >     > Using device '/dev/midi11' without draining
> > >     > write took min=  0.0015 ms, avg=  0.0016 ms, max=  0.0110 ms
> > >     > > ./rawmidi_oss /dev/midi11 1
> > >     > Using device '/dev/midi11' with draining
> > >     > write took min=  0.0015 ms, avg=  0.0017 ms, max=  0.0101 ms
> > >     > drain took min=  0.0001 ms, avg=  0.0001 ms, max=  0.0008 ms
> > >     >
> > >     > # using snd_rawmidi to virmidi - slow drain operations
> > >     > > ./rawmidi_alsa hw:11,0 0
> > >     > Using device 'hw:11,0' without draining
> > >     > SND_RAWMIDI_TYPE_HW
> > >     > write took min=  0.0010 ms, avg=  0.0011 ms, max=  0.0056 ms
> > >     > > ./rawmidi_alsa hw:11,0 1
> > >     > Using device 'hw:11,0' with draining
> > >     > SND_RAWMIDI_TYPE_HW
> > >     > write took min=  0.0016 ms, avg=  0.0040 ms, max=  0.0077 ms
> > >     > drain took min= 55.9951 ms, avg= 60.4330 ms, max= 64.0653 ms
> > >     >
> > >     > # using snd_rawmidi to usb hw - all good
> > >     > > ./rawmidi_alsa hw:3,0 0
> > >     > Using device 'hw:3,0' without draining
> > >     > SND_RAWMIDI_TYPE_HW
> > >     > write took min=  0.0012 ms, avg=  0.0015 ms, max=  0.0121 ms
> > >     > > ./rawmidi_alsa hw:3,0 1
> > >     > Using device 'hw:3,0' with draining
> > >     > SND_RAWMIDI_TYPE_HW
> > >     > write took min=  0.0024 ms, avg=  0.0032 ms, max=  0.0110 ms
> > >     > drain took min=  0.0293 ms, avg=  0.0636 ms, max=  0.2277 ms
> > >  
> > >     This kind of thing needs profiling.  You can try perf or whatever
> > >     available, and identify which call takes long.  My wild guess is
> > >     something about snd_seq_sync_output_queue(), maybe poll syscall takes
> > >     unexpected long.
> > >
> > >     thanks,
> > >  
> > >     Takashi
> > >
> > >
> 
> 
