Return-Path: <alsa-devel-bounces@alsa-project.org>
X-Original-To: lists+alsa-devel@lfdr.de
Delivered-To: lists+alsa-devel@lfdr.de
Received: from alsa0.perex.cz (alsa0.perex.cz [77.48.224.243])
	by mail.lfdr.de (Postfix) with ESMTPS id BA7AE715B9
	for <lists+alsa-devel@lfdr.de>; Tue, 23 Jul 2019 12:10:18 +0200 (CEST)
Received: from alsa1.perex.cz (alsa1.perex.cz [207.180.221.201])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by alsa0.perex.cz (Postfix) with ESMTPS id 3C3B51862;
	Tue, 23 Jul 2019 12:09:28 +0200 (CEST)
DKIM-Filter: OpenDKIM Filter v2.11.0 alsa0.perex.cz 3C3B51862
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=alsa-project.org;
	s=default; t=1563876618;
	bh=yrExtlf2OFn9gGC3s/2BRZyAl/5ArHJ5CwQgUSF1/L0=;
	h=Date:From:To:In-Reply-To:References:Cc:Subject:List-Id:
	 List-Unsubscribe:List-Archive:List-Post:List-Help:List-Subscribe:
	 From;
	b=EtxbPitdndJPl+DiKWxNK3F+c4KP6s01IRYHV2VnusBY3p6O4sY71UmJEbWnQ3fzH
	 5ZGe430uuNsavoxKRFFsvUZ9qSuJaTvMbal1zBgRdSngrOpocIR7CL17Vyxr2CVnAS
	 Xh4x5k1iOosiqtarVxslbobZQXYOPmz6+yToitJU=
Received: from alsa1.perex.cz (localhost.localdomain [127.0.0.1])
	by alsa1.perex.cz (Postfix) with ESMTP id 71275F80448;
	Tue, 23 Jul 2019 12:08:33 +0200 (CEST)
X-Original-To: alsa-devel@alsa-project.org
Delivered-To: alsa-devel@alsa-project.org
Received: by alsa1.perex.cz (Postfix, from userid 50401)
 id C33B5F80447; Tue, 23 Jul 2019 12:08:29 +0200 (CEST)
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on alsa1.perex.cz
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=SPF_HELO_NONE,SPF_PASS,
 URIBL_BLOCKED autolearn=disabled version=3.4.0
Received: from mx1.suse.de (mx2.suse.de [195.135.220.15])
 (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
 (No client certificate requested)
 by alsa1.perex.cz (Postfix) with ESMTPS id 7AD95F80227
 for <alsa-devel@alsa-project.org>; Tue, 23 Jul 2019 12:08:25 +0200 (CEST)
DKIM-Filter: OpenDKIM Filter v2.11.0 alsa1.perex.cz 7AD95F80227
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay2.suse.de (unknown [195.135.220.254])
 by mx1.suse.de (Postfix) with ESMTP id 7514AAEAC;
 Tue, 23 Jul 2019 10:08:24 +0000 (UTC)
Date: Tue, 23 Jul 2019 12:08:23 +0200
Message-ID: <s5h4l3d6p2g.wl-tiwai@suse.de>
From: Takashi Iwai <tiwai@suse.de>
To: "Charles Keepax" <ckeepax@opensource.cirrus.com>
In-Reply-To: <20190722092436.651-1-ckeepax@opensource.cirrus.com>
References: <20190722092436.651-1-ckeepax@opensource.cirrus.com>
User-Agent: Wanderlust/2.15.9 (Almost Unreal) SEMI/1.14.6 (Maruoka)
 FLIM/1.14.9 (=?UTF-8?B?R29qxY0=?=) APEL/10.8 Emacs/25.3
 (x86_64-suse-linux-gnu) MULE/6.0 (HANACHIRUSATO)
MIME-Version: 1.0 (generated by SEMI 1.14.6 - "Maruoka")
Cc: patches@opensource.cirrus.com, vkoul@kernel.org,
 alsa-devel@alsa-project.org
Subject: Re: [alsa-devel] [PATCH v2 1/4] ALSA: compress: Fix regression on
	compressed capture streams
X-BeenThere: alsa-devel@alsa-project.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: "Alsa-devel mailing list for ALSA developers -
 http://www.alsa-project.org" <alsa-devel.alsa-project.org>
List-Unsubscribe: <https://mailman.alsa-project.org/mailman/options/alsa-devel>, 
 <mailto:alsa-devel-request@alsa-project.org?subject=unsubscribe>
List-Archive: <http://mailman.alsa-project.org/pipermail/alsa-devel/>
List-Post: <mailto:alsa-devel@alsa-project.org>
List-Help: <mailto:alsa-devel-request@alsa-project.org?subject=help>
List-Subscribe: <https://mailman.alsa-project.org/mailman/listinfo/alsa-devel>, 
 <mailto:alsa-devel-request@alsa-project.org?subject=subscribe>
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: 7bit
Errors-To: alsa-devel-bounces@alsa-project.org
Sender: "Alsa-devel" <alsa-devel-bounces@alsa-project.org>

On Mon, 22 Jul 2019 11:24:33 +0200,
Charles Keepax wrote:
> 
> A previous fix to the stop handling on compressed capture streams causes
> some knock on issues. The previous fix updated snd_compr_drain_notify to
> set the state back to PREPARED for capture streams. This causes some
> issues however as the handling for snd_compr_poll differs between the
> two states and some user-space applications were relying on the poll
> failing after the stream had been stopped.
> 
> To correct this regression whilst still fixing the original problem the
> patch was addressing, update the capture handling to skip the PREPARED
> state rather than skipping the SETUP state as it has done until now.
> 
> Fixes: 4f2ab5e1d13d ("ALSA: compress: Fix stop handling on compressed capture streams")
> Signed-off-by: Charles Keepax <ckeepax@opensource.cirrus.com>

Applied, thanks.


Takashi


> ---
> 
> No changes since v1.
> 
> Thanks,
> Charles
> 
>  include/sound/compress_driver.h |  5 +----
>  sound/core/compress_offload.c   | 16 +++++++++++-----
>  2 files changed, 12 insertions(+), 9 deletions(-)
> 
> diff --git a/include/sound/compress_driver.h b/include/sound/compress_driver.h
> index c5188ff724d12..bc88d6f964da9 100644
> --- a/include/sound/compress_driver.h
> +++ b/include/sound/compress_driver.h
> @@ -173,10 +173,7 @@ static inline void snd_compr_drain_notify(struct snd_compr_stream *stream)
>  	if (snd_BUG_ON(!stream))
>  		return;
>  
> -	if (stream->direction == SND_COMPRESS_PLAYBACK)
> -		stream->runtime->state = SNDRV_PCM_STATE_SETUP;
> -	else
> -		stream->runtime->state = SNDRV_PCM_STATE_PREPARED;
> +	stream->runtime->state = SNDRV_PCM_STATE_SETUP;
>  
>  	wake_up(&stream->runtime->sleep);
>  }
> diff --git a/sound/core/compress_offload.c b/sound/core/compress_offload.c
> index 99b8821587053..d79aee6b9edd2 100644
> --- a/sound/core/compress_offload.c
> +++ b/sound/core/compress_offload.c
> @@ -574,10 +574,7 @@ snd_compr_set_params(struct snd_compr_stream *stream, unsigned long arg)
>  		stream->metadata_set = false;
>  		stream->next_track = false;
>  
> -		if (stream->direction == SND_COMPRESS_PLAYBACK)
> -			stream->runtime->state = SNDRV_PCM_STATE_SETUP;
> -		else
> -			stream->runtime->state = SNDRV_PCM_STATE_PREPARED;
> +		stream->runtime->state = SNDRV_PCM_STATE_SETUP;
>  	} else {
>  		return -EPERM;
>  	}
> @@ -693,8 +690,17 @@ static int snd_compr_start(struct snd_compr_stream *stream)
>  {
>  	int retval;
>  
> -	if (stream->runtime->state != SNDRV_PCM_STATE_PREPARED)
> +	switch (stream->runtime->state) {
> +	case SNDRV_PCM_STATE_SETUP:
> +		if (stream->direction != SND_COMPRESS_CAPTURE)
> +			return -EPERM;
> +		break;
> +	case SNDRV_PCM_STATE_PREPARED:
> +		break;
> +	default:
>  		return -EPERM;
> +	}
> +
>  	retval = stream->ops->trigger(stream, SNDRV_PCM_TRIGGER_START);
>  	if (!retval)
>  		stream->runtime->state = SNDRV_PCM_STATE_RUNNING;
> -- 
> 2.11.0
> 
> 
_______________________________________________
Alsa-devel mailing list
Alsa-devel@alsa-project.org
https://mailman.alsa-project.org/mailman/listinfo/alsa-devel
