Return-Path: <alsa-devel-bounces@alsa-project.org>
X-Original-To: lists+alsa-devel@lfdr.de
Delivered-To: lists+alsa-devel@lfdr.de
Received: from alsa0.perex.cz (alsa0.perex.cz [77.48.224.243])
	by mail.lfdr.de (Postfix) with ESMTPS id 09ADF3257B2
	for <lists+alsa-devel@lfdr.de>; Thu, 25 Feb 2021 21:32:36 +0100 (CET)
Received: from alsa1.perex.cz (alsa1.perex.cz [207.180.221.201])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by alsa0.perex.cz (Postfix) with ESMTPS id 89DDA1665;
	Thu, 25 Feb 2021 21:31:45 +0100 (CET)
DKIM-Filter: OpenDKIM Filter v2.11.0 alsa0.perex.cz 89DDA1665
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=alsa-project.org;
	s=default; t=1614285155;
	bh=Mkb2FJHPCVsm7rLim15OHLJs3g7T67Wq4J1VTbZ0/vE=;
	h=Date:From:To:Subject:In-Reply-To:References:Cc:List-Id:
	 List-Unsubscribe:List-Archive:List-Post:List-Help:List-Subscribe:
	 From;
	b=aL8ruKUTrgTSbRyS6yTrjv/n6aNVkUZq7lwWXam1MDmqjvertYJv6oeMozwST3glw
	 bZGCRa9jvfUBjZYNszPTJM7UIjMt2KT++H/4EX/scV870nD2e3b/kX9RvHkvOwnSMo
	 R1onZ6N5uDp86F98A2XLLbxAXgyJYV8cqzsz13pQ=
Received: from alsa1.perex.cz (localhost.localdomain [127.0.0.1])
	by alsa1.perex.cz (Postfix) with ESMTP id D16D3F800D2;
	Thu, 25 Feb 2021 21:31:04 +0100 (CET)
X-Original-To: alsa-devel@alsa-project.org
Delivered-To: alsa-devel@alsa-project.org
Received: by alsa1.perex.cz (Postfix, from userid 50401)
 id 04C75F8016A; Thu, 25 Feb 2021 21:31:02 +0100 (CET)
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on alsa1.perex.cz
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=SPF_HELO_NONE,SPF_NONE
 autolearn=disabled version=3.4.0
Received: from mx2.suse.de (mx2.suse.de [195.135.220.15])
 (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
 (No client certificate requested)
 by alsa1.perex.cz (Postfix) with ESMTPS id A9BAEF800E4
 for <alsa-devel@alsa-project.org>; Thu, 25 Feb 2021 21:30:54 +0100 (CET)
DKIM-Filter: OpenDKIM Filter v2.11.0 alsa1.perex.cz A9BAEF800E4
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay2.suse.de (unknown [195.135.221.27])
 by mx2.suse.de (Postfix) with ESMTP id C5AFAAF72;
 Thu, 25 Feb 2021 20:30:51 +0000 (UTC)
Date: Thu, 25 Feb 2021 21:30:51 +0100
Message-ID: <s5hblc7opok.wl-tiwai@suse.de>
From: Takashi Iwai <tiwai@suse.de>
To: "Michael S. Tsirkin" <mst@redhat.com>
Subject: Re: [PATCH v5 6/9] ALSA: virtio: PCM substream operators
In-Reply-To: <20210225135951-mutt-send-email-mst@kernel.org>
References: <20210222153444.348390-1-anton.yakovlev@opensynergy.com>
 <20210222153444.348390-7-anton.yakovlev@opensynergy.com>
 <s5h35xkquvj.wl-tiwai@suse.de>
 <d9b6e8fa-7356-1cbf-029b-6f7c8bad4994@opensynergy.com>
 <s5hlfbcpayj.wl-tiwai@suse.de>
 <20210225135951-mutt-send-email-mst@kernel.org>
User-Agent: Wanderlust/2.15.9 (Almost Unreal) SEMI/1.14.6 (Maruoka)
 FLIM/1.14.9 (=?UTF-8?B?R29qxY0=?=) APEL/10.8 Emacs/25.3
 (x86_64-suse-linux-gnu) MULE/6.0 (HANACHIRUSATO)
MIME-Version: 1.0 (generated by SEMI 1.14.6 - "Maruoka")
Content-Type: text/plain; charset=US-ASCII
Cc: virtio-dev@lists.oasis-open.org, alsa-devel@alsa-project.org,
 linux-kernel@vger.kernel.org, Takashi Iwai <tiwai@suse.com>,
 Anton Yakovlev <anton.yakovlev@opensynergy.com>,
 virtualization@lists.linux-foundation.org
X-BeenThere: alsa-devel@alsa-project.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: "Alsa-devel mailing list for ALSA developers -
 http://www.alsa-project.org" <alsa-devel.alsa-project.org>
List-Unsubscribe: <https://mailman.alsa-project.org/mailman/options/alsa-devel>, 
 <mailto:alsa-devel-request@alsa-project.org?subject=unsubscribe>
List-Archive: <http://mailman.alsa-project.org/pipermail/alsa-devel/>
List-Post: <mailto:alsa-devel@alsa-project.org>
List-Help: <mailto:alsa-devel-request@alsa-project.org?subject=help>
List-Subscribe: <https://mailman.alsa-project.org/mailman/listinfo/alsa-devel>, 
 <mailto:alsa-devel-request@alsa-project.org?subject=subscribe>
Errors-To: alsa-devel-bounces@alsa-project.org
Sender: "Alsa-devel" <alsa-devel-bounces@alsa-project.org>

On Thu, 25 Feb 2021 20:02:50 +0100,
Michael S. Tsirkin wrote:
> 
> On Thu, Feb 25, 2021 at 01:51:16PM +0100, Takashi Iwai wrote:
> > On Thu, 25 Feb 2021 13:14:37 +0100,
> > Anton Yakovlev wrote:
> > > 
> > > On 25.02.2021 11:55, Takashi Iwai wrote:
> > > > On Mon, 22 Feb 2021 16:34:41 +0100,
> > > > Anton Yakovlev wrote:
> > > >> +static int virtsnd_pcm_open(struct snd_pcm_substream *substream)
> > > >> +{
> > > >> +     struct virtio_pcm *vpcm = snd_pcm_substream_chip(substream);
> > > >> +     struct virtio_pcm_substream *vss = NULL;
> > > >> +
> > > >> +     if (vpcm) {
> > > >> +             switch (substream->stream) {
> > > >> +             case SNDRV_PCM_STREAM_PLAYBACK:
> > > >> +             case SNDRV_PCM_STREAM_CAPTURE: {
> > > >
> > > > The switch() here looks superfluous.  The substream->stream must be a
> > > > good value in the callback.  If any, you can put WARN_ON() there, but
> > > > I don't think it worth.
> > > 
> > > At least it doesn't do any harm.
> > 
> > It does -- it makes the readability worse, and that's a very important
> > point.
> > 
> > > >> +static int virtsnd_pcm_hw_params(struct snd_pcm_substream *substream,
> > > >> +                              struct snd_pcm_hw_params *hw_params)
> > > >> +{
> > > > ....
> > > >> +     return virtsnd_pcm_msg_alloc(vss, periods, period_bytes);
> > > >
> > > > We have the allocation, but...
> > > >
> > > >> +static int virtsnd_pcm_hw_free(struct snd_pcm_substream *substream)
> > > >> +{
> > > >> +     return 0;
> > > >
> > > > ... no release at hw_free()?
> > > > I know that the free is present in the allocator, but it's only for
> > > > re-allocation case, I suppose.
> > > 
> > > When the substream stops, sync_ptr waits until the device has completed
> > > all pending messages. This wait can be interrupted either by a signal or
> > > due to a timeout. In this case, the device can still access messages
> > > even after calling hw_free(). It can also issue an interrupt, and the
> > > interrupt handler will also try to access message structures. Therefore,
> > > freeing of already allocated messages occurs either in hw_params() or in
> > > dev->release(), since there it is 100% safe.
> > 
> > OK, then it's worth to document it about this object lifecycle.
> > The buffer management of this driver is fairly unique, so otherwise it
> > confuses readers.
> > 
> > 
> > thanks,
> > 
> > Takashi
> 
> Takashi given I was in my tree for a while and I planned to merge
> it this merge window.

Hmm, that's too quick, I'm afraid.  I see still a few rough edges in
the code.  e.g. the reset work should be canceled at the driver
removal, but it's missing right now.  And that'll become tricky
because the reset work itself unbinds the device, hence it'll get
stuck if calling cancel_work_sync() at remove callback.

> I can still drop it but there are
> unrelated patches behind these in the tree so that's a rebase
> which will invalidate my testing, I'm just concerned about
> meeting the merge window.
> 
> Would it be ok to merge this as is and then address
> readability stuff by patches on top?
> If yes please send acks!
> If you want to merge it yourself instead, also please say so.

I don't mind who take the patches, although it looks more fitting to
merge through sound git tree if judging from the changes put in
sound/* directory.


thanks,

Takashi
