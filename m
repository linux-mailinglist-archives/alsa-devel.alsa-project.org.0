Return-Path: <alsa-devel-bounces@alsa-project.org>
X-Original-To: lists+alsa-devel@lfdr.de
Delivered-To: lists+alsa-devel@lfdr.de
Received: from alsa0.perex.cz (alsa0.perex.cz [77.48.224.243])
	by mail.lfdr.de (Postfix) with ESMTPS id 59DB9277DB9
	for <lists+alsa-devel@lfdr.de>; Fri, 25 Sep 2020 03:45:57 +0200 (CEST)
Received: from alsa1.perex.cz (alsa1.perex.cz [207.180.221.201])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by alsa0.perex.cz (Postfix) with ESMTPS id 8EE3C181C;
	Fri, 25 Sep 2020 03:45:06 +0200 (CEST)
DKIM-Filter: OpenDKIM Filter v2.11.0 alsa0.perex.cz 8EE3C181C
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=alsa-project.org;
	s=default; t=1600998356;
	bh=tHptu6eWJxoa/15NBNtkBA4JYhx6G+6i0B9pUrX8dsY=;
	h=Date:From:To:Subject:In-Reply-To:References:Cc:List-Id:
	 List-Unsubscribe:List-Archive:List-Post:List-Help:List-Subscribe:
	 From;
	b=cEuy7lFw7VmCLZehV96YKG/PmuT5JpxubUyIjRJpmufkF247JRq0AF/CieTWerzGU
	 V8EvfspwNG7Rigd22P0LwLfo2UjgT2DfTXOuplP9MxrjL1d4Wu4HzOOwQBSWbzSEp4
	 oeSUxj0aUftrK6lLDk8c7oXAgk2xLJmPfeamE6bw=
Received: from alsa1.perex.cz (localhost.localdomain [127.0.0.1])
	by alsa1.perex.cz (Postfix) with ESMTP id A3AEFF80162;
	Fri, 25 Sep 2020 03:44:15 +0200 (CEST)
X-Original-To: alsa-devel@alsa-project.org
Delivered-To: alsa-devel@alsa-project.org
Received: by alsa1.perex.cz (Postfix, from userid 50401)
 id 2CB77F801EB; Fri, 25 Sep 2020 03:44:13 +0200 (CEST)
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on alsa1.perex.cz
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=SPF_HELO_NONE,SPF_PASS
 autolearn=disabled version=3.4.0
Received: from relmlie5.idc.renesas.com (relmlor1.renesas.com
 [210.160.252.171])
 by alsa1.perex.cz (Postfix) with ESMTP id 42948F80162
 for <alsa-devel@alsa-project.org>; Fri, 25 Sep 2020 03:44:04 +0200 (CEST)
DKIM-Filter: OpenDKIM Filter v2.11.0 alsa1.perex.cz 42948F80162
Date: 25 Sep 2020 10:43:59 +0900
X-IronPort-AV: E=Sophos;i="5.77,300,1596466800"; d="scan'208";a="58101632"
Received: from unknown (HELO relmlir6.idc.renesas.com) ([10.200.68.152])
 by relmlie5.idc.renesas.com with ESMTP; 25 Sep 2020 10:43:59 +0900
Received: from mercury.renesas.com (unknown [10.166.252.133])
 by relmlir6.idc.renesas.com (Postfix) with ESMTP id BA408415DFB9;
 Fri, 25 Sep 2020 10:43:59 +0900 (JST)
Message-ID: <87blhuljkb.wl-kuninori.morimoto.gx@renesas.com>
From: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
To: Sameer Pujar <spujar@nvidia.com>
Subject: Re: More Generic Audio Graph Sound Card idea
In-Reply-To: <87imdczd4i.wl-kuninori.morimoto.gx@renesas.com>
References: <87k0xszlep.wl-kuninori.morimoto.gx@renesas.com>
 <097e3fc4-4a84-e101-e6b6-045c3e9e5bfc@nvidia.com>
 <87imdczd4i.wl-kuninori.morimoto.gx@renesas.com>
User-Agent: Wanderlust/2.15.9 Emacs/26.3 Mule/6.0
MIME-Version: 1.0 (generated by SEMI-EPG 1.14.7 - "Harue")
Content-Type: text/plain; charset=US-ASCII
Cc: Linux-ALSA <alsa-devel@alsa-project.org>, Mark Brown <broonie@kernel.org>,
 Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>,
 jonathanh@nvidia.com
X-BeenThere: alsa-devel@alsa-project.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: "Alsa-devel mailing list for ALSA developers -
 http://www.alsa-project.org" <alsa-devel.alsa-project.org>
List-Unsubscribe: <https://mailman.alsa-project.org/mailman/options/alsa-devel>, 
 <mailto:alsa-devel-request@alsa-project.org?subject=unsubscribe>
List-Archive: <http://mailman.alsa-project.org/pipermail/alsa-devel/>
List-Post: <mailto:alsa-devel@alsa-project.org>
List-Help: <mailto:alsa-devel-request@alsa-project.org?subject=help>
List-Subscribe: <https://mailman.alsa-project.org/mailman/listinfo/alsa-devel>, 
 <mailto:alsa-devel-request@alsa-project.org?subject=subscribe>
Errors-To: alsa-devel-bounces@alsa-project.org
Sender: "Alsa-devel" <alsa-devel-bounces@alsa-project.org>


Hi

For more generic Auido Graph Sound Card, I'm thinking about
Multi-CPU/Codec now.
(Need to think about Codec-to-Codec later, but it is next task)
I want to know your idea, opinion, etc, etc...

> > Please note that asoc_simple_init_dai_link_params() makes the link
> > codec-to-codec if any component involved has 'non_legacy_dai_naming'
> > flag enabled. It is used by both audio-graph and simple-card. So it is
> > a combination of three (DPCM, normal and codec-to-codec). To avoid all
> > this complication, I am treating all links as DPCM in the series [0] I
> > sent.
> 
> Ahh, we want to consider codec-to-codec..
> And I noticed multi-CPU / multi-Codec case too (= for normal connection).
> Do we have sample code ? > Mark

First idea is using "ports".
In such case, I think multi-CPU side is not big issue,
because "dais" selects "port" (and "ports") instead of "endpoint".
(Note: here have no compatible to "-scu-" of audio-graph)

	CPU0-1 <------> Codec0
	CPU0-2 <---/
	CPU0-3 <---/

	sound {
		compatible = "audio-graph-card2";

=>		dais = <&cpu0>;
	};

	cpu-device {
		/*
		 * use "ports" for Multi-CPU
		 */
=>		cpu0: ports {
			port@0 { cpu0_1: endpoint { remote-endpoint = <&codec0_1>; }; };
			port@1 { cpu0_2: endpoint { remote-endpoint = <&codec0_2>; }; };
			port@2 { cpu0_3: endpoint { remote-endpoint = <&codec0_3>; }; };
		};

		/*
		 * According to graph.txt, 
		 * we can use other "port" and/or "ports" for non multi-CPU.
		 */
		port@x { };
		port@x { };
		ports {
			port { };
			...
		};
	};

	codec-device {
		port {	codec0_1: endpoint@0 { remote-endpoint = <&cpu0_1>; };
			codec0_2: endpoint@0 { remote-endpoint = <&cpu0_2>; }; 
			codec0_3: endpoint@0 { remote-endpoint = <&cpu0_3>; }; };
	};


But multi-Codec side is difficult.
Because it is selected via "endpoint" via CPU.
No way to select it via "port" and/or "ports".

	CPU1 <------> Codec1-1
	        \---> Codec1-2
	        \---> Codec1-3

	sound {
		compatible = "audio-graph-card2";

		dais = <&cpu1>;
	};

	cpu-device {
		/*
		 * CPU selects Codec by "endpoints".
		 */
		cpu1: port {	cpu1_1: endpoint { remote-endpoint = <&codec1_1>; };
				cpu1_2: endpoint { remote-endpoint = <&codec1_2>; };
				cpu1_3: endpoint { remote-endpoint = <&codec1_3>; };
		};
	};

	codec-device {
		/*
		 * Codec is selected via CPU.
		 * It is best if we can select "codec1" (= port / ports) from CPU.
		 * But is selected via "endpoint" in reality,
		 * using "ports" is not enough for Multi-Codec.
		 * because see below
		 */
		codec1: ports {
			port@0 { codec1_1: endpoint { remote-endpoint = <&dai0_0>; }; };
			port@1 { codec1_2: endpoint { remote-endpoint = <&dai0_1>; }; };
			port@2 { codec1_3: endpoint { remote-endpoint = <&dai0_2>; }; };
		};

		/*
		 * Because "ports" is used to for non Multi-xxx too.
		 * How to know the "ports" was for Multi-xxx or not ?
		 */
		ports {
			port@1 { for device1 };
			port@2 { for device2 };
			port@3 { for device3 };
		};
	};

We might want to select Multi-CPU/Codec by using multi deivces ?
in such case, using "ports" idea is not enough.

Using extra device like DSP can be more generic ?

	<--- multi-CPU --->
	            *******
	CPU0-1 <--> *     * <--> Codec0
	CPU0-2 <--> *     *
	CPU0-3 <--> *     *
	            *******

	sound {
		compatible = "audio-graph-card2";

		dais = <&cpu0>;
	};

	cpu-device {
		ports {
			/* for multi-CPU */
			port@0 { cpu0_1: endpoint { remote-endpoint = <&multi_cpu_1>; }; };
			port@1 { cpu0_2: endpoint { remote-endpoint = <&multi_cpu_2>; }; };
			port@2 { cpu0_3: endpoint { remote-endpoint = <&multi_cpu_3>; }; };

			/* for others */
			port@3 { ... };
		};
	};

	multi-cpu {
		compatible = "audio-graph-card2-multi";

		/* CPU side */
		cpu0: ports@0 {
			port@0 { multi_cpu_1: endpoint { remote-endpoint = <&cpu0_1>; }; };
			port@1 { multi_cpu_2: endpoint { remote-endpoint = <&cpu0_2>; }; };
			port@2 { multi_cpu_3: endpoint { remote-endpoint = <&cpu0_3>; }; };
		};

		/* Codec side */
		ports@1 {
			port@0 { multi_cpu0: endpoint { remote-endpoint = <&codec0>; }; };
		};
	};

	codec-device {
		ports {
			port@0 { codec0: endpoint { remote-endpoint = <&multi_cpu0>; }; };
			port@1 { ... };
		};
	};


	          <--- multi-Codec --->
	          *******
	CPU1 <--> *     * <--> Codec1-1
	          *     * <--> Codec1-2
	          *     * <--> Codec1-3
	          *******

	sound {
		compatible = "audio-graph-card2";

		dais = <&cpu1>;
	};

	cpu-device {
		ports {
			cpu1: port@0 { cpu1_0: endpoint { remote-endpoint = <&multi_codec1>; }; };
			      port@1 { ... };
		};
	};

	multi-cpu {
		compatible = "audio-graph-card2-multi";

		/* Front End */
		ports@0 {
			port { multi_codec1: endpoint { remote-endpoint = <&cpu1_0>; }; };
		};

		/* Back End */
		ports@1 {
			port@0 { multi_codec1_1: endpoint { remote-endpoint = <&codec1_1>; }; };
			port@1 { multi_codec1_2: endpoint { remote-endpoint = <&codec1_2>; }; };
			port@2 { multi_codec1_3: endpoint { remote-endpoint = <&codec1_3>; }; };
		};
	};

	codec-device {
		ports {
			port@0 { codec1_1: endpoint { remote-endpoint = <&multi_codec1_1>; }; };
			port@0 { codec1_2: endpoint { remote-endpoint = <&multi_codec1_2>; }; };
			port@0 { codec1_3: endpoint { remote-endpoint = <&multi_codec1_3>; }; };
			port@1 { ... };
		};
	};



Thank you for your help !!

Best regards
---
Kuninori Morimoto
