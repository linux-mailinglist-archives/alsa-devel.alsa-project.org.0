Return-Path: <alsa-devel-bounces@alsa-project.org>
X-Original-To: lists+alsa-devel@lfdr.de
Delivered-To: lists+alsa-devel@lfdr.de
Received: from alsa0.perex.cz (alsa0.perex.cz [77.48.224.243])
	by mail.lfdr.de (Postfix) with ESMTPS id 9C96D44434E
	for <lists+alsa-devel@lfdr.de>; Wed,  3 Nov 2021 15:20:02 +0100 (CET)
Received: from alsa1.perex.cz (alsa1.perex.cz [207.180.221.201])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by alsa0.perex.cz (Postfix) with ESMTPS id 33F14950;
	Wed,  3 Nov 2021 15:19:12 +0100 (CET)
DKIM-Filter: OpenDKIM Filter v2.11.0 alsa0.perex.cz 33F14950
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=alsa-project.org;
	s=default; t=1635949202;
	bh=6BYkqOYWDjpbeNj/kj6FklgRoYQCYacYYDGR97c+H08=;
	h=Date:From:To:Subject:In-Reply-To:References:Cc:List-Id:
	 List-Unsubscribe:List-Archive:List-Post:List-Help:List-Subscribe:
	 From;
	b=k6AxDIVCVNcBWwmAXWaYgj19yVWw8U+SiXsusTSnfH7SDcYovKeI4pxy45KSdNVbp
	 LP0zPYW0TJ/VDkqedaU/fUlQTfynVkoe0vxcy7iazFCzO38FYbRFCoCw8krJPatRmp
	 C9h+Wy5keih4VaqOX1AP1P/eRy/BfntEkBsuDgic=
Received: from alsa1.perex.cz (localhost.localdomain [127.0.0.1])
	by alsa1.perex.cz (Postfix) with ESMTP id C83AAF800FA;
	Wed,  3 Nov 2021 15:18:44 +0100 (CET)
X-Original-To: alsa-devel@alsa-project.org
Delivered-To: alsa-devel@alsa-project.org
Received: by alsa1.perex.cz (Postfix, from userid 50401)
 id F0D27F8026A; Wed,  3 Nov 2021 15:18:41 +0100 (CET)
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on alsa1.perex.cz
X-Spam-Level: 
X-Spam-Status: No, score=-0.1 required=5.0 tests=DKIM_SIGNED,DKIM_VALID,
 DKIM_VALID_AU,SPF_HELO_NONE,SPF_NONE,URIBL_BLOCKED autolearn=disabled
 version=3.4.0
Received: from smtp-out2.suse.de (smtp-out2.suse.de [195.135.220.29])
 (using TLSv1.2 with cipher ECDHE-RSA-AES128-GCM-SHA256 (128/128 bits))
 (No client certificate requested)
 by alsa1.perex.cz (Postfix) with ESMTPS id 96A9AF800FA
 for <alsa-devel@alsa-project.org>; Wed,  3 Nov 2021 15:18:35 +0100 (CET)
DKIM-Filter: OpenDKIM Filter v2.11.0 alsa1.perex.cz 96A9AF800FA
Authentication-Results: alsa1.perex.cz;
 dkim=pass (1024-bit key) header.d=suse.de header.i=@suse.de
 header.b="We4FMch6"; 
 dkim=permerror (0-bit key) header.d=suse.de header.i=@suse.de
 header.b="T8yGJQsN"
Received: from relay2.suse.de (relay2.suse.de [149.44.160.134])
 by smtp-out2.suse.de (Postfix) with ESMTP id 5810E1F782;
 Wed,  3 Nov 2021 14:18:34 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=suse.de; s=susede2_rsa;
 t=1635949114; h=from:from:reply-to:date:date:message-id:message-id:to:to:cc:cc:
 mime-version:mime-version:content-type:content-type:
 in-reply-to:in-reply-to:references:references;
 bh=bZiy8+R10laDHdPkOqf3gl989LSBmS3/sKvlOAhnTdw=;
 b=We4FMch6fseCs7suiZ3KGV0K8nXA149QGZVVf4/B+fFqpy1tWOmwO8iWbjWB4e7KSnuaid
 PkIMZc1n6JkVyEphzhIVh1TLHXdvbDJ8XxHv1mNDtq1YR/xq0g4m/4lu51l5f3j1I/ahhW
 F030o5/Ga4IKoU88PJPRUD/x9+qhw7U=
DKIM-Signature: v=1; a=ed25519-sha256; c=relaxed/relaxed; d=suse.de;
 s=susede2_ed25519; t=1635949114;
 h=from:from:reply-to:date:date:message-id:message-id:to:to:cc:cc:
 mime-version:mime-version:content-type:content-type:
 in-reply-to:in-reply-to:references:references;
 bh=bZiy8+R10laDHdPkOqf3gl989LSBmS3/sKvlOAhnTdw=;
 b=T8yGJQsNI9H//dm0c7XvhaZYye8UPugzBUp/g1WchImCdAG8jFQVK0lF4delNTnZI9hcq0
 RPicqXqb6Wn3Z9Aw==
Received: from alsa1.suse.de (alsa1.suse.de [10.160.4.42])
 by relay2.suse.de (Postfix) with ESMTP id 4A06D2C144;
 Wed,  3 Nov 2021 14:18:34 +0000 (UTC)
Date: Wed, 03 Nov 2021 15:18:34 +0100
Message-ID: <s5h7ddpmif9.wl-tiwai@suse.de>
From: Takashi Iwai <tiwai@suse.de>
To: Sameer Pujar <spujar@nvidia.com>
Subject: Re: [PATCH v2 01/10] ASoC: tegra: Fix kcontrol put callback in ADMAIF
In-Reply-To: <s5ha6ilmiiv.wl-tiwai@suse.de>
References: <1635947547-24391-1-git-send-email-spujar@nvidia.com>
 <1635947547-24391-2-git-send-email-spujar@nvidia.com>
 <s5ha6ilmiiv.wl-tiwai@suse.de>
User-Agent: Wanderlust/2.15.9 (Almost Unreal) SEMI/1.14.6 (Maruoka)
 FLIM/1.14.9 (=?UTF-8?B?R29qxY0=?=) APEL/10.8 Emacs/25.3
 (x86_64-suse-linux-gnu) MULE/6.0 (HANACHIRUSATO)
MIME-Version: 1.0 (generated by SEMI 1.14.6 - "Maruoka")
Content-Type: text/plain; charset=US-ASCII
Cc: alsa-devel@alsa-project.org, lgirdwood@gmail.com,
 linux-kernel@vger.kernel.org, tiwai@suse.com, jonathanh@nvidia.com,
 broonie@kernel.org, thierry.reding@gmail.com, linux-tegra@vger.kernel.org
X-BeenThere: alsa-devel@alsa-project.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: "Alsa-devel mailing list for ALSA developers -
 http://www.alsa-project.org" <alsa-devel.alsa-project.org>
List-Unsubscribe: <https://mailman.alsa-project.org/mailman/options/alsa-devel>, 
 <mailto:alsa-devel-request@alsa-project.org?subject=unsubscribe>
List-Archive: <http://mailman.alsa-project.org/pipermail/alsa-devel/>
List-Post: <mailto:alsa-devel@alsa-project.org>
List-Help: <mailto:alsa-devel-request@alsa-project.org?subject=help>
List-Subscribe: <https://mailman.alsa-project.org/mailman/listinfo/alsa-devel>, 
 <mailto:alsa-devel-request@alsa-project.org?subject=subscribe>
Errors-To: alsa-devel-bounces@alsa-project.org
Sender: "Alsa-devel" <alsa-devel-bounces@alsa-project.org>

On Wed, 03 Nov 2021 15:16:24 +0100,
Takashi Iwai wrote:
> 
> On Wed, 03 Nov 2021 14:52:17 +0100,
> Sameer Pujar wrote:
> > 
> > The kcontrol put callback is expected to return 1 when there is change
> > in HW or when the update is acknowledged by driver. This would ensure
> > that change notifications are sent to subscribed applications. Update
> > the ADMAIF driver accordingly
> > 
> > Fixes: f74028e159bb ("ASoC: tegra: Add Tegra210 based ADMAIF driver")
> > Suggested-by: Jaroslav Kysela <perex@perex.cz>
> > Suggested-by: Mark Brown <broonie@kernel.org>
> > Signed-off-by: Sameer Pujar <spujar@nvidia.com>
> > ---
> >  sound/soc/tegra/tegra210_admaif.c | 23 ++++++++++++++++++-----
> >  1 file changed, 18 insertions(+), 5 deletions(-)
> > 
> > diff --git a/sound/soc/tegra/tegra210_admaif.c b/sound/soc/tegra/tegra210_admaif.c
> > index bcccdf3..dc71075 100644
> > --- a/sound/soc/tegra/tegra210_admaif.c
> > +++ b/sound/soc/tegra/tegra210_admaif.c
> > @@ -452,16 +452,29 @@ static int tegra_admaif_put_control(struct snd_kcontrol *kcontrol,
> >  	struct tegra_admaif *admaif = snd_soc_component_get_drvdata(cmpnt);
> >  	int value = ucontrol->value.integer.value[0];
> >  
> > -	if (strstr(kcontrol->id.name, "Playback Mono To Stereo"))
> > +	if (strstr(kcontrol->id.name, "Playback Mono To Stereo")) {
> > +		if (admaif->mono_to_stereo[ADMAIF_TX_PATH][ec->reg] == value)
> > +			return 0;
> > +
> >  		admaif->mono_to_stereo[ADMAIF_TX_PATH][ec->reg] = value;
> > -	else if (strstr(kcontrol->id.name, "Capture Mono To Stereo"))
> > +	} else if (strstr(kcontrol->id.name, "Capture Mono To Stereo")) {
> > +		if (admaif->mono_to_stereo[ADMAIF_RX_PATH][ec->reg] == value)
> > +			return 0;
> > +
> >  		admaif->mono_to_stereo[ADMAIF_RX_PATH][ec->reg] = value;
> > -	else if (strstr(kcontrol->id.name, "Playback Stereo To Mono"))
> > +	} else if (strstr(kcontrol->id.name, "Playback Stereo To Mono")) {
> > +		if (admaif->stereo_to_mono[ADMAIF_TX_PATH][ec->reg] == value)
> > +			return 0;
> > +
> >  		admaif->stereo_to_mono[ADMAIF_TX_PATH][ec->reg] = value;
> > -	else if (strstr(kcontrol->id.name, "Capture Stereo To Mono"))
> > +	} else if (strstr(kcontrol->id.name, "Capture Stereo To Mono")) {
> > +		if (admaif->stereo_to_mono[ADMAIF_RX_PATH][ec->reg] == value)
> > +			return 0;
> > +
> >  		admaif->stereo_to_mono[ADMAIF_RX_PATH][ec->reg] = value;
> > +	}
> >  
> > -	return 0;
> > +	return 1;
> 
> Hrm, that looks too redundant.  The similar checks are seen in the get
> part, so we may have a better helper function to reduce the string
> checks, something like below.
> 
> 
> BTW, independent from this patch set, I noticed that those get/put
> callbacks handle the wrong type.  For enum ctls, you have to use 
> ucontrol->value.enumerated.value instead of
> ucontrol->value.integer.value.  The former is long while the latter is
> int, hence they may have different sizes.
> 
> Such a bug could be caught if you test once with
> CONFIG_SND_CTL_VALIDATION=y.  It's recommended to test with that
> config once for a new driver code.
> 
> So, please submit the fix patch(es) for correcting the ctl value
> types, too.
> 
> 
> thanks,
> 
> Takashi
> 
> --- a/sound/soc/tegra/tegra210_admaif.c
> +++ b/sound/soc/tegra/tegra210_admaif.c
> @@ -424,44 +424,46 @@ static const struct snd_soc_dai_ops tegra_admaif_dai_ops = {
>  	.trigger	= tegra_admaif_trigger,
>  };
>  
> -static int tegra_admaif_get_control(struct snd_kcontrol *kcontrol,
> -				    struct snd_ctl_elem_value *ucontrol)
> +static unsigned int *tegra_admaif_route_val(struct snd_kcontrol *kcontrol)
>  {
>  	struct snd_soc_component *cmpnt = snd_soc_kcontrol_component(kcontrol);
>  	struct soc_enum *ec = (struct soc_enum *)kcontrol->private_value;
>  	struct tegra_admaif *admaif = snd_soc_component_get_drvdata(cmpnt);
> -	long *uctl_val = &ucontrol->value.integer.value[0];
>  
>  	if (strstr(kcontrol->id.name, "Playback Mono To Stereo"))
> -		*uctl_val = admaif->mono_to_stereo[ADMAIF_TX_PATH][ec->reg];
> +		return &admaif->mono_to_stereo[ADMAIF_TX_PATH][ec->reg];
>  	else if (strstr(kcontrol->id.name, "Capture Mono To Stereo"))
> -		*uctl_val = admaif->mono_to_stereo[ADMAIF_RX_PATH][ec->reg];
> +		return &admaif->mono_to_stereo[ADMAIF_RX_PATH][ec->reg];
>  	else if (strstr(kcontrol->id.name, "Playback Stereo To Mono"))
> -		*uctl_val = admaif->stereo_to_mono[ADMAIF_TX_PATH][ec->reg];
> +		return &admaif->stereo_to_mono[ADMAIF_TX_PATH][ec->reg];
>  	else if (strstr(kcontrol->id.name, "Capture Stereo To Mono"))
> -		*uctl_val = admaif->stereo_to_mono[ADMAIF_RX_PATH][ec->reg];
> +		return &admaif->stereo_to_mono[ADMAIF_RX_PATH][ec->reg];
> +	return NULL;
> +}
>  
> +static int tegra_admaif_get_control(struct snd_kcontrol *kcontrol,
> +				    struct snd_ctl_elem_value *ucontrol)
> +{
> +	unsigned int *valp = tegra_admaif_route_val(admaif, kcontrol);

The admaif argument is superfluous here, drop it.

My patch is just for bringing an idea, and feel free to cook in your
own way, of course.


Takashi

> +
> +	if (!valp)
> +		return -EINVAL;
> +	ucontrol->value.integer.value[0] = *valp;
>  	return 0;
>  }
>  
>  static int tegra_admaif_put_control(struct snd_kcontrol *kcontrol,
>  				    struct snd_ctl_elem_value *ucontrol)
>  {
> -	struct snd_soc_component *cmpnt = snd_soc_kcontrol_component(kcontrol);
> -	struct soc_enum *ec = (struct soc_enum *)kcontrol->private_value;
> -	struct tegra_admaif *admaif = snd_soc_component_get_drvdata(cmpnt);
> +	unsigned int *valp = tegra_admaif_route_val(admaif, kcontrol);
>  	int value = ucontrol->value.integer.value[0];
>  
> -	if (strstr(kcontrol->id.name, "Playback Mono To Stereo"))
> -		admaif->mono_to_stereo[ADMAIF_TX_PATH][ec->reg] = value;
> -	else if (strstr(kcontrol->id.name, "Capture Mono To Stereo"))
> -		admaif->mono_to_stereo[ADMAIF_RX_PATH][ec->reg] = value;
> -	else if (strstr(kcontrol->id.name, "Playback Stereo To Mono"))
> -		admaif->stereo_to_mono[ADMAIF_TX_PATH][ec->reg] = value;
> -	else if (strstr(kcontrol->id.name, "Capture Stereo To Mono"))
> -		admaif->stereo_to_mono[ADMAIF_RX_PATH][ec->reg] = value;
> -
> -	return 0;
> +	if (!valp)
> +		return -EINVAL;
> +	if (value == *valp)
> +		return 0;
> +	*valp = value;
> +	return 1;
>  }
>  
>  static int tegra_admaif_dai_probe(struct snd_soc_dai *dai)
> 
