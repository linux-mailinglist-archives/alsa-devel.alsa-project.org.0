Return-Path: <alsa-devel-bounces@alsa-project.org>
X-Original-To: lists+alsa-devel@lfdr.de
Delivered-To: lists+alsa-devel@lfdr.de
Received: from alsa0.perex.cz (alsa0.perex.cz [77.48.224.243])
	by mail.lfdr.de (Postfix) with ESMTPS id 0CCDC1DC56F
	for <lists+alsa-devel@lfdr.de>; Thu, 21 May 2020 05:03:01 +0200 (CEST)
Received: from alsa1.perex.cz (alsa1.perex.cz [207.180.221.201])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by alsa0.perex.cz (Postfix) with ESMTPS id A7E081821;
	Thu, 21 May 2020 05:02:10 +0200 (CEST)
DKIM-Filter: OpenDKIM Filter v2.11.0 alsa0.perex.cz A7E081821
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=alsa-project.org;
	s=default; t=1590030180;
	bh=vDO7WTY2M7pRPnCLTGDUUir/m77rAtKWV/UU+YZOu/c=;
	h=Date:From:To:Subject:In-Reply-To:References:Cc:List-Id:
	 List-Unsubscribe:List-Archive:List-Post:List-Help:List-Subscribe:
	 From;
	b=IrYIsYAF7ldF4Ma2P8TU0+Qyo79qIjjj3iT/PM6oe/NsM5S+FUTAt3TDNZKhNdvE7
	 WZ+1MHtMGBtoxH0AR1JNn4vEqHw1iFKwpDCaxnqVVJZsody0XFjHlPEeBhI8fU1muf
	 1f0vlnpXpJc5hcNvLj7gLIMybIxteJFcPE39Ss3g=
Received: from alsa1.perex.cz (localhost.localdomain [127.0.0.1])
	by alsa1.perex.cz (Postfix) with ESMTP id 97A5CF801D8;
	Thu, 21 May 2020 05:01:19 +0200 (CEST)
X-Original-To: alsa-devel@alsa-project.org
Delivered-To: alsa-devel@alsa-project.org
Received: by alsa1.perex.cz (Postfix, from userid 50401)
 id A0FF1F801D8; Thu, 21 May 2020 05:01:16 +0200 (CEST)
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on alsa1.perex.cz
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=SPF_HELO_NONE,SPF_PASS
 autolearn=disabled version=3.4.0
Received: from relmlie6.idc.renesas.com (relmlor2.renesas.com
 [210.160.252.172])
 by alsa1.perex.cz (Postfix) with ESMTP id C2E37F80161
 for <alsa-devel@alsa-project.org>; Thu, 21 May 2020 05:01:09 +0200 (CEST)
DKIM-Filter: OpenDKIM Filter v2.11.0 alsa1.perex.cz C2E37F80161
Date: 21 May 2020 12:01:02 +0900
X-IronPort-AV: E=Sophos;i="5.73,416,1583161200"; d="scan'208";a="47417450"
Received: from unknown (HELO relmlir6.idc.renesas.com) ([10.200.68.152])
 by relmlie6.idc.renesas.com with ESMTP; 21 May 2020 12:01:02 +0900
Received: from mercury.renesas.com (unknown [10.166.252.133])
 by relmlir6.idc.renesas.com (Postfix) with ESMTP id ACC8E4171DFC;
 Thu, 21 May 2020 12:01:02 +0900 (JST)
Message-ID: <87r1ve3sb5.wl-kuninori.morimoto.gx@renesas.com>
From: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
To: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
Subject: Re: ASoC dailink capture/playback flags
In-Reply-To: <b8b658b5-9c9b-5174-c2df-31ce34a66d75@linux.intel.com>
References: <b8b658b5-9c9b-5174-c2df-31ce34a66d75@linux.intel.com>
User-Agent: Wanderlust/2.15.9 Emacs/25.2 Mule/6.0
MIME-Version: 1.0 (generated by SEMI-EPG 1.14.7 - "Harue")
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: quoted-printable
Cc: "moderated list:SOUND - SOC LAYER / DYNAMIC AUDIO POWER MANAGEM..."
 <alsa-devel@alsa-project.org>, Stephan Gerhold <stephan@gerhold.net>,
 Kai Vehmanen <kai.vehmanen@linux.intel.com>, Takashi Iwai <tiwai@suse.de>,
 Ranjani Sridharan <ranjani.sridharan@linux.intel.com>, "Wang,
 Rander" <rander.wang@intel.com>, Mark Brown <broonie@kernel.org>,
 Bard liao <yung-chuan.liao@linux.intel.com>
X-BeenThere: alsa-devel@alsa-project.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: "Alsa-devel mailing list for ALSA developers -
 http://www.alsa-project.org" <alsa-devel.alsa-project.org>
List-Unsubscribe: <https://mailman.alsa-project.org/mailman/options/alsa-devel>, 
 <mailto:alsa-devel-request@alsa-project.org?subject=unsubscribe>
List-Archive: <http://mailman.alsa-project.org/pipermail/alsa-devel/>
List-Post: <mailto:alsa-devel@alsa-project.org>
List-Help: <mailto:alsa-devel-request@alsa-project.org?subject=help>
List-Subscribe: <https://mailman.alsa-project.org/mailman/listinfo/alsa-devel>, 
 <mailto:alsa-devel-request@alsa-project.org?subject=subscribe>
Errors-To: alsa-devel-bounces@alsa-project.org
Sender: "Alsa-devel" <alsa-devel-bounces@alsa-project.org>


Hi Pierre-Louis

> struct snd_soc_dai_link {
> [...]
>=20
> =A0=A0=A0 /* For unidirectional dai links */
> =A0=A0=A0 unsigned int playback_only:1;
> =A0=A0=A0 unsigned int capture_only:1;
>=20
> [...]
>=20
> =A0=A0=A0 /* DPCM capture and Playback support */
> =A0=A0=A0 unsigned int dpcm_capture:1;
> =A0=A0=A0 unsigned int dpcm_playback:1;
> [...]
>=20
> };

I confirmed it.
If my understand was correct...

dpcm_xxx were added to distinguish "dummy" DAI or not, by

	1e9de42f4324b91ce2e9da0939cab8fc6ae93893
	ASoC: dpcm: Explicitly set BE DAI link supported stream directions

xxx_only were added to handle unidirectional such as Freescale MX28, by

	d6bead020d8f8bcaca5cdcb035250c44b21c93e7
	ASoC: soc-pcm: Allow to specify unidirectional dai_link

> - when using DPCM, is there an expectation to use dpcm_ flags only?

I think it is needed if it was not dummy DAI.

> - should we instead use playback/capture_only when only one of the two
> dpcm_ flags is set?
>=20
> - should we flags errors if we ever encounter cases with
> e.g. dpcm_playback =3D true and capture_only =3D true?
>=20
> - do we actually need two sets of definitions? There are very few
> users of the .playback_only and .capture_only flags and only a single
> place where it's checked in soc-pcm.c

I wonder why xxx_only were needed when it was unidirection ?
I guess one of playback/capture will be (should be ?)
automatically 0 in such case at soc_new_pcm() ??

...? dummy DAI was the reason ??
Do we need below or similar patch ?
(not tested)

If so, and if we can handle dummy DAI correctly at soc_new_pcm() somehow,
we can automatically judge dpcm_xxx and xxx_only and is able to remove them?

----------------
diff --git a/sound/soc/soc-pcm.c b/sound/soc/soc-pcm.c
index 80dd3cf6200c..dc89ead4ec62 100644
--- a/sound/soc/soc-pcm.c
+++ b/sound/soc/soc-pcm.c
@@ -2811,6 +2811,9 @@ int soc_new_pcm(struct snd_soc_pcm_runtime *rtd, int =
num)
 			SNDRV_PCM_STREAM_CAPTURE : SNDRV_PCM_STREAM_PLAYBACK;
=20
 		for_each_rtd_codec_dais(rtd, i, codec_dai) {
+			if (!strcmp(codec_dai->component->name, "snd-soc-dummy"))
+				continue;
+
 			if (rtd->num_cpus =3D=3D 1) {
 				cpu_dai =3D asoc_rtd_to_cpu(rtd, 0);
 			} else if (rtd->num_cpus =3D=3D rtd->num_codecs) {
----------------


Thank you for your help !!

Best regards
---
Kuninori Morimoto
