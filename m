Return-Path: <alsa-devel-bounces@alsa-project.org>
X-Original-To: lists+alsa-devel@lfdr.de
Delivered-To: lists+alsa-devel@lfdr.de
Received: from alsa0.perex.cz (alsa0.perex.cz [77.48.224.243])
	by mail.lfdr.de (Postfix) with ESMTPS id 46CBE25F566
	for <lists+alsa-devel@lfdr.de>; Mon,  7 Sep 2020 10:35:47 +0200 (CEST)
Received: from alsa1.perex.cz (alsa1.perex.cz [207.180.221.201])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by alsa0.perex.cz (Postfix) with ESMTPS id D3C8317AC;
	Mon,  7 Sep 2020 10:34:56 +0200 (CEST)
DKIM-Filter: OpenDKIM Filter v2.11.0 alsa0.perex.cz D3C8317AC
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=alsa-project.org;
	s=default; t=1599467746;
	bh=cVPSZ/bAbdY3KkYfEwrm6XZ2QSRPGItv94rF/Eyp+xY=;
	h=Date:From:To:Subject:In-Reply-To:References:Cc:List-Id:
	 List-Unsubscribe:List-Archive:List-Post:List-Help:List-Subscribe:
	 From;
	b=CJLPy8jdyMe82wSIJl2gB62VxdXyn5+FPu5NM9zPa3j+n9ByckUS7MZJArQ5aHQ7b
	 T5GuvLckQkuH5mIxG9VmP9QgKzz1wtxpojq65hdiQ5eaSGF7XlsjMYAt+PvLLQOZtG
	 o3MVJf+NjOJRfJ8MoPYVWzQFr4qkHAfQHzCN+RWg=
Received: from alsa1.perex.cz (localhost.localdomain [127.0.0.1])
	by alsa1.perex.cz (Postfix) with ESMTP id BFB07F8028B;
	Mon,  7 Sep 2020 10:34:18 +0200 (CEST)
X-Original-To: alsa-devel@alsa-project.org
Delivered-To: alsa-devel@alsa-project.org
Received: by alsa1.perex.cz (Postfix, from userid 50401)
 id 6290EF8028B; Mon,  7 Sep 2020 10:34:10 +0200 (CEST)
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on alsa1.perex.cz
X-Spam-Level: 
X-Spam-Status: No, score=-0.0 required=5.0 tests=RCVD_IN_MSPIKE_H3,
 RCVD_IN_MSPIKE_WL,SPF_HELO_NONE,SPF_PASS,URIBL_BLOCKED autolearn=disabled
 version=3.4.0
Received: from mx2.suse.de (mx2.suse.de [195.135.220.15])
 (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
 (No client certificate requested)
 by alsa1.perex.cz (Postfix) with ESMTPS id 29A64F800B9
 for <alsa-devel@alsa-project.org>; Mon,  7 Sep 2020 10:34:02 +0200 (CEST)
DKIM-Filter: OpenDKIM Filter v2.11.0 alsa1.perex.cz 29A64F800B9
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay2.suse.de (unknown [195.135.221.27])
 by mx2.suse.de (Postfix) with ESMTP id 6C87AB6FD;
 Mon,  7 Sep 2020 08:34:03 +0000 (UTC)
Date: Mon, 07 Sep 2020 10:34:02 +0200
Message-ID: <s5hv9gqyohx.wl-tiwai@suse.de>
From: Takashi Iwai <tiwai@suse.de>
To: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Subject: Re: [PATCH 10/11] ALSA: firewire: Replace tasklet with work
In-Reply-To: <20200906082628.GA74660@workstation>
References: <20200903104131.21097-1-tiwai@suse.de>
 <20200903104131.21097-11-tiwai@suse.de>
 <20200906082628.GA74660@workstation>
User-Agent: Wanderlust/2.15.9 (Almost Unreal) SEMI/1.14.6 (Maruoka)
 FLIM/1.14.9 (=?UTF-8?B?R29qxY0=?=) APEL/10.8 Emacs/25.3
 (x86_64-suse-linux-gnu) MULE/6.0 (HANACHIRUSATO)
MIME-Version: 1.0 (generated by SEMI 1.14.6 - "Maruoka")
Content-Type: text/plain; charset=US-ASCII
Cc: alsa-devel@alsa-project.org, Clemens Ladisch <clemens@ladisch.de>
X-BeenThere: alsa-devel@alsa-project.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: "Alsa-devel mailing list for ALSA developers -
 http://www.alsa-project.org" <alsa-devel.alsa-project.org>
List-Unsubscribe: <https://mailman.alsa-project.org/mailman/options/alsa-devel>, 
 <mailto:alsa-devel-request@alsa-project.org?subject=unsubscribe>
List-Archive: <http://mailman.alsa-project.org/pipermail/alsa-devel/>
List-Post: <mailto:alsa-devel@alsa-project.org>
List-Help: <mailto:alsa-devel-request@alsa-project.org?subject=help>
List-Subscribe: <https://mailman.alsa-project.org/mailman/listinfo/alsa-devel>, 
 <mailto:alsa-devel-request@alsa-project.org?subject=subscribe>
Errors-To: alsa-devel-bounces@alsa-project.org
Sender: "Alsa-devel" <alsa-devel-bounces@alsa-project.org>

On Sun, 06 Sep 2020 10:26:28 +0200,
Takashi Sakamoto wrote:
> 
> Hi,
> 
> On Thu, Sep 03, 2020 at 12:41:30PM +0200, Takashi Iwai wrote:
> > The tasklet is an old API that should be deprecated, usually can be
> > converted to another decent API.  In FireWire driver, a tasklet is
> > still used for offloading the AMDTP PCM stream handling.  It can be
> > achieved gracefully with a work queued, too.
> > 
> > This patch replaces the tasklet usage in firewire-lib driver with a
> > simple work.  The conversion is fairly straightforward but for the
> > in_interrupt() checks that are replaced with the check using the
> > current_work().
> > 
> > Signed-off-by: Takashi Iwai <tiwai@suse.de>
> > ---
> >  sound/firewire/amdtp-stream-trace.h |  2 +-
> >  sound/firewire/amdtp-stream.c       | 25 +++++++++++++------------
> >  sound/firewire/amdtp-stream.h       |  2 +-
> >  3 files changed, 15 insertions(+), 14 deletions(-)
> 
> After testing this patch, I agree with the usage of
> '(current_work() == &s->period_work)' as an alternative of 'in_interrupt()'.
> 
> However, the usage is not appropriate for tracepoints event in the case.
> 
> > diff --git a/sound/firewire/amdtp-stream-trace.h b/sound/firewire/amdtp-stream-trace.h
> > index 26e7cb555d3c..5386d548cada 100644
> > --- a/sound/firewire/amdtp-stream-trace.h
> > +++ b/sound/firewire/amdtp-stream-trace.h
> > @@ -49,7 +49,7 @@ TRACE_EVENT(amdtp_packet,
> >  		__entry->data_blocks = data_blocks;
> >  		__entry->data_block_counter = data_block_counter,
> >  		__entry->packet_index = s->packet_index;
> > -		__entry->irq = !!in_interrupt();
> > +		__entry->irq = (current_work() == &s->period_work);
> >  		__entry->index = index;
> >  	),
> >  	TP_printk(
> 
> The tracepoints event is probed in two contexts:
>  * softirq for isochronous context to process hardware events of 1394 OHCI.
>  * user task of ALSA PCM applications.
> 
> However, it's not probed in the workqueue task since the case is already
> avoided carefully in below patch:
> 
> > @@ -1184,7 +1185,7 @@ unsigned long amdtp_domain_stream_pcm_pointer(struct amdtp_domain *d,
> >  
> >  	if (irq_target && amdtp_stream_running(irq_target)) {
> >  		// This function is called in software IRQ context of
> > -		// period_tasklet or process context.
> > +		// period_work or process context.
> >  		//
> >  		// When the software IRQ context was scheduled by software IRQ
> >  		// context of IT contexts, queued packets were already handled.
> > @@ -1195,9 +1196,9 @@ unsigned long amdtp_domain_stream_pcm_pointer(struct amdtp_domain *d,
> >  		// immediately to keep better granularity of PCM pointer.
> >  		//
> >  		// Later, the process context will sometimes schedules software
> > -		// IRQ context of the period_tasklet. Then, no need to flush the
> > +		// IRQ context of the period_work. Then, no need to flush the
> >  		// queue by the same reason as described in the above
> > -		if (!in_interrupt()) {
> > +		if (current_work() != &s->period_work) {
> >  			// Queued packet should be processed without any kernel
> >  			// preemption to keep latency against bus cycle.
> >  			preempt_disable();
> 
> as long as testing, I can see no logs for the trancepoints event with the 'irq' field is 1.
> I would like you to leave 'amdtp-stream-trace.h' as is by dropping the above change since
> the irq field should record whether the context is softirq or user task.

OK, makes sense.  Will fix in v2.
Thanks for reviewing!


Takashi
