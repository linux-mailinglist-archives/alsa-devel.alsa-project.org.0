Return-Path: <alsa-devel-bounces@alsa-project.org>
X-Original-To: lists+alsa-devel@lfdr.de
Delivered-To: lists+alsa-devel@lfdr.de
Received: from alsa0.perex.cz (alsa0.perex.cz [77.48.224.243])
	by mail.lfdr.de (Postfix) with ESMTPS id AA6EB9BF140
	for <lists+alsa-devel@lfdr.de>; Wed,  6 Nov 2024 16:09:50 +0100 (CET)
Received: from alsa1.perex.cz (alsa1.perex.cz [207.180.221.201])
	(using TLSv1.2 with cipher ADH-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by alsa0.perex.cz (Postfix) with ESMTPS id CBA741F1;
	Wed,  6 Nov 2024 16:09:39 +0100 (CET)
DKIM-Filter: OpenDKIM Filter v2.11.0 alsa0.perex.cz CBA741F1
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=alsa-project.org;
	s=default; t=1730905789;
	bh=j+Xip9eQeSew4u+bvyfvv98SNYkdrzGllaTJhPKoH4o=;
	h=From:To:In-Reply-To:References:Subject:Date:List-Id:List-Archive:
	 List-Help:List-Owner:List-Post:List-Subscribe:List-Unsubscribe:
	 From;
	b=KC7vxwAiCxBs/EA8tuRv7q+p7Vm3KQlFY38CCxBCEdc+ekPml3HmmE6ZMn0bqqzRv
	 WvOM4dphxhb9ZD0bI9NGKLJSGDgSpJyOEMfFE1PGszTqzNmzg5tUrpDOnEZ0u2NVxT
	 FU5MrAIdWFDcl2KXDGDEF0E7Pd9VevKhNq0xZEIk=
Received: by alsa1.perex.cz (Postfix, from userid 50401)
	id 55DF6F805E7; Wed,  6 Nov 2024 16:09:14 +0100 (CET)
Received: from mailman-core.alsa-project.org (mailman-core.alsa-project.org [10.254.200.10])
	by alsa1.perex.cz (Postfix) with ESMTP id 0CEF0F805DA;
	Wed,  6 Nov 2024 16:09:14 +0100 (CET)
Received: by alsa1.perex.cz (Postfix, from userid 50401)
	id BBE4EF805CA; Wed,  6 Nov 2024 16:09:10 +0100 (CET)
X-Spam-Checker-Version: SpamAssassin 3.4.6 (2021-04-09) on alsa1.perex.cz
X-Spam-Level: *
X-Spam-Status: No, score=1.5 required=5.0 tests=MISSING_DATE,MISSING_MID,
	RCVD_IN_DNSWL_BLOCKED,RCVD_IN_VALIDITY_CERTIFIED_BLOCKED,
	RCVD_IN_VALIDITY_RPBL_BLOCKED,SPF_HELO_NONE,SPF_PASS shortcircuit=no
	autolearn=no autolearn_force=no version=3.4.6
Received: from webhooks-bot.alsa-project.org (vmi242170.contaboserver.net
 [207.180.221.201])
	by alsa1.perex.cz (Postfix) with ESMTP id 13159F805BF
	for <alsa-devel@alsa-project.org>; Wed,  6 Nov 2024 16:09:09 +0100 (CET)
DKIM-Filter: OpenDKIM Filter v2.11.0 alsa1.perex.cz 13159F805BF
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: base64
From: GitHub issues - edited <github@alsa-project.org>
To: alsa-devel@alsa-project.org
In-Reply-To: <1730905749056853056-webhooks-bot@alsa-project.org>
References: <1730905749056853056-webhooks-bot@alsa-project.org>
Subject: BridgeCast v2 not working properly despite V2 configuration files
Message-Id: <20241106150910.BBE4EF805CA@alsa1.perex.cz>
Date: Wed,  6 Nov 2024 16:09:10 +0100 (CET)
Message-ID-Hash: 6DEP6P4GHVC3RK2MUKIGZMCKL27DFICX
X-Message-ID-Hash: 6DEP6P4GHVC3RK2MUKIGZMCKL27DFICX
X-MailFrom: github@alsa-project.org
X-Mailman-Rule-Misses: dmarc-mitigation; no-senders; approved; emergency;
 loop; banned-address; member-moderation;
 header-match-alsa-devel.alsa-project.org-0;
 header-match-alsa-devel.alsa-project.org-1; nonmember-moderation;
 administrivia; implicit-dest; max-recipients; max-size; news-moderation;
 no-subject; digests; suspicious-header
X-Mailman-Version: 3.3.9
Precedence: list
List-Id: "Alsa-devel mailing list for ALSA developers -
 http://www.alsa-project.org" <alsa-devel.alsa-project.org>
Archived-At: 
 <https://mailman.alsa-project.org/hyperkitty/list/alsa-devel@alsa-project.org/message/6DEP6P4GHVC3RK2MUKIGZMCKL27DFICX/>
List-Archive: 
 <https://mailman.alsa-project.org/hyperkitty/list/alsa-devel@alsa-project.org/>
List-Help: <mailto:alsa-devel-request@alsa-project.org?subject=help>
List-Owner: <mailto:alsa-devel-owner@alsa-project.org>
List-Post: <mailto:alsa-devel@alsa-project.org>
List-Subscribe: <mailto:alsa-devel-join@alsa-project.org>
List-Unsubscribe: <mailto:alsa-devel-leave@alsa-project.org>

YWxzYS1wcm9qZWN0L2Fsc2EtdWNtLWNvbmYgaXNzdWUgIzQ1OCB3YXMgZWRpdGVkIGZyb20gYWNl
cmFtbW9zOgoKSGkgZXZlcnlib2R5LA0KDQpJIChzYWRseSkgbWFkZSB0aGUgZmlybXdhcmUgdXBk
YXRlIGZvciB0aGUgUm9sYW5kIEJyaWRnZUNhc3QgYW5kIGl0IGNhbWUgb3V0IGJyb2tlbi4NCkl0
IHdhcyB3b3JraW5nIGZsYXdsZXNzbHkgYmVmb3JlIHRoZSB1cGRhdGUsIHRoYW5rcyB0byB5b3Ug
aSBoYWQgYWxsIHRoZSBPdXRwdXQvSW5wdXQgY2hhbm5lbHMgYXZhaWxhYmxlIGFuZCBpIHdhcyBh
YmxlIHRvIGFzc2lnbiBzb3VuZCBzb3VyY2VzIG9uIHRoZW0gaW5kaXZpZHVhbGx5IHRocm91Z2gg
dGhlIHN5c3RlbSBzZXR0aW5ncyBndWkgKEttaXggLSBQbGFzbWEpLg0KDQpUb2RheSwgYXMgYSBu
b3cgIlYyIiwgaXQgaXMgb3Zlci4gVGhlIEJyaWRnZUNhc3Qgc2VlbXMgdG8gYmUgYXNzaWduZWQg
dG8gdGhlIG5ldyBjb25mIGZpbGVzIHdpdGggaXRzIG5ldyB1c2IgdGFnLCB0byBgQnJpZGdlQ2Fz
dFYyLUhpZmkuY29uZmAgYW5kIG5vdCBmb3JtZXIgdGhlIGBCcmlkZ2VDYXN0LUhpZmkuY29uZmAu
IEl0IHNlZW1zIHRvIGJlIGEgZ29vZCBzdGFydCwgdGhhbmtzIHRvIEZ1bG1lciBmb3IgdGhlIG1l
cmdlIGFuZCBmaXJzdCB0ZXN0aW5nIFJvbGFuZCdzIHVwZGF0ZS4NCg0KQnV0IG5vdywgaSBoYXZl
IGEgd2VpcmQgbWl4IG9mICJhdXhpbGlhcnkgY2hhbm5lbHMiIGluc3RlYWQgb2YgcHJvcGVyIGF1
ZGlvIG91dHB1dHMgbGlrZSBiZWZvcmUgOiANCg0KIVtDb3BpZSBkJ8OpY3Jhbl8yMDI0MTEwNl8x
NTQ0MjhdKGh0dHBzOi8vZ2l0aHViLmNvbS91c2VyLWF0dGFjaG1lbnRzL2Fzc2V0cy80MjQwOTI0
Yi05NjUwLTQxZjQtYTE2Ny1hYWEwNWY2ZGFhYzkpDQo+IF8oVGVsbCBtZSBpZiB5b3UgbmVlZCBG
cj5FbiB0cmFuc2xhdGlvbiBvbiB0aGF0IHNjcmVlbnNob3QpXw0KDQpOb3RlIHRoYXQgImNocm9t
aXVtIiAod2ljaCBpcyBpbiBmYWN0IGEgY2xpZW50IGxpa2Ugc3BvdGlmeSwgcGxheWluZyBtdXNp
YykgY2Fubm90IGJlIGFzc2lnbmVkIHRvIGEgc3BlY2lmaWMgb3V0cHV0LCBiZWNhdXNlIEJyaWRn
ZUNhc3QgaXMgbm93IGRldGVjdGVkIHRvIGJlICJvbmx5IG9uZSBjaGFubmVsIiBzbyB0aGUgb3B0
aW9uIGlzIG1pc3NpbmcuIEFuIGV4ZW1wbGUgYWZ0ZXIgYWxzbyBlbmFibGluZyBteSBzcGVha2Vy
cyA6DQoNCiFbQ29waWUgZCfDqWNyYW5fMjAyNDExMDZfMTU1NzQ1XShodHRwczovL2dpdGh1Yi5j
b20vdXNlci1hdHRhY2htZW50cy9hc3NldHMvZDAxZDFhNjctZjA0MC00NjcyLWExY2MtZjY3YTE0
Yzc5ZDk1KQ0KPiBfT2xkIGJlaGF2aW91ciBhbGxvd2VkIG1lIHRvIGNob29zZSBiZXR3ZWVuIGFs
bCB0aGUgb3V0cHV0IGNoYW5uZWxzIG9mIHRoZSBCcmlkZ2VDYXN0LCBsaWtlICJHYW1lcyIsICJB
dXgiLCAiTXVzaWMiLCBDaGF0IiBvciAiU3lzdGVtIl8NCg0KU29tZXRoaW5nIGVsc2UgaSd2ZSAo
bWF5YmUpIG5vdGljZWQgaXMgdGhlIGRpZmZlcmVuY2VzIGZvciB0aGUgY2hhbm5lbCBtYXBzLCBi
ZXR3ZWVuIHRoZSBgY2F0IC9wcm9jL2Fzb3VuZC9jYXJkWC9zdHJlYW0wYCBjaGFubmVscyBvdXRw
dXQgYW5kIHdoYXQgaXMgd3JpdHRlbiBpbiB0aGUgYFJvbGFuZC9CcmlkZ2VDYXN0VjItSGlmaS5j
b25mYC4NCg0KYGNhdCAvcHJvYy9hc291bmQvY2FyZFgvc3RyZWFtMCA6YA0KDQpgYGANClJvbGFu
ZCBCUklER0UgQ0FTVCBWMiBhdCB1c2ItMDAwMDowMDoxNC4wLTEsIGhpZ2ggc3BlZWQgOiBVU0Ig
QXVkaW8NCg0KUGxheWJhY2s6DQogIFN0YXR1czogUnVubmluZw0KICAgIEludGVyZmFjZSA9IDEN
CiAgICBBbHRzZXQgPSAxDQogICAgUGFja2V0IFNpemUgPSAzOTINCiAgICBNb21lbnRhcnkgZnJl
cSA9IDQ4MDAwIEh6ICgweDYuMDAwMCkNCiAgSW50ZXJmYWNlIDENCiAgICBBbHRzZXQgMQ0KICAg
IEZvcm1hdDogUzMyX0xFDQogICAgQ2hhbm5lbHM6IDE0DQogICAgRW5kcG9pbnQ6IDB4MGQgKDEz
IE9VVCkgKEFTWU5DKQ0KICAgIFJhdGVzOiA0ODAwMA0KICAgIERhdGEgcGFja2V0IGludGVydmFs
OiAxMjUgdXMNCiAgICBCaXRzOiAyNA0KICAgIENoYW5uZWwgbWFwOiBGTCBGUiBGQyBMRkUgUkwg
UlIgRkxDIEZSQyBSQyBTTCBTUiBUQyAtLSAtLQ0KICAgIFN5bmMgRW5kcG9pbnQ6IDB4OGUgKDE0
IElOKQ0KICAgIFN5bmMgRVAgSW50ZXJmYWNlOiAyDQogICAgU3luYyBFUCBBbHRzZXQ6IDENCiAg
ICBJbXBsaWNpdCBGZWVkYmFjayBNb2RlOiBZZXMNCg0KQ2FwdHVyZToNCiAgU3RhdHVzOiBTdG9w
DQogIEludGVyZmFjZSAyDQogICAgQWx0c2V0IDENCiAgICBGb3JtYXQ6IFMzMl9MRQ0KICAgIENo
YW5uZWxzOiA2DQogICAgRW5kcG9pbnQ6IDB4OGUgKDE0IElOKSAoQVNZTkMpDQogICAgUmF0ZXM6
IDQ4MDAwDQogICAgRGF0YSBwYWNrZXQgaW50ZXJ2YWw6IDEyNSB1cw0KICAgIEJpdHM6IDI0DQog
ICAgQ2hhbm5lbCBtYXA6IEZMIEZSIEZDIExGRSBSTCBSUg0KICAgIFN5bmMgRW5kcG9pbnQ6IDB4
MGQgKDEzIE9VVCkNCiAgICBTeW5jIEVQIEludGVyZmFjZTogMQ0KICAgIFN5bmMgRVAgQWx0c2V0
OiAxDQogICAgSW1wbGljaXQgRmVlZGJhY2sgTW9kZTogWWVzDQpgYGANCg0KYEJyaWRnZUNhc3RW
Mi1IaWZpLmNvbmYgOmANCg0KYGBgDQpNYWNybyBbDQoJew0KCQlTcGxpdFBDTSB7DQoJCQlOYW1l
ICJiY19zdGVyZW9fb3V0Ig0KCQkJRGlyZWN0aW9uIFBsYXliYWNrDQoJCQlDaGFubmVscyAyDQoJ
CQlIV0NoYW5uZWxzIDE0DQoJCQlIV0NoYW5uZWxQb3MwIEZMDQoJCQlIV0NoYW5uZWxQb3MxIEZS
DQoJCQlIV0NoYW5uZWxQb3MyIEZMDQoJCQlIV0NoYW5uZWxQb3MzIEZSDQoJCQlIV0NoYW5uZWxQ
b3M0IEZMDQoJCQlIV0NoYW5uZWxQb3M1IEZSDQoJCQlIV0NoYW5uZWxQb3M2IEZMDQoJCQlIV0No
YW5uZWxQb3M3IEZSDQoJCQlIV0NoYW5uZWxQb3M4IEZMDQoJCQlIV0NoYW5uZWxQb3M5IEZSDQoJ
CQlIV0NoYW5uZWxQb3MxMCBGTA0KCQkJSFdDaGFubmVsUG9zMTEgRlINCgkJCUhXQ2hhbm5lbFBv
czEyIEZMDQoJCQlIV0NoYW5uZWxQb3MxMyBGUg0KCQl9DQoJfQ0KCXsNCgkJU3BsaXRQQ00gew0K
CQkJTmFtZSAiYmNfc3RlcmVvX2luIg0KCQkJRGlyZWN0aW9uIENhcHR1cmUNCgkJCUNoYW5uZWxz
IDINCgkJCUhXQ2hhbm5lbHMgNg0KCQkJSFdDaGFubmVsUG9zMCBGTA0KCQkJSFdDaGFubmVsUG9z
MSBGUg0KCQkJSFdDaGFubmVsUG9zMiBGTA0KCQkJSFdDaGFubmVsUG9zMyBGUg0KCQkJSFdDaGFu
bmVsUG9zNCBGTA0KCQkJSFdDaGFubmVsUG9zNSBGUg0KCQl9DQoJfQ0KXQ0KYGBgDQoNCkknbSBj
b21wbGV0ZWx5IG5ldyB0byB0aGlzIGtpbmQgb2YgY29kZS9saW51eCBkcml2ZXIgd2l6YXJkcnkg
c28gaSBoYXZlbid0IGJlZW4gYWJsZSB0byBnYXRoZXIgbW9yZSBkYXRhLCBidXQgaSdtIG5vdCBh
ZnJhaWQgdG8gYmUgbWVzc2luZyBhcm91bmQsIHNvIGlmIGkgY2FuIGJlIG9mIGFueSBoZWxwLCBz
Y3JlZW5zaG90LCBjb21tYW5kIG91dHB1dHMsIHJhbmRvbSBmaWxlIHRlc3RpbmcsIGknbGwgZ2xh
ZGx5IGhlbHAuDQoNClJlZ2FyZHMsIGFuZCB0aGFuayB5b3UgYWxsICENCg0KPiBfRWRpdHMgOiBT
cGVsbGluZy9HcmFtbWFyIG1pc3Rha2VzXwoKSXNzdWUgVVJMICAgICA6IGh0dHBzOi8vZ2l0aHVi
LmNvbS9hbHNhLXByb2plY3QvYWxzYS11Y20tY29uZi9pc3N1ZXMvNDU4ClJlcG9zaXRvcnkgVVJM
OiBodHRwczovL2dpdGh1Yi5jb20vYWxzYS1wcm9qZWN0L2Fsc2EtdWNtLWNvbmYK
