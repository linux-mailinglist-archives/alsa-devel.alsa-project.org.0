Return-Path: <alsa-devel-bounces@alsa-project.org>
X-Original-To: lists+alsa-devel@lfdr.de
Delivered-To: lists+alsa-devel@lfdr.de
Received: from alsa0.perex.cz (alsa0.perex.cz [77.48.224.243])
	by mail.lfdr.de (Postfix) with ESMTPS id E637F1A7B07
	for <lists+alsa-devel@lfdr.de>; Tue, 14 Apr 2020 14:43:12 +0200 (CEST)
Received: from alsa1.perex.cz (alsa1.perex.cz [207.180.221.201])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by alsa0.perex.cz (Postfix) with ESMTPS id 8853A16B5;
	Tue, 14 Apr 2020 14:42:22 +0200 (CEST)
DKIM-Filter: OpenDKIM Filter v2.11.0 alsa0.perex.cz 8853A16B5
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=alsa-project.org;
	s=default; t=1586868192;
	bh=qKSaG62CpfCu5i07mnF41kOh2irSiwQqFghsClQ4rJc=;
	h=Date:From:To:Subject:In-Reply-To:References:Cc:List-Id:
	 List-Unsubscribe:List-Archive:List-Post:List-Help:List-Subscribe:
	 From;
	b=dGVM2Z/rkSHvP3Rsbnj0qKMsMuGDkRADdIOKC4UnjTeZJIVMAaLGChQbHDg8ZAHC9
	 XtVY0DQVoxxPG6LPgcuFHusR+T7C6GCOwfyUcqLEC3aJNf4/ldmWePwK8PwXTWQweD
	 2A2ol6GhvZcjvvgbQXY4ax+8g6Nw40izRglZgAp0=
Received: from alsa1.perex.cz (localhost.localdomain [127.0.0.1])
	by alsa1.perex.cz (Postfix) with ESMTP id 36F3DF8014E;
	Tue, 14 Apr 2020 14:42:05 +0200 (CEST)
X-Original-To: alsa-devel@alsa-project.org
Delivered-To: alsa-devel@alsa-project.org
Received: by alsa1.perex.cz (Postfix, from userid 50401)
 id 9C8E5F8016F; Tue, 14 Apr 2020 14:41:59 +0200 (CEST)
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on alsa1.perex.cz
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=RCVD_IN_MSPIKE_H3,
 RCVD_IN_MSPIKE_WL,SPF_HELO_NONE,SPF_PASS,URIBL_BLOCKED autolearn=disabled
 version=3.4.0
Received: from mx2.suse.de (mx2.suse.de [195.135.220.15])
 (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
 (No client certificate requested)
 by alsa1.perex.cz (Postfix) with ESMTPS id E4F1BF800B9
 for <alsa-devel@alsa-project.org>; Tue, 14 Apr 2020 14:41:56 +0200 (CEST)
DKIM-Filter: OpenDKIM Filter v2.11.0 alsa1.perex.cz E4F1BF800B9
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay2.suse.de (unknown [195.135.220.254])
 by mx2.suse.de (Postfix) with ESMTP id 5E058AD63;
 Tue, 14 Apr 2020 12:41:55 +0000 (UTC)
Date: Tue, 14 Apr 2020 14:41:55 +0200
Message-ID: <s5h3696jl2k.wl-tiwai@suse.de>
From: Takashi Iwai <tiwai@suse.de>
To: Hui Wang <hui.wang@canonical.com>
Subject: Re: [PATCH] ALSA: hda: enable the runtime_pm for non-vgaswitcheroo
 hda controllers
In-Reply-To: <s5h4ktmjl4s.wl-tiwai@suse.de>
References: <20200414101405.6992-1-hui.wang@canonical.com>
 <s5hmu7ejra2.wl-tiwai@suse.de>
 <121237cf-8ef9-2a21-8ee3-6c6954e846e2@canonical.com>
 <s5h4ktmjl4s.wl-tiwai@suse.de>
User-Agent: Wanderlust/2.15.9 (Almost Unreal) SEMI/1.14.6 (Maruoka)
 FLIM/1.14.9 (=?UTF-8?B?R29qxY0=?=) APEL/10.8 Emacs/25.3
 (x86_64-suse-linux-gnu) MULE/6.0 (HANACHIRUSATO)
MIME-Version: 1.0 (generated by SEMI 1.14.6 - "Maruoka")
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
Cc: alsa-devel@alsa-project.org
X-BeenThere: alsa-devel@alsa-project.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: "Alsa-devel mailing list for ALSA developers -
 http://www.alsa-project.org" <alsa-devel.alsa-project.org>
List-Unsubscribe: <https://mailman.alsa-project.org/mailman/options/alsa-devel>, 
 <mailto:alsa-devel-request@alsa-project.org?subject=unsubscribe>
List-Archive: <http://mailman.alsa-project.org/pipermail/alsa-devel/>
List-Post: <mailto:alsa-devel@alsa-project.org>
List-Help: <mailto:alsa-devel-request@alsa-project.org?subject=help>
List-Subscribe: <https://mailman.alsa-project.org/mailman/listinfo/alsa-devel>, 
 <mailto:alsa-devel-request@alsa-project.org?subject=subscribe>
Errors-To: alsa-devel-bounces@alsa-project.org
Sender: "Alsa-devel" <alsa-devel-bounces@alsa-project.org>

On Tue, 14 Apr 2020 14:40:35 +0200,
Takashi Iwai wrote:
> 
> On Tue, 14 Apr 2020 14:35:50 +0200,
> Hui Wang wrote:
> > 
> > 
> > On 2020/4/14 下午6:27, Takashi Iwai wrote:
> > > On Tue, 14 Apr 2020 12:14:05 +0200,
> > > Hui Wang wrote:
> > >> Before the pci_driver->probe() is called, the pci subsystem calls
> > >> runtime_forbib() and runtime_get_sync() on this pci dev, so only call
> > >> runtime_put_autosuspend() is not enough to enable the runtime_pm on
> > >> this device.
> > >>
> > >> For controllers with vgaswitcheroo feature, the pci/quirks.c will call
> > >> runtime_allow() for this dev, then the controllers could enter
> > >> rt_idle/suspend/resume, but for non-vgaswitcheroo controllers like
> > >> Intel hda controllers, the runtime_pm is not enabled even it calls
> > >> put_autosuspend(). Need to call runtime_allow() for those controllers
> > >> in the hda driver.
> > >>
> > >> Signed-off-by: Hui Wang <hui.wang@canonical.com>
> > > Was this behavior changed from the earlier kernels?  I thought this
> > > was left untouched because it's supposed to be set via udev rules or
> > > such.
> > 
> > Oh, I don't know that,  according to my test with ubuntu rootfs, the
> > runtime pm is not enabled on Intel's hda controllers. But with the sof
> > driver, the controller driver calls runtime_allow()
> > (soc/sof/sof-pci-dev.c), so I sent this patch.
> 
> OK, I just watned to know the situation.  So it's no regression but
> rather to align the behavior among drivers, and that's fine.
> Let's take the patch, then.

On the second thought, we can drop the vga_switcheroo check and always
allow it?  We do want to enable in anyway, and calling it twice should
be fine.


thanks,

Takashi


> 
> 
> thanks,
> 
> Takashi
> 
> > 
> > Regards,
> > 
> > Hui.
> > 
> > > OTOH, enabling the runtime PM is almost mandatory for modern systems,
> > > and I'm fine to apply this kind of forcible enablement.
> > >
> > >
> > > thanks,
> > >
> > > Takashi
> > >
> > >
> > >> ---
> > >>   sound/pci/hda/hda_intel.c | 2 ++
> > >>   1 file changed, 2 insertions(+)
> > >>
> > >> diff --git a/sound/pci/hda/hda_intel.c b/sound/pci/hda/hda_intel.c
> > >> index 8519051a426e..779705bef88b 100644
> > >> --- a/sound/pci/hda/hda_intel.c
> > >> +++ b/sound/pci/hda/hda_intel.c
> > >> @@ -2356,6 +2356,8 @@ static int azx_probe_continue(struct azx *chip)
> > >>     	if (azx_has_pm_runtime(chip)) {
> > >>   		pm_runtime_use_autosuspend(&pci->dev);
> > >> +		if (!use_vga_switcheroo(chip))
> > >> +			pm_runtime_allow(&pci->dev);
> > >>   		pm_runtime_put_autosuspend(&pci->dev);
> > >>   	}
> > >>   -- 
> > >> 2.17.1
> > >>
> > 
