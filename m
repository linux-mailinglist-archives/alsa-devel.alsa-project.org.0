Return-Path: <alsa-devel-bounces@alsa-project.org>
X-Original-To: lists+alsa-devel@lfdr.de
Delivered-To: lists+alsa-devel@lfdr.de
Received: from alsa0.perex.cz (alsa0.perex.cz [77.48.224.243])
	by mail.lfdr.de (Postfix) with ESMTPS id E795536C481
	for <lists+alsa-devel@lfdr.de>; Tue, 27 Apr 2021 12:56:50 +0200 (CEST)
Received: from alsa1.perex.cz (alsa1.perex.cz [207.180.221.201])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by alsa0.perex.cz (Postfix) with ESMTPS id 8597C16EC;
	Tue, 27 Apr 2021 12:56:00 +0200 (CEST)
DKIM-Filter: OpenDKIM Filter v2.11.0 alsa0.perex.cz 8597C16EC
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=alsa-project.org;
	s=default; t=1619521010;
	bh=NSfJidAXfMZmXdbzq4lUcxLicIfD6j/CaseGgVRxZJU=;
	h=Date:From:To:Subject:In-Reply-To:References:Cc:List-Id:
	 List-Unsubscribe:List-Archive:List-Post:List-Help:List-Subscribe:
	 From;
	b=nIule1V9dNHHDKlSLIvhWGDzGffDrpO9T0+4s51Bd8B6lpudXcppJ9lnBbvHf8atd
	 4S6+NwwXgpXruNUuriU1BVOR9stYSnaiEySa+vD8+5rTowijvUOgOkwTJ/NjgYCq0U
	 UQdf/5cNJJShujnu4iL2I0wfT572bt+BJnntmc5E=
Received: from alsa1.perex.cz (localhost.localdomain [127.0.0.1])
	by alsa1.perex.cz (Postfix) with ESMTP id 1946FF8012A;
	Tue, 27 Apr 2021 12:55:22 +0200 (CEST)
X-Original-To: alsa-devel@alsa-project.org
Delivered-To: alsa-devel@alsa-project.org
Received: by alsa1.perex.cz (Postfix, from userid 50401)
 id 82ED7F801EC; Tue, 27 Apr 2021 12:55:19 +0200 (CEST)
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on alsa1.perex.cz
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=SPF_HELO_NONE,SPF_NONE,
 URIBL_BLOCKED autolearn=disabled version=3.4.0
Received: from mx2.suse.de (mx2.suse.de [195.135.220.15])
 (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
 (No client certificate requested)
 by alsa1.perex.cz (Postfix) with ESMTPS id 96F63F800C0
 for <alsa-devel@alsa-project.org>; Tue, 27 Apr 2021 12:55:03 +0200 (CEST)
DKIM-Filter: OpenDKIM Filter v2.11.0 alsa1.perex.cz 96F63F800C0
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay2.suse.de (unknown [195.135.221.27])
 by mx2.suse.de (Postfix) with ESMTP id 72BB7B019;
 Tue, 27 Apr 2021 10:55:02 +0000 (UTC)
Date: Tue, 27 Apr 2021 12:55:02 +0200
Message-ID: <s5hpmygyp2x.wl-tiwai@suse.de>
From: Takashi Iwai <tiwai@suse.de>
To: Shengjiu Wang <shengjiu.wang@nxp.com>
Subject: Re: [PATCH 1/2] ALSA: pcm: Add support for 705.6KHz and 768KHz sample
 rate
In-Reply-To: <1619519663-10406-1-git-send-email-shengjiu.wang@nxp.com>
References: <1619519663-10406-1-git-send-email-shengjiu.wang@nxp.com>
User-Agent: Wanderlust/2.15.9 (Almost Unreal) SEMI/1.14.6 (Maruoka)
 FLIM/1.14.9 (=?UTF-8?B?R29qxY0=?=) APEL/10.8 Emacs/25.3
 (x86_64-suse-linux-gnu) MULE/6.0 (HANACHIRUSATO)
MIME-Version: 1.0 (generated by SEMI 1.14.6 - "Maruoka")
Content-Type: text/plain; charset=US-ASCII
Cc: linux-kernel@vger.kernel.org, alsa-devel@alsa-project.org,
 broonie@kernel.org, tiwai@suse.com
X-BeenThere: alsa-devel@alsa-project.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: "Alsa-devel mailing list for ALSA developers -
 http://www.alsa-project.org" <alsa-devel.alsa-project.org>
List-Unsubscribe: <https://mailman.alsa-project.org/mailman/options/alsa-devel>, 
 <mailto:alsa-devel-request@alsa-project.org?subject=unsubscribe>
List-Archive: <http://mailman.alsa-project.org/pipermail/alsa-devel/>
List-Post: <mailto:alsa-devel@alsa-project.org>
List-Help: <mailto:alsa-devel-request@alsa-project.org?subject=help>
List-Subscribe: <https://mailman.alsa-project.org/mailman/listinfo/alsa-devel>, 
 <mailto:alsa-devel-request@alsa-project.org?subject=subscribe>
Errors-To: alsa-devel-bounces@alsa-project.org
Sender: "Alsa-devel" <alsa-devel-bounces@alsa-project.org>

On Tue, 27 Apr 2021 12:34:22 +0200,
Shengjiu Wang wrote:
> 
> Some high resolution codecs support 705.6KHz and 768KHz rates.
> So extend supported sample rate to 768kHz in pcm.h.
> 
> Signed-off-by: Shengjiu Wang <shengjiu.wang@nxp.com>

How many devices require it for now?

I don't want to extend the core definitions blindly unless those rates
are really commonly used.  You can add those specific rates in the
codec driver instead.


thanks,

Takashi

> ---
>  include/sound/pcm.h | 5 +++++
>  1 file changed, 5 insertions(+)
> 
> diff --git a/include/sound/pcm.h b/include/sound/pcm.h
> index 2e1200d17d0c..88056824ffec 100644
> --- a/include/sound/pcm.h
> +++ b/include/sound/pcm.h
> @@ -121,6 +121,8 @@ struct snd_pcm_ops {
>  #define SNDRV_PCM_RATE_192000		(1<<12)		/* 192000Hz */
>  #define SNDRV_PCM_RATE_352800		(1<<13)		/* 352800Hz */
>  #define SNDRV_PCM_RATE_384000		(1<<14)		/* 384000Hz */
> +#define SNDRV_PCM_RATE_705600		(1<<15)		/* 705600Hz */
> +#define SNDRV_PCM_RATE_768000		(1<<16)		/* 768000Hz */
>  
>  #define SNDRV_PCM_RATE_CONTINUOUS	(1<<30)		/* continuous range */
>  #define SNDRV_PCM_RATE_KNOT		(1<<31)		/* supports more non-continuos rates */
> @@ -136,6 +138,9 @@ struct snd_pcm_ops {
>  #define SNDRV_PCM_RATE_8000_384000	(SNDRV_PCM_RATE_8000_192000|\
>  					 SNDRV_PCM_RATE_352800|\
>  					 SNDRV_PCM_RATE_384000)
> +#define SNDRV_PCM_RATE_8000_768000	(SNDRV_PCM_RATE_8000_768000|\
> +					 SNDRV_PCM_RATE_705600|\
> +					 SNDRV_PCM_RATE_768000)
>  #define _SNDRV_PCM_FMTBIT(fmt)		(1ULL << (__force int)SNDRV_PCM_FORMAT_##fmt)
>  #define SNDRV_PCM_FMTBIT_S8		_SNDRV_PCM_FMTBIT(S8)
>  #define SNDRV_PCM_FMTBIT_U8		_SNDRV_PCM_FMTBIT(U8)
> -- 
> 2.27.0
> 
