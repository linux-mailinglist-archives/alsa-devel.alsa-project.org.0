Return-Path: <alsa-devel-bounces@alsa-project.org>
X-Original-To: lists+alsa-devel@lfdr.de
Delivered-To: lists+alsa-devel@lfdr.de
Received: from alsa0.perex.cz (alsa0.perex.cz [77.48.224.243])
	by mail.lfdr.de (Postfix) with ESMTPS id AFC75464812
	for <lists+alsa-devel@lfdr.de>; Wed,  1 Dec 2021 08:25:20 +0100 (CET)
Received: from alsa1.perex.cz (alsa1.perex.cz [207.180.221.201])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by alsa0.perex.cz (Postfix) with ESMTPS id 40F9E24FE;
	Wed,  1 Dec 2021 08:24:30 +0100 (CET)
DKIM-Filter: OpenDKIM Filter v2.11.0 alsa0.perex.cz 40F9E24FE
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=alsa-project.org;
	s=default; t=1638343520;
	bh=a77bKzUV1xo1MUAHGk9f5004dr7PYqjC0FYEsldplzA=;
	h=Date:From:To:Subject:In-Reply-To:References:Cc:List-Id:
	 List-Unsubscribe:List-Archive:List-Post:List-Help:List-Subscribe:
	 From;
	b=Pe0avz3F1LrjsyVtGFstku60lakeEMUNy7s0cCFr8bm0rI6Rui8lIpdA6ZyQ2p6RV
	 ZYQTYLIJ/iH+K00ndALrdpYzGAiiP5e4xwEHCMGjz2avjMAxOngAUl8T3pA8t0tVq9
	 lX4XfNAxSSfqkHnJANqV8eLCPUkIUydTCosyFpUU=
Received: from alsa1.perex.cz (localhost.localdomain [127.0.0.1])
	by alsa1.perex.cz (Postfix) with ESMTP id 72EDDF80249;
	Wed,  1 Dec 2021 08:24:03 +0100 (CET)
X-Original-To: alsa-devel@alsa-project.org
Delivered-To: alsa-devel@alsa-project.org
Received: by alsa1.perex.cz (Postfix, from userid 50401)
 id 39C0CF80246; Wed,  1 Dec 2021 08:24:01 +0100 (CET)
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on alsa1.perex.cz
X-Spam-Level: 
X-Spam-Status: No, score=-0.1 required=5.0 tests=DKIM_SIGNED,DKIM_VALID,
 DKIM_VALID_AU,SPF_HELO_NONE,SPF_NONE,URIBL_BLOCKED autolearn=disabled
 version=3.4.0
Received: from smtp-out2.suse.de (smtp-out2.suse.de [195.135.220.29])
 (using TLSv1.2 with cipher ECDHE-RSA-AES128-GCM-SHA256 (128/128 bits))
 (No client certificate requested)
 by alsa1.perex.cz (Postfix) with ESMTPS id E2D1CF80217
 for <alsa-devel@alsa-project.org>; Wed,  1 Dec 2021 08:23:55 +0100 (CET)
DKIM-Filter: OpenDKIM Filter v2.11.0 alsa1.perex.cz E2D1CF80217
Authentication-Results: alsa1.perex.cz;
 dkim=pass (1024-bit key) header.d=suse.de header.i=@suse.de
 header.b="JOw1BUHy"; 
 dkim=permerror (0-bit key) header.d=suse.de header.i=@suse.de
 header.b="F7mStAjd"
Received: from relay2.suse.de (relay2.suse.de [149.44.160.134])
 by smtp-out2.suse.de (Postfix) with ESMTP id 8B8FA1FD34;
 Wed,  1 Dec 2021 07:23:55 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=suse.de; s=susede2_rsa;
 t=1638343435; h=from:from:reply-to:date:date:message-id:message-id:to:to:cc:cc:
 mime-version:mime-version:content-type:content-type:
 content-transfer-encoding:content-transfer-encoding:
 in-reply-to:in-reply-to:references:references;
 bh=rhbSTSQcHs+gz6xhblTrlDcmw06t904WNwNqJO3yIX0=;
 b=JOw1BUHyhJTngWfQpfMiLFWKSPFFDlOEXtSgq4TlYb+n1gxHxIz5ciosj5tf8SVlOFihgQ
 VRpg2NNhCKL9rYrxzQ5Yd+XFlro5XGpLkaXC/BoxddArjxZJ9KIluo39+nRH7EtPFYw8tt
 bhSpL+BcYmlas4aVSQH9LtMnJbqZDnc=
DKIM-Signature: v=1; a=ed25519-sha256; c=relaxed/relaxed; d=suse.de;
 s=susede2_ed25519; t=1638343435;
 h=from:from:reply-to:date:date:message-id:message-id:to:to:cc:cc:
 mime-version:mime-version:content-type:content-type:
 content-transfer-encoding:content-transfer-encoding:
 in-reply-to:in-reply-to:references:references;
 bh=rhbSTSQcHs+gz6xhblTrlDcmw06t904WNwNqJO3yIX0=;
 b=F7mStAjd6sdpE+g1Geq2rEwTCWyXnwG/npKNkkcxfi8dqrQqpTpmeLBEZywwnrpTjV3Rd5
 dWQpXxTqzbsyD5CA==
Received: from alsa1.suse.de (alsa1.suse.de [10.160.4.42])
 by relay2.suse.de (Postfix) with ESMTP id 79795A3B92;
 Wed,  1 Dec 2021 07:23:55 +0000 (UTC)
Date: Wed, 01 Dec 2021 08:23:55 +0100
Message-ID: <s5hmtlkzt2s.wl-tiwai@suse.de>
From: Takashi Iwai <tiwai@suse.de>
To: Bixuan Cui <cuibixuan@linux.alibaba.com>
Subject: Re: [PATCH -next] ALSA: Fix oversized kvmalloc() calls
In-Reply-To: <30df3dc3-9160-e14f-16f5-139c63effd30@linux.alibaba.com>
References: <1638270978-42412-1-git-send-email-cuibixuan@linux.alibaba.com>
 <s5h1r2x50uo.wl-tiwai@suse.de> <s5htuft20y6.wl-tiwai@suse.de>
 <30df3dc3-9160-e14f-16f5-139c63effd30@linux.alibaba.com>
User-Agent: Wanderlust/2.15.9 (Almost Unreal) SEMI/1.14.6 (Maruoka)
 FLIM/1.14.9 (=?UTF-8?B?R29qxY0=?=) APEL/10.8 Emacs/25.3
 (x86_64-suse-linux-gnu) MULE/6.0 (HANACHIRUSATO)
MIME-Version: 1.0 (generated by SEMI 1.14.6 - "Maruoka")
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
Cc: alsa-devel@alsa-project.org, tiwai@suse.com, inux-kernel@vger.kernel.org
X-BeenThere: alsa-devel@alsa-project.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: "Alsa-devel mailing list for ALSA developers -
 http://www.alsa-project.org" <alsa-devel.alsa-project.org>
List-Unsubscribe: <https://mailman.alsa-project.org/mailman/options/alsa-devel>, 
 <mailto:alsa-devel-request@alsa-project.org?subject=unsubscribe>
List-Archive: <http://mailman.alsa-project.org/pipermail/alsa-devel/>
List-Post: <mailto:alsa-devel@alsa-project.org>
List-Help: <mailto:alsa-devel-request@alsa-project.org?subject=help>
List-Subscribe: <https://mailman.alsa-project.org/mailman/listinfo/alsa-devel>, 
 <mailto:alsa-devel-request@alsa-project.org?subject=subscribe>
Errors-To: alsa-devel-bounces@alsa-project.org
Sender: "Alsa-devel" <alsa-devel-bounces@alsa-project.org>

On Wed, 01 Dec 2021 07:16:12 +0100,
Bixuan Cui wrote:
> 
> 在 2021/11/30 下午10:05, Takashi Iwai 写道:
> 
>     On Tue, 30 Nov 2021 12:39:27 +0100,
>     Takashi Iwai wrote:
>     
>         On Tue, 30 Nov 2021 12:16:18 +0100,
>         Bixuan Cui wrote:
>         
>             The commit 7661809d493b ("mm: don't allow oversized kvmalloc()
>             calls") limits the max allocatable memory via kvzalloc() to MAX_INT.
>             
>             Reported-by: syzbot+bb348e9f9a954d42746f@syzkaller.appspotmail.com
>             Signed-off-by: Bixuan Cui <cuibixuan@linux.alibaba.com>
>             
>         We should check the allocation size a lot earlier than here.
>         IOW, such a big size shouldn't have been passed to this function but
>         it should have been handled as an error in the caller side
>         (snd_pcm_oss_change_params*()).
>         
>         Could you give the reproducer?
>         
>     I'm asking it because the patch like below might cover the case.
> 
>     Takashi
>     
>     -- 8< --
>     From: Takashi Iwai <tiwai@suse.de>
>     Subject: [PATCH] ALSA: pcm: oss: Fix negative period/buffer sizes
>     
>     The period size calculation in OSS layer may receive a negative value
>     as an error, but the code there assumes only the positive values and
>     handle them with size_t.  Due to that, a too big value may be passed
>     to the lower layers.
>     
>     This patch changes the code to handle with ssize_t and adds the proper
>     error checks appropriately.
>     
>     Signed-off-by: Takashi Iwai <tiwai@suse.de>
>     ---
>      sound/core/oss/pcm_oss.c | 24 +++++++++++++++---------
>      1 file changed, 15 insertions(+), 9 deletions(-)
>     
>     diff --git a/sound/core/oss/pcm_oss.c b/sound/core/oss/pcm_oss.c
>     index 82a818734a5f..bec7590bc84b 100644
>     --- a/sound/core/oss/pcm_oss.c
>     +++ b/sound/core/oss/pcm_oss.c
>     @@ -147,7 +147,7 @@ snd_pcm_hw_param_value_min(const struct snd_pcm_hw_params *params,
>       *
>       * Return the maximum value for field PAR.
>       */
>     -static unsigned int
>     +static int
>      snd_pcm_hw_param_value_max(const struct snd_pcm_hw_params *params,
>                                snd_pcm_hw_param_t var, int *dir)
>      {
>     @@ -682,18 +682,24 @@ static int snd_pcm_oss_period_size(struct snd_pcm_substream *substream,
>                                        struct snd_pcm_hw_params *oss_params,
>                                        struct snd_pcm_hw_params *slave_params)
>      {
>     -       size_t s;
>     -       size_t oss_buffer_size, oss_period_size, oss_periods;
>     -       size_t min_period_size, max_period_size;
>     +       ssize_t s;
>     +       ssize_t oss_buffer_size;
>     +       ssize_t oss_period_size, oss_periods;
>     +       ssize_t min_period_size, max_period_size;
>             struct snd_pcm_runtime *runtime = substream->runtime;
>             size_t oss_frame_size;
>      
>             oss_frame_size = snd_pcm_format_physical_width(params_format(oss_params)) *
>                              params_channels(oss_params) / 8;
>      
>     +       oss_buffer_size = snd_pcm_hw_param_value_max(slave_params,
>     +                                                    SNDRV_PCM_HW_PARAM_BUFFER_SIZE,
>     +                                                    NULL);
>     +       if (oss_buffer_size <= 0)
>     +               return -EINVAL;
>             oss_buffer_size = snd_pcm_plug_client_size(substream,
>     -                                                  snd_pcm_hw_param_value_max(slave_params, SNDRV_PCM_HW_PARAM_BUFFER_SIZE, NULL)) * oss_frame_size;
>     -       if (!oss_buffer_size)
>     +                                                  oss_buffer_size * oss_frame_size);
>     +       if (oss_buffer_size <= 0)
>                     return -EINVAL;
>             oss_buffer_size = rounddown_pow_of_two(oss_buffer_size);
>             if (atomic_read(&substream->mmap_count)) {
>     @@ -730,7 +736,7 @@ static int snd_pcm_oss_period_size(struct snd_pcm_substream *substream,
>      
>             min_period_size = snd_pcm_plug_client_size(substream,
>                                                        snd_pcm_hw_param_value_min(slave_params, SNDRV_PCM_HW_PARAM_PERIOD_SIZE, NULL));
>     -       if (min_period_size) {
>     +       if (min_period_size > 0) {
>                     min_period_size *= oss_frame_size;
>                     min_period_size = roundup_pow_of_two(min_period_size);
>                     if (oss_period_size < min_period_size)
>     @@ -739,7 +745,7 @@ static int snd_pcm_oss_period_size(struct snd_pcm_substream *substream,
>      
>             max_period_size = snd_pcm_plug_client_size(substream,
>                                                        snd_pcm_hw_param_value_max(slave_params, SNDRV_PCM_HW_PARAM_PERIOD_SIZE, NULL));
>     -       if (max_period_size) {
>     +       if (max_period_size > 0) {
>                     max_period_size *= oss_frame_size;
>                     max_period_size = rounddown_pow_of_two(max_period_size);
>                     if (oss_period_size > max_period_size)
>     @@ -752,7 +758,7 @@ static int snd_pcm_oss_period_size(struct snd_pcm_substream *substream,
>                     oss_periods = substream->oss.setup.periods;
>      
>             s = snd_pcm_hw_param_value_max(slave_params, SNDRV_PCM_HW_PARAM_PERIODS, NULL);
>     -       if (runtime->oss.maxfrags && s > runtime->oss.maxfrags)
>     +       if (s > 0 && runtime->oss.maxfrags && s > runtime->oss.maxfrags)
>                     s = runtime->oss.maxfrags;
>             if (oss_periods > s)
>                     oss_periods = s;
>     
> Hi,
> 
> I got the bug report from syzbot: 
> https://syzkaller.appspot.com/bug?id=c224c2af9ed367315fc048b50f008385bd5c4c3f
> .

Thanks!

> I checked the call stack that reported the error, and then tried to construct
> a case, but it relied on some hardware
> 
> devices. My machine did not have it, so I couldn't construct it. :-(
> 
> I reviewed the code again and found that 'format->channels' in 'size = frames
> * format->channels * width'
> 
> should come from file->private_data in snd_pcm_oss_ioctl(). And file->
> private_data is initialized in snd_pcm_oss_open_file().
> 
> Maybe this patch cannot cover this problem.

The code path is about the ioctl changing the PCM channels, and it's
calling the common parameter update function.  So it goes through the
point the patch touches, at least.  It's not clear, though, whether
the overflow is due to the lack of the error checks or the driver
still allowed a larger value.  Unfortunately, there seems no
reproducer.

> But I think we can wait for this patch to be applied whether the problem
> occurs.

OK, I wrote a couple of more fixes for covering such cases in OSS
layer.  Will submit a series later.


thanks,

Takashi
