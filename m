Return-Path: <alsa-devel-bounces@alsa-project.org>
X-Original-To: lists+alsa-devel@lfdr.de
Delivered-To: lists+alsa-devel@lfdr.de
Received: from alsa0.perex.cz (alsa0.perex.cz [77.48.224.243])
	by mail.lfdr.de (Postfix) with ESMTPS id 6E115300503
	for <lists+alsa-devel@lfdr.de>; Fri, 22 Jan 2021 15:13:55 +0100 (CET)
Received: from alsa1.perex.cz (alsa1.perex.cz [207.180.221.201])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by alsa0.perex.cz (Postfix) with ESMTPS id F0AD11EFA;
	Fri, 22 Jan 2021 15:12:59 +0100 (CET)
DKIM-Filter: OpenDKIM Filter v2.11.0 alsa0.perex.cz F0AD11EFA
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=alsa-project.org;
	s=default; t=1611324830;
	bh=iP2dlPgSQ0PMGGaouuTi8n2HcpfUi9h0BkGPXbLLFKM=;
	h=Date:From:To:Subject:In-Reply-To:References:Cc:List-Id:
	 List-Unsubscribe:List-Archive:List-Post:List-Help:List-Subscribe:
	 From;
	b=LGYNEun1SBZ4CHraKh6LRBJssiw5p82l1UpGtSCcLWN8S21YUoYaKmkKsAcdyRhQr
	 dEZkbpOP2kY+gQ2Z8nunwBeVCQu0qrqFE796nDp5wwgCi2GIcyC6e3wqTO4ke2LV/1
	 B690ND+xZ9p3cy77gsV1l/OpBjQ1/RDoMr9bXLNg=
Received: from alsa1.perex.cz (localhost.localdomain [127.0.0.1])
	by alsa1.perex.cz (Postfix) with ESMTP id 68ADBF8019B;
	Fri, 22 Jan 2021 15:12:17 +0100 (CET)
X-Original-To: alsa-devel@alsa-project.org
Delivered-To: alsa-devel@alsa-project.org
Received: by alsa1.perex.cz (Postfix, from userid 50401)
 id 5B656F80166; Fri, 22 Jan 2021 15:12:15 +0100 (CET)
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on alsa1.perex.cz
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=SPF_HELO_NONE,SPF_NONE
 autolearn=disabled version=3.4.0
Received: from mx2.suse.de (mx2.suse.de [195.135.220.15])
 (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
 (No client certificate requested)
 by alsa1.perex.cz (Postfix) with ESMTPS id BBF29F80164
 for <alsa-devel@alsa-project.org>; Fri, 22 Jan 2021 15:12:12 +0100 (CET)
DKIM-Filter: OpenDKIM Filter v2.11.0 alsa1.perex.cz BBF29F80164
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay2.suse.de (unknown [195.135.221.27])
 by mx2.suse.de (Postfix) with ESMTP id A7A4BB750;
 Fri, 22 Jan 2021 14:12:11 +0000 (UTC)
Date: Fri, 22 Jan 2021 15:12:11 +0100
Message-ID: <s5h1red83ic.wl-tiwai@suse.de>
From: Takashi Iwai <tiwai@suse.de>
To: Ranjani Sridharan <ranjani.sridharan@linux.intel.com>
Subject: Re: Question about hdac_ext_link ref_count management
In-Reply-To: <aca60b522335f3f916f9f8f204693365bfc32231.camel@linux.intel.com>
References: <aca60b522335f3f916f9f8f204693365bfc32231.camel@linux.intel.com>
User-Agent: Wanderlust/2.15.9 (Almost Unreal) SEMI/1.14.6 (Maruoka)
 FLIM/1.14.9 (=?UTF-8?B?R29qxY0=?=) APEL/10.8 Emacs/25.3
 (x86_64-suse-linux-gnu) MULE/6.0 (HANACHIRUSATO)
MIME-Version: 1.0 (generated by SEMI 1.14.6 - "Maruoka")
Content-Type: text/plain; charset=US-ASCII
Cc: alsa-devel@alsa-project.org, kai.vehmanen@linux.intel.com
X-BeenThere: alsa-devel@alsa-project.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: "Alsa-devel mailing list for ALSA developers -
 http://www.alsa-project.org" <alsa-devel.alsa-project.org>
List-Unsubscribe: <https://mailman.alsa-project.org/mailman/options/alsa-devel>, 
 <mailto:alsa-devel-request@alsa-project.org?subject=unsubscribe>
List-Archive: <http://mailman.alsa-project.org/pipermail/alsa-devel/>
List-Post: <mailto:alsa-devel@alsa-project.org>
List-Help: <mailto:alsa-devel-request@alsa-project.org?subject=help>
List-Subscribe: <https://mailman.alsa-project.org/mailman/listinfo/alsa-devel>, 
 <mailto:alsa-devel-request@alsa-project.org?subject=subscribe>
Errors-To: alsa-devel-bounces@alsa-project.org
Sender: "Alsa-devel" <alsa-devel-bounces@alsa-project.org>

On Fri, 22 Jan 2021 00:23:53 +0100,
Ranjani Sridharan wrote:
> 
> Hi Takashi,
> 
> While exploring some power optimizations on Intel platforms, I noticed
> that the hdac_ext_link ref_count is incremented during codec probe
> in hdac_hda_codec_probe() and the ref_count is held until the codec
> device is removed. 
> 
> I was wondering if it would be possible to call the get/put for the
> hdac_ext_link in the codec runtime suspend/resume callbacks so that the
> link is powered up only when the link is in use. Are there any
> downsides to doing this? 

Wouldn't the  snd_hdac_ext_bus_link_power_up() / down() calls do the
runtime PM stuff?  Maybe we need to revisit those link power
management.  The ext stuff isn't well managed, I'm afraid.

The get() and put() are obviously for fully enabling and disabling the
device, hence it's not suitable for the runtime PM suspend/resume.
The power_up() / down() should be adjusted to fit with the runtime PM
call, if any.


thanks,

Takashi
