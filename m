Return-Path: <alsa-devel-bounces@alsa-project.org>
X-Original-To: lists+alsa-devel@lfdr.de
Delivered-To: lists+alsa-devel@lfdr.de
Received: from alsa0.perex.cz (alsa0.perex.cz [77.48.224.243])
	by mail.lfdr.de (Postfix) with ESMTPS id E818F42AA99
	for <lists+alsa-devel@lfdr.de>; Tue, 12 Oct 2021 19:17:26 +0200 (CEST)
Received: from alsa1.perex.cz (alsa1.perex.cz [207.180.221.201])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by alsa0.perex.cz (Postfix) with ESMTPS id 7626C168C;
	Tue, 12 Oct 2021 19:16:36 +0200 (CEST)
DKIM-Filter: OpenDKIM Filter v2.11.0 alsa0.perex.cz 7626C168C
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=alsa-project.org;
	s=default; t=1634059046;
	bh=PHUWHc0k6TzN6/g6tZ2CAEr+orpQKCtYAEhDFn7awHg=;
	h=Date:From:To:Subject:In-Reply-To:References:Cc:List-Id:
	 List-Unsubscribe:List-Archive:List-Post:List-Help:List-Subscribe:
	 From;
	b=ndlKju8y2RXDQ/kaR5DMLiYhir3r/ZbsodmaPhJdT47Pv8M3F+XvIYZvQd4p56DVy
	 Dt2b/uhtFSai1OMeZhdLSUZwECLPVELTSwduu/FYgUifZqeKC4ODolRIKaTTlIHP59
	 aNjHbRtg5oSwpufs4Jwc+2g0j9pDial2IW6VlsDE=
Received: from alsa1.perex.cz (localhost.localdomain [127.0.0.1])
	by alsa1.perex.cz (Postfix) with ESMTP id CE3EFF800CB;
	Tue, 12 Oct 2021 19:16:09 +0200 (CEST)
X-Original-To: alsa-devel@alsa-project.org
Delivered-To: alsa-devel@alsa-project.org
Received: by alsa1.perex.cz (Postfix, from userid 50401)
 id B9669F80212; Tue, 12 Oct 2021 19:16:07 +0200 (CEST)
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on alsa1.perex.cz
X-Spam-Level: 
X-Spam-Status: No, score=-0.1 required=5.0 tests=DKIM_SIGNED,DKIM_VALID,
 DKIM_VALID_AU,SPF_HELO_NONE,SPF_NONE autolearn=disabled version=3.4.0
Received: from smtp-out1.suse.de (smtp-out1.suse.de [195.135.220.28])
 (using TLSv1.2 with cipher ECDHE-RSA-AES128-GCM-SHA256 (128/128 bits))
 (No client certificate requested)
 by alsa1.perex.cz (Postfix) with ESMTPS id 4F6C2F80088
 for <alsa-devel@alsa-project.org>; Tue, 12 Oct 2021 19:16:03 +0200 (CEST)
DKIM-Filter: OpenDKIM Filter v2.11.0 alsa1.perex.cz 4F6C2F80088
Authentication-Results: alsa1.perex.cz;
 dkim=pass (1024-bit key) header.d=suse.de header.i=@suse.de
 header.b="hoDYLcok"; 
 dkim=permerror (0-bit key) header.d=suse.de header.i=@suse.de
 header.b="tkJaYbSi"
Received: from relay2.suse.de (relay2.suse.de [149.44.160.134])
 by smtp-out1.suse.de (Postfix) with ESMTP id E574A21E66;
 Tue, 12 Oct 2021 17:16:02 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=suse.de; s=susede2_rsa;
 t=1634058962; h=from:from:reply-to:date:date:message-id:message-id:to:to:cc:cc:
 mime-version:mime-version:content-type:content-type:
 in-reply-to:in-reply-to:references:references;
 bh=BLmFRMsnUNHtaSXFzREWk0gfBqCtIAffyCkWluWpVz8=;
 b=hoDYLcok0i84DunaYd5kGHTfN2nOH4Dj0WUO3UJ7mkcI5zvxtSB85Qw9mc9sCV6T6S/5Wx
 +VICmhOU5gIxHHFDy3uloPw3PDJoL5pkLKx2G96TPU+ZPw1hDejcNc8Bzfw2/gejWaDuNR
 uV4qh5pgjxTX1bruudcU1Jq7iM139D0=
DKIM-Signature: v=1; a=ed25519-sha256; c=relaxed/relaxed; d=suse.de;
 s=susede2_ed25519; t=1634058962;
 h=from:from:reply-to:date:date:message-id:message-id:to:to:cc:cc:
 mime-version:mime-version:content-type:content-type:
 in-reply-to:in-reply-to:references:references;
 bh=BLmFRMsnUNHtaSXFzREWk0gfBqCtIAffyCkWluWpVz8=;
 b=tkJaYbSiQjKG2x0txzBfqWDbI6YVEXIPs4Dwx3o9bcZJQlNLF1ltexaNmxeKVFiejmoxUM
 SjDuBbKAPqxFL5Dg==
Received: from alsa1.suse.de (alsa1.suse.de [10.160.4.42])
 by relay2.suse.de (Postfix) with ESMTP id D3B5BA3B81;
 Tue, 12 Oct 2021 17:16:02 +0000 (UTC)
Date: Tue, 12 Oct 2021 19:16:02 +0200
Message-ID: <s5hczoa17vx.wl-tiwai@suse.de>
From: Takashi Iwai <tiwai@suse.de>
To: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
Subject: Re: [PATCH v2 1/3] ALSA: pcm: introduce INFO_NO_REWINDS flag
In-Reply-To: <e3c854ba-9abf-c9f1-1d74-1a82c9a7b6b3@linux.intel.com>
References: <20211004162423.85323-1-pierre-louis.bossart@linux.intel.com>
 <20211004162423.85323-2-pierre-louis.bossart@linux.intel.com>
 <s5h8rz8ez3s.wl-tiwai@suse.de>
 <c62b3749-c5ea-7b1e-2831-272c8a14d3ac@linux.intel.com>
 <s5hbl43egs8.wl-tiwai@suse.de>
 <1ae2012b-d6bd-77ce-0a9e-98aec4d0f868@linux.intel.com>
 <s5hv9223h86.wl-tiwai@suse.de>
 <e630eb5f-f0f2-c193-ab68-46df26083275@linux.intel.com>
 <s5hk0ii1cwf.wl-tiwai@suse.de>
 <e3c854ba-9abf-c9f1-1d74-1a82c9a7b6b3@linux.intel.com>
User-Agent: Wanderlust/2.15.9 (Almost Unreal) SEMI/1.14.6 (Maruoka)
 FLIM/1.14.9 (=?UTF-8?B?R29qxY0=?=) APEL/10.8 Emacs/25.3
 (x86_64-suse-linux-gnu) MULE/6.0 (HANACHIRUSATO)
MIME-Version: 1.0 (generated by SEMI 1.14.6 - "Maruoka")
Content-Type: text/plain; charset=US-ASCII
Cc: alsa-devel@alsa-project.org, broonie@kernel.org,
 P9ter Ujfalusi <peter.ujfalusi@linux.intel.com>,
 Ranjani Sridharan <ranjani.sridharan@linux.intel.com>,
 Kai Vehmanen <kai.vehmanen@linux.intel.com>
X-BeenThere: alsa-devel@alsa-project.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: "Alsa-devel mailing list for ALSA developers -
 http://www.alsa-project.org" <alsa-devel.alsa-project.org>
List-Unsubscribe: <https://mailman.alsa-project.org/mailman/options/alsa-devel>, 
 <mailto:alsa-devel-request@alsa-project.org?subject=unsubscribe>
List-Archive: <http://mailman.alsa-project.org/pipermail/alsa-devel/>
List-Post: <mailto:alsa-devel@alsa-project.org>
List-Help: <mailto:alsa-devel-request@alsa-project.org?subject=help>
List-Subscribe: <https://mailman.alsa-project.org/mailman/listinfo/alsa-devel>, 
 <mailto:alsa-devel-request@alsa-project.org?subject=subscribe>
Errors-To: alsa-devel-bounces@alsa-project.org
Sender: "Alsa-devel" <alsa-devel-bounces@alsa-project.org>

On Tue, 12 Oct 2021 18:41:19 +0200,
Pierre-Louis Bossart wrote:
> 
> 
> 
> On 10/12/21 10:27 AM, Takashi Iwai wrote:
> > On Tue, 12 Oct 2021 17:15:56 +0200,
> > Pierre-Louis Bossart wrote:
> >>
> >>> In either way, the new_ptr has to be validated beforehand that it's
> >>> within 0..boundary-1.  (old_ptr is assumed to be valid.)
> >>
> >> In the 3 of the calls to pcm_lib_apply_appl_ptr(), the check is done
> >> already prior to calling that function
> >> 	if (appl_ptr >= runtime->boundary)
> >> 		appl_ptr -= runtime->boundary;
> >> 	err = pcm_lib_apply_appl_ptr(substream, appl_ptr);
> >>
> >>
> >> it's rather unclear to me why the same check is not done for sync_ptr, e.g.
> >>
> >> if (!(sync_ptr.flags & SNDRV_PCM_SYNC_PTR_APPL)) {
> >> 	err = pcm_lib_apply_appl_ptr(substream,	
> >> 			     sync_ptr.c.control.appl_ptr);
> >>
> >> if (!(sflags & SNDRV_PCM_SYNC_PTR_APPL)) {
> >> 	err = pcm_lib_apply_appl_ptr(substream,
> >> 				scontrol.appl_ptr);
> >>
> >> Should I add a check there, or add a check inside of
> >> pcm_lib_apply_appl_ptr() which would be a duplicate in the majority of
> >> cases?
> > 
> > I guess adding in pcm_lib_appl_appl_ptr() would be easier and safer.
> > There is even one more place that is calling pcm_lib_apply_appl_ptr()
> > in the very latest commit (a fix for a buggy 32bit compat ioctl).
> 
> ok, here's the code I'll start testing. Thanks a lot Takashi for your help.
> 
> diff --git a/sound/core/pcm_lib.c b/sound/core/pcm_lib.c
> index a144a3f68e9e..e839459916ca 100644
> --- a/sound/core/pcm_lib.c
> +++ b/sound/core/pcm_lib.c
> @@ -2127,11 +2127,30 @@ int pcm_lib_apply_appl_ptr(struct
> snd_pcm_substream *substream,
>  {
>         struct snd_pcm_runtime *runtime = substream->runtime;
>         snd_pcm_uframes_t old_appl_ptr = runtime->control->appl_ptr;
> +       snd_pcm_sframes_t diff;
>         int ret;
> 
>         if (old_appl_ptr == appl_ptr)
>                 return 0;
> 
> +       /*
> +        * check if a rewind is requested by the application, after
> +        * verifying the new appl_ptr is in the 0..boundary range
> +        */
> +       if (substream->runtime->info & SNDRV_PCM_INFO_NO_REWINDS) {
> +               if (appl_ptr >= runtime->boundary)
> +                       appl_ptr -= runtime->boundary;

The boundary check can (or should) be done unconditionally.
It was too naive to assume a sane appl_ptr passed always.
And, it can rather return an error.  So,

	if (appl_ptr >= runtime->boundary)
		return -EINVAL;

	/* check if a rewind is requested by the application */
	if (substream->runtime->info & SNDRV_PCM_INFO_NO_REWINDS) {
		diff = appl_ptr - old_appl_ptr;
		....

> +               if (diff >= 0) {
> +                       if (diff > runtime->buffer_size)
> +                               return 0;
> +               } else {
> +                       if (runtime->boundary + diff > runtime->buffer_size)
> +                               return 0;

I'm not sure whether we should return 0 here.  In snd_pcm_rewind() it
returns 0 due to application breakage, though.


thanks,

Takashi
