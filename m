Return-Path: <alsa-devel-bounces@alsa-project.org>
X-Original-To: lists+alsa-devel@lfdr.de
Delivered-To: lists+alsa-devel@lfdr.de
Received: from alsa0.perex.cz (alsa0.perex.cz [77.48.224.243])
	by mail.lfdr.de (Postfix) with ESMTPS id D9FCA11C2A7
	for <lists+alsa-devel@lfdr.de>; Thu, 12 Dec 2019 02:47:06 +0100 (CET)
Received: from alsa1.perex.cz (alsa1.perex.cz [207.180.221.201])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by alsa0.perex.cz (Postfix) with ESMTPS id 33DE01689;
	Thu, 12 Dec 2019 02:46:16 +0100 (CET)
DKIM-Filter: OpenDKIM Filter v2.11.0 alsa0.perex.cz 33DE01689
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=alsa-project.org;
	s=default; t=1576115226;
	bh=eyLXQVS0COhV1++1ePCiEeZvp6axOMETAesevV0h2zM=;
	h=From:To:Date:Cc:Subject:List-Id:List-Unsubscribe:List-Archive:
	 List-Post:List-Help:List-Subscribe:From;
	b=XMhctMUc5KVPwmf4OXqt6+iOcDvppvxXVf6io67yMxhEiZntM7MYSUPjQ+En0obci
	 RPmu153oZgLWy90K4UmOK+TsnxCHit04+9mYEpatAJP3Mtjd0No71C8JuktJappdqz
	 oZc1+4yJ9oFrFe6gTPob7XSg+uoUQR/rW01QG4fE=
Received: from alsa1.perex.cz (localhost.localdomain [127.0.0.1])
	by alsa1.perex.cz (Postfix) with ESMTP id 66548F80245;
	Thu, 12 Dec 2019 02:45:24 +0100 (CET)
X-Original-To: alsa-devel@alsa-project.org
Delivered-To: alsa-devel@alsa-project.org
Received: by alsa1.perex.cz (Postfix, from userid 50401)
 id D9EB2F80234; Thu, 12 Dec 2019 02:45:20 +0100 (CET)
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on alsa1.perex.cz
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=SPF_HELO_NONE,SPF_NONE
 autolearn=disabled version=3.4.0
Received: from mga07.intel.com (mga07.intel.com [134.134.136.100])
 (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
 (No client certificate requested)
 by alsa1.perex.cz (Postfix) with ESMTPS id 2B7AFF800F3
 for <alsa-devel@alsa-project.org>; Thu, 12 Dec 2019 02:45:16 +0100 (CET)
DKIM-Filter: OpenDKIM Filter v2.11.0 alsa1.perex.cz 2B7AFF800F3
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga001.jf.intel.com ([10.7.209.18])
 by orsmga105.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 11 Dec 2019 17:45:12 -0800
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.69,303,1571727600"; d="scan'208";a="296446033"
Received: from gjang-mobl.amr.corp.intel.com (HELO
 pbossart-mobl3.amr.corp.intel.com) ([10.252.207.37])
 by orsmga001.jf.intel.com with ESMTP; 11 Dec 2019 17:45:11 -0800
From: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
To: alsa-devel@alsa-project.org
Date: Wed, 11 Dec 2019 19:44:56 -0600
Message-Id: <20191212014507.28050-1-pierre-louis.bossart@linux.intel.com>
X-Mailer: git-send-email 2.20.1
MIME-Version: 1.0
Cc: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>, tiwai@suse.de,
 gregkh@linuxfoundation.org, linux-kernel@vger.kernel.org,
 Ranjani Sridharan <ranjani.sridharan@linux.intel.com>, vkoul@kernel.org,
 broonie@kernel.org, srinivas.kandagatla@linaro.org, jank@cadence.com,
 slawomir.blauciak@intel.com, Bard liao <yung-chuan.liao@linux.intel.com>,
 Rander Wang <rander.wang@linux.intel.com>
Subject: [alsa-devel] [PATCH v5 00/11] soundwire: update ASoC interfaces
X-BeenThere: alsa-devel@alsa-project.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: "Alsa-devel mailing list for ALSA developers -
 http://www.alsa-project.org" <alsa-devel.alsa-project.org>
List-Unsubscribe: <https://mailman.alsa-project.org/mailman/options/alsa-devel>, 
 <mailto:alsa-devel-request@alsa-project.org?subject=unsubscribe>
List-Archive: <http://mailman.alsa-project.org/pipermail/alsa-devel/>
List-Post: <mailto:alsa-devel@alsa-project.org>
List-Help: <mailto:alsa-devel-request@alsa-project.org?subject=help>
List-Subscribe: <https://mailman.alsa-project.org/mailman/listinfo/alsa-devel>, 
 <mailto:alsa-devel-request@alsa-project.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: alsa-devel-bounces@alsa-project.org
Sender: "Alsa-devel" <alsa-devel-bounces@alsa-project.org>

V2UgbmVlZCBuZXcgZmllbGRzIGluIGV4aXN0aW5nIHN0cnVjdHVyZXMgdG8KYSkgZGVhbCB3aXRo
IHJhY2UgY29uZGl0aW9ucyBvbiBjb2RlYyBwcm9iZS9lbnVtZXJhdGlvbgpiKSBhbGxvdyBmb3Ig
bXVsdGktc3RlcCBBQ1BJIHNjYW4vcHJvYmUvc3RhcnR1cCBvbiBJbnRlbCBwbGFmb3JtcwpjKSBk
ZWFsIHdpdGggTVNJIGlzc3VlcyB1c2luZyBhIHNpbmdsZSBoYW5kbGVyL3RocmVhZHMgZm9yIGFs
bCBhdWRpbwppbnRlcnJ1cHRzCmQpIGRlYWwgd2l0aCBhY2Nlc3MgdG8gcmVnaXN0ZXJzIHNoYXJl
ZCBhY3Jvc3MgbXVsdGlwbGUgbGlua3Mgb24gSW50ZWwKcGxhdGZvcm1zCgpUaGVzZSBzdHJ1Y3R1
cmVzIGZvciBhKSB3aWxsIGJlIHVzZWQgYnkgdGhlIFNPRiBkcml2ZXIgYXMgd2VsbCBhcwpjb2Rl
YyBkcml2ZXJzLiBUaGUgYikgYykgYW5kIGQpIGNhc2VzIGFyZSBvbmx5IGZvciB0aGUgSW50ZWwt
c3BlY2lmaWMKaW1wbGVtZW50YXRpb24uCgpUbyBhdm9pZCBjb25mbGljdHMgYmV0d2VlbiBBU29D
IGFuZCBTb3VuZHdpcmUgdHJlZXMsIHRoZXNlIDExIHBhdGNoZXMKYXJlIHByb3ZpZGVkIG91dC1v
Zi1vcmRlciwgYmVmb3JlIHRoZSBmdW5jdGlvbmFsaXR5IGVuYWJsZWQgaW4gdGhlc2UKaGVhZGVy
IGZpbGVzIGlzIGFkZGVkIGluIGZvbGxvdy11cCBwYXRjaCBzZXJpZXMgd2hpY2ggY2FuIGJlIGFw
cGxpZWQKc2VwYXJhdGVseSBpbiB0aGUgQVNvQyBhbmQgU291bmR3aXJlIHRyZWVzLiBBcyBkaXNj
dXNzZWQgZWFybGllciwKVmlub2Qgd291bGQgbmVlZCB0byBwcm92aWRlIGFuIGltbXV0YWJsZSB0
YWcgZm9yIE1hcmsgQnJvd24sIGFuZCB0aGUKaW50ZWdyYXRpb24gb24gdGhlIEFTb0Mgc2lkZSBv
ZiBTT0YgY2hhbmdlcyBhbmQgbmV3IGNvZGVjcyBkcml2ZXJzIGNhbgpwcm9jZWVkIGluIHBhcmFs
bGVsIHdpdGggU291bmRXaXJlIGNvcmUgY2hhbmdlcy4KCkkgaGFkIG11bHRpcGxlIG9mZmxpbmUg
ZGlzY3Vzc2lvbnMgd2l0aCBWaW5vZC9NYXJrL1Rha2FzaGkgb24gaG93IHRvCnByb2NlZWQgd2l0
aGUgdm9sdW1lIG9mIFNvdW5kV2lyZSBjaGFuZ2VzLiBOb3cgdGhhdCB2NS41LXJjMSBpcyBvdXQg
d2UKc2hvdWxkIGdvIGFoZWFkIHdpdGggdGhlc2UgaW50ZXJmYWNlIGNoYW5nZXMuCgpUaGUgbmV4
dCBwYXRjaHNldCAiW1BBVENIIHYzIDAwLzE1XSBzb3VuZHdpcmU6IGludGVsOiBpbXBsZW1lbnQg
bmV3CkFTb0MgaW50ZXJmYWNlc+KAiyIgY2FuIHN0aWxsIGJlIHJldmlld2VkIGJ1dCB3aWxsIG5v
dCBhcHBseSBhcyBpcyBkdWUgdG8KYSBvbmUtbGluZSBjb25mbGljdC4gQW4gdXBkYXRlIHdpbGwg
YmUgcHJvdmlkZWQgd2hlbiBWaW5vZCBhcHBsaWVzCnRoaXMgc2VyaWVzIHRvIGF2b2lkIG5vaXNl
IG9uIG1haWxpbmcgbGlzdHMuCgpBbiB1cGRhdGUgZm9yIHRoZSBzZXJpZXMgIltQQVRDSCB2MyAw
MC8yMl0gc291bmR3aXJlOiBjb2RlIGhhcmRlbmluZwphbmQgc3VzcGVuZC1yZXN1bWUgc3VwcG9y
dCIgaXMgcmVhZHkgYnV0IHdpbGwgYmUgcHJvdmlkZWQgd2hlbiBib3RoCnRoZSBpbnRlcmZhY2Vz
IGNoYW5nZXMgYW5kIHRoZSBpbXBsZW1lbnRhdGlvbiBjaGFuZ2VzIGFyZSBtZXJnZWQuCgpDb21t
ZW50cyBhbmQgZmVlZGJhY2sgd2VsY29tZQp+UGllcnJlCgpDaGFuZ2VzIHNpbmNlIHY0OgpPbmUg
bGluZSBjaGFuZ2UgdG8gcmVtb3ZlIEVYUE9SVF9TWU1CT0woc2R3X2ludGVsX2luaXQpCkZpeCBi
dWlsZCBpc3N1ZSB3aXRoIHJhbmRjb25maWcgcmVwb3J0ZWQgYnkga2J1aWxkIChtaXNzaW5nIGlu
Y2x1ZGUgb2YKbGludXgvaXJxcmV0dXJuLmgpCgpDaGFuZ2VzIHNpbmNlIHYzOgpSZW9yZGVyZWQg
Y29kZSBhbmQgYWRkZWQga2VybmVsIGRvYyBjb21tZW50cwpBZGRlZCBwcm90b3R5cGVzIGFuZCBm
aWVsZHMgbmVlZGVkIHRvIGRlYWwgd2l0aCBTb3VuZFdpcmUgaW50ZXJydXB0cwppbiBhIHNpbmds
ZSBoYW5kbGVyL3RocmVhZCwgZm9sbG93aW5nIHdoYXQgaXMgYWxyZWFkeSBkb25lIG9uIHRoZSBE
U1AKc2lkZS4KQWRkZWQgbXV0ZXggdG8gY29udHJvbCBhY2Nlc3MgdG8gcmVnaXN0ZXJzIHNoYXJl
ZCBhY3Jvc3MgbGlua3MKQWRkZWQgaW5pdGlhbCBkZWZpbml0aW9ucyBmb3IgY2xvY2sgc3RvcCBz
dXBwb3J0IG9uIEludGVsCnBsYXRmb3Jtcy4gRGVwZW5kaW5nIG9uIHBvd2VyIGFuZCBsYXRlbmN5
IHJlcXVpcmVtZW50cywgZGlmZmVyZW50CiJxdWlya3MiIGNhbiBiZSBzdXBwb3J0ZWQuCgpDaGFu
Z2VzIHNpbmNlIHYyOgpBZGRlZCBuZXcgZmllbGQgdG8gZGVhbCB3aXRoIGEgcmFjZSBjb25kaXRp
b24gbGVhZGluZyB0byBhIHRpbWVvdXQKd2hlbiB0aGUgY29kZWMgZ29lcyB0aHJvdWdoIGEgcG1f
cnVudGltZSBzdXNwZW5kL3Jlc3VtZSB0cmFuc2l0aW9uCndoaWxlIHRoZSBNYXN0ZXIgcmVtYWlu
cyBhY3RpdmUuCkNsYXJpZmllZCBjb21taXQgbWVzc2FnZXMgd2l0aCBkZXRhaWxlZCBleHBsYW5h
dGlvbnMgd2hhdCB0aG9zZSByYWNlCmNvbmRpdGlvbnMgYXJlIGFuZCB3aHkgdGhlIGNoYW5nZXMg
d2VyZSBpbnRyb2R1Y2VkLgpSZW9yZGVyZWQgZmllbGRzIGZvciBJbnRlbCByb3V0aW5lcwpBZGRl
ZCBrZXJuZWwtZG9jIGRlZmluaXRpb25zIGZvciBzdHJ1Y3R1cmVzCk1vZGlmaWVkIHRoZSBwYXRj
aCBzdWJqZWN0cyB0byBtYWtlIHRoZSBtYXBwaW5nIGJldHdlZW4gaW50ZXJmYWNlIGRlZmluaXRp
b24KYW5kIGltcGxlbWVudGF0aW9uIHN0cmFpZ2h0Zm9yd2FyZC4KCkNoYW5nZXMgc2luY2UgdjEg
KG5vIGZlZWRiYWNrIHJlY2VpdmVkIHNpbmNlIE9jdG9iZXIgMjMpCmFkZGl0aW9uYWwgaW5pdGlh
bGl6YXRpb25fY29tcGxldGUgdXRpbGl0eSB0byBoZWxwIGNvZGVjIGRyaXZlcnMgd2l0aAp0aGVp
ciByZXN1bWUgb3BlcmF0aW9uLCB3YWl0aW5nIGZvciB0aGUgZW51bWVyYXRpb24gdG8gY29tcGxl
dGUgaXMgbm90CmFsd2F5cyBlbm91Z2guCgpDaGFuZ2VzIHNpbmNlIHYzOgpSZW9yZGVyZWQgY29k
ZSBhbmQgYWRkZWQga2VybmVsIGRvYyBjb21tZW50cwpBZGRlZCBwcm90b3R5cGVzIGFuZCBmaWVs
ZHMgbmVlZGVkIHRvIGRlYWwgd2l0aCBTb3VuZFdpcmUgaW50ZXJydXB0cwppbiBhIHNpbmdsZSBo
YW5kbGVyL3RocmVhZCwgZm9sbG93aW5nIHdoYXQgaXMgYWxyZWFkeSBkb25lIG9uIHRoZSBEU1AK
c2lkZS4KQWRkZWQgbXV0ZXggdG8gY29udHJvbCBhY2Nlc3MgdG8gcmVnaXN0ZXJzIHNoYXJlZCBh
Y3Jvc3MgbGlua3MKQWRkZWQgaW5pdGlhbCBkZWZpbml0aW9ucyBmb3IgY2xvY2sgc3RvcCBzdXBw
b3J0IG9uIEludGVsCnBsYXRmb3Jtcy4gRGVwZW5kaW5nIG9uIHBvd2VyIGFuZCBsYXRlbmN5IHJl
cXVpcmVtZW50cywgZGlmZmVyZW50CiJxdWlya3MiIGNhbiBiZSBzdXBwb3J0ZWQuCgpDaGFuZ2Vz
IHNpbmNlIHYyOgpBZGRlZCBuZXcgZmllbGQgdG8gZGVhbCB3aXRoIGEgcmFjZSBjb25kaXRpb24g
bGVhZGluZyB0byBhIHRpbWVvdXQKd2hlbiB0aGUgY29kZWMgZ29lcyB0aHJvdWdoIGEgcG1fcnVu
dGltZSBzdXNwZW5kL3Jlc3VtZSB0cmFuc2l0aW9uCndoaWxlIHRoZSBNYXN0ZXIgcmVtYWlucyBh
Y3RpdmUuCkNsYXJpZmllZCBjb21taXQgbWVzc2FnZXMgd2l0aCBkZXRhaWxlZCBleHBsYW5hdGlv
bnMgd2hhdCB0aG9zZSByYWNlCmNvbmRpdGlvbnMgYXJlIGFuZCB3aHkgdGhlIGNoYW5nZXMgd2Vy
ZSBpbnRyb2R1Y2VkLgpSZW9yZGVyZWQgZmllbGRzIGZvciBJbnRlbCByb3V0aW5lcwpBZGRlZCBr
ZXJuZWwtZG9jIGRlZmluaXRpb25zIGZvciBzdHJ1Y3R1cmVzCk1vZGlmaWVkIHRoZSBwYXRjaCBz
dWJqZWN0cyB0byBtYWtlIHRoZSBtYXBwaW5nIGJldHdlZW4gaW50ZXJmYWNlIGRlZmluaXRpb24K
YW5kIGltcGxlbWVudGF0aW9uIHN0cmFpZ2h0Zm9yd2FyZC4KCkNoYW5nZXMgc2luY2UgdjEgKG5v
IGZlZWRiYWNrIHJlY2VpdmVkIHNpbmNlIE9jdG9iZXIgMjMpCmFkZGl0aW9uYWwgaW5pdGlhbGl6
YXRpb25fY29tcGxldGUgdXRpbGl0eSB0byBoZWxwIGNvZGVjIGRyaXZlcnMgd2l0aAp0aGVpciBy
ZXN1bWUgb3BlcmF0aW9uLCB3YWl0aW5nIGZvciB0aGUgZW51bWVyYXRpb24gdG8gY29tcGxldGUg
aXMgbm90CmFsd2F5cyBlbm91Z2guCgpCYXJkIExpYW8gKDIpOgogIHNvdW5kd2lyZTogaW50ZWw6
IHVwZGF0ZSBoZWFkZXJzIGZvciBpbnRlcnJ1cHRzCiAgc291bmR3aXJlOiBpbnRlbDogYWRkIGxp
bmtfbGlzdCB0byBoYW5kbGUgaW50ZXJydXB0cyB3aXRoIGEgc2luZ2xlCiAgICB0aHJlYWQKClBp
ZXJyZS1Mb3VpcyBCb3NzYXJ0ICg3KToKICBzb3VuZHdpcmU6IHNkd19zbGF2ZTogYWRkIHByb2Jl
X2NvbXBsZXRlIHN0cnVjdHVyZSBhbmQgbmV3IGZpZWxkcwogIHNvdW5kd2lyZTogc2R3X3NsYXZl
OiBhZGQgZW51bWVyYXRpb25fY29tcGxldGUgc3RydWN0dXJlCiAgc291bmR3aXJlOiBzZHdfc2xh
dmU6IGFkZCBpbml0aWFsaXphdGlvbl9jb21wbGV0ZSBkZWZpbml0aW9uCiAgc291bmR3aXJlOiBz
ZHdfc2xhdmU6IHRyYWNrIHVuYXR0YWNoX3JlcXVlc3QgdG8gaGFuZGxlIGFsbCBpbml0CiAgICBz
ZXF1ZW5jZXMKICBzb3VuZHdpcmU6IGludGVsOiB1cGRhdGUgaW50ZXJmYWNlcyBiZXR3ZWVuIEFT
b0MgYW5kIFNvdW5kV2lyZQogIHNvdW5kd2lyZTogaW50ZWw6IGFkZCBtdXRleCBmb3Igc2hhcmVk
IFNISU0gcmVnaXN0ZXIgYWNjZXNzCiAgc291bmR3aXJlOiBpbnRlbDogYWRkIGNsb2NrIHN0b3Ag
cXVpcmtzCgpSYW5kZXIgV2FuZyAoMik6CiAgc291bmR3aXJlOiBpbnRlbDogdXBkYXRlIHN0cmVh
bSBjYWxsYmFja3MgZm9yIGh3cGFyYW1zL2ZyZWUgc3RyZWFtCiAgICBvcGVyYXRpb25zCiAgc291
bmR3aXJlOiBpbnRlbDogYWRkIHByb3RvdHlwZSBmb3IgV0FLRUVOIGludGVycnVwdCBwcm9jZXNz
aW5nCgogZHJpdmVycy9zb3VuZHdpcmUvaW50ZWwuYyAgICAgICAgICAgfCAgMjAgKystLQogZHJp
dmVycy9zb3VuZHdpcmUvaW50ZWwuaCAgICAgICAgICAgfCAgMTMgKystCiBkcml2ZXJzL3NvdW5k
d2lyZS9pbnRlbF9pbml0LmMgICAgICB8ICAzMiArKy0tLS0KIGluY2x1ZGUvbGludXgvc291bmR3
aXJlL3Nkdy5oICAgICAgIHwgIDE5ICsrKysKIGluY2x1ZGUvbGludXgvc291bmR3aXJlL3Nkd19p
bnRlbC5oIHwgMTU2ICsrKysrKysrKysrKysrKysrKysrKysrKysrLS0KIDUgZmlsZXMgY2hhbmdl
ZCwgMTk2IGluc2VydGlvbnMoKyksIDQ0IGRlbGV0aW9ucygtKQoKLS0gCjIuMjAuMQoKX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18KQWxzYS1kZXZlbCBtYWls
aW5nIGxpc3QKQWxzYS1kZXZlbEBhbHNhLXByb2plY3Qub3JnCmh0dHBzOi8vbWFpbG1hbi5hbHNh
LXByb2plY3Qub3JnL21haWxtYW4vbGlzdGluZm8vYWxzYS1kZXZlbAo=
