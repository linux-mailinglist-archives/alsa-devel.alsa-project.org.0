Return-Path: <alsa-devel-bounces@alsa-project.org>
X-Original-To: lists+alsa-devel@lfdr.de
Delivered-To: lists+alsa-devel@lfdr.de
Received: from alsa0.perex.cz (alsa0.perex.cz [77.48.224.243])
	by mail.lfdr.de (Postfix) with ESMTPS id 718FE31398C
	for <lists+alsa-devel@lfdr.de>; Mon,  8 Feb 2021 17:34:42 +0100 (CET)
Received: from alsa1.perex.cz (alsa1.perex.cz [207.180.221.201])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by alsa0.perex.cz (Postfix) with ESMTPS id DD46E84A;
	Mon,  8 Feb 2021 17:33:51 +0100 (CET)
DKIM-Filter: OpenDKIM Filter v2.11.0 alsa0.perex.cz DD46E84A
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=alsa-project.org;
	s=default; t=1612802082;
	bh=Uzev0ALhE4ZFJmh/d8jaQEzlm2VEaJRB7FhxMA3TBCY=;
	h=Date:From:To:Subject:In-Reply-To:References:Cc:List-Id:
	 List-Unsubscribe:List-Archive:List-Post:List-Help:List-Subscribe:
	 From;
	b=JTCL8lip7367JdjHB59cooAx1LXJ1OKyXEy2ziur5Ly4qHHHCkMBEqyE6KmsFtJVq
	 5nNWB7f5DIOze11nuw8szERQm23vxz5DvSsbRL8jUuqrNHS8A6zPwugyl5HkoFBOeT
	 jsxXbY2EDkFcXusA/4kiV+grvUdl/H7eViNL9U0M=
Received: from alsa1.perex.cz (localhost.localdomain [127.0.0.1])
	by alsa1.perex.cz (Postfix) with ESMTP id 3893AF8022D;
	Mon,  8 Feb 2021 17:33:10 +0100 (CET)
X-Original-To: alsa-devel@alsa-project.org
Delivered-To: alsa-devel@alsa-project.org
Received: by alsa1.perex.cz (Postfix, from userid 50401)
 id A68D4F8022B; Mon,  8 Feb 2021 17:33:07 +0100 (CET)
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on alsa1.perex.cz
X-Spam-Level: 
X-Spam-Status: No, score=0.5 required=5.0 tests=PRX_BODY_14,SPF_HELO_NONE,
 SPF_NONE autolearn=disabled version=3.4.0
Received: from mx2.suse.de (mx2.suse.de [195.135.220.15])
 (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
 (No client certificate requested)
 by alsa1.perex.cz (Postfix) with ESMTPS id A5A5BF80165
 for <alsa-devel@alsa-project.org>; Mon,  8 Feb 2021 17:33:03 +0100 (CET)
DKIM-Filter: OpenDKIM Filter v2.11.0 alsa1.perex.cz A5A5BF80165
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay2.suse.de (unknown [195.135.221.27])
 by mx2.suse.de (Postfix) with ESMTP id CF2D6AB98;
 Mon,  8 Feb 2021 16:33:02 +0000 (UTC)
Date: Mon, 08 Feb 2021 17:33:02 +0100
Message-ID: <s5h5z32y0xt.wl-tiwai@suse.de>
From: Takashi Iwai <tiwai@suse.de>
To: Jaroslav Kysela <perex@perex.cz>
Subject: Re: [PATCH] [RFC] ALSA: control - add generic LED API to sound core
 routines
In-Reply-To: <3bc1b151-68ce-8408-aff1-aeba2e6fe4c3@perex.cz>
References: <20210207201157.869972-1-perex@perex.cz>
 <s5him72y4q0.wl-tiwai@suse.de>
 <3bc1b151-68ce-8408-aff1-aeba2e6fe4c3@perex.cz>
User-Agent: Wanderlust/2.15.9 (Almost Unreal) SEMI/1.14.6 (Maruoka)
 FLIM/1.14.9 (=?UTF-8?B?R29qxY0=?=) APEL/10.8 Emacs/25.3
 (x86_64-suse-linux-gnu) MULE/6.0 (HANACHIRUSATO)
MIME-Version: 1.0 (generated by SEMI 1.14.6 - "Maruoka")
Content-Type: text/plain; charset=US-ASCII
Cc: Hans de Goede <hdegoede@redhat.com>,
 ALSA development <alsa-devel@alsa-project.org>,
 Perry Yuan <Perry.Yuan@dell.com>
X-BeenThere: alsa-devel@alsa-project.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: "Alsa-devel mailing list for ALSA developers -
 http://www.alsa-project.org" <alsa-devel.alsa-project.org>
List-Unsubscribe: <https://mailman.alsa-project.org/mailman/options/alsa-devel>, 
 <mailto:alsa-devel-request@alsa-project.org?subject=unsubscribe>
List-Archive: <http://mailman.alsa-project.org/pipermail/alsa-devel/>
List-Post: <mailto:alsa-devel@alsa-project.org>
List-Help: <mailto:alsa-devel-request@alsa-project.org?subject=help>
List-Subscribe: <https://mailman.alsa-project.org/mailman/listinfo/alsa-devel>, 
 <mailto:alsa-devel-request@alsa-project.org?subject=subscribe>
Errors-To: alsa-devel-bounces@alsa-project.org
Sender: "Alsa-devel" <alsa-devel-bounces@alsa-project.org>

On Mon, 08 Feb 2021 17:17:29 +0100,
Jaroslav Kysela wrote:
> 
> Dne 08. 02. 21 v 16:11 Takashi Iwai napsal(a):
> > On Sun, 07 Feb 2021 21:11:57 +0100,
> > Jaroslav Kysela wrote:
> >>
> >> [DO NOT MERGE!]
> >> [This is just an early proposal for comments]
> >> [The code is not tested / debugged]
> >>
> >> The recent laptops have usually two LEDs assigned to reflect
> >> the speaker and microphone mute state. This implementation
> >> adds a tiny layer on top of the control API which calculates
> >> the state for those LEDs using the driver callbacks.
> >>
> >> Two new access flags are introduced to describe the controls
> >> which affects the audio path settings (an easy path for drivers).
> >>
> >> The LED resource can be shared with multiple sound cards with
> >> this code. The user space controls may be added to the state
> >> chain, too.
> >>
> >> This code should replace the LED code in the HDA driver and
> >> add a possibility to easy extend the other drivers (ASoC
> >> codecs etc.).
> > 
> > Having a common helper in the ALSA core sounds like a good way to go.
> > 
> > My slight concern is that this will end up having the dependency on
> > LEDS stuff unconditionally when CONFIG_SND_LED=y.
> 
> You probably mean that the LEDs subsystem is activated even if we don't have
> audio LED class driver connected, right?

Yes.

> I think that the HDA way (select conditionally the LED code) in the low-level
> driver Kconfig is good, but I'm open for any other suggestions.

Well, in the case of HD-audio, it's only for HD-audio.  But with this
change, LEDS class will be always loaded on distro kernels no matter
which sound driver is actually used.

I guess we can split the LED-support code to another module?
The problem would be the registration from the control core.  The
other parts look already isolated enough.


> > Also, are those new access flags exposed to user-space intentionally,
> > so that user-space gets some information?
> 
> Yes, it's one benefit, the second benefit is that we can create user space
> controls for hardware which does not have any switch / volume controls for the
> given path.
> 
> An example is the AMD ACP bridge with the simple digital microphones. We can
> use alsa-lib's softvol plugin to control the volume for this and it would be
> nice to mark this user space control with the mic mute LED flag.

OK, makes sense.


> > Last but not least: I'm not sure whether we should limit to only two
> > LEDs (mic and spk).  I'm afraid that there will be more LEDs in
> > future; people love decorations :)
> 
> We have some more free bits in the access field. If the LED count will
> increase in future for the standard hardware, we should reconsider the
> implementation (info callback or so).
> 
> Perhaps, it may be clever to reserve three bits from the access flags now (to
> create a three bit value not a mask). In this case, we can carry information
> for 7 LED types (assuming that one control element can be assigned only to one
> LED type).

Sounds like a good idea.  I guess 4 types would suffice for now.


thanks,

Takashi
