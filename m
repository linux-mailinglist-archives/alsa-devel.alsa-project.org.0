Return-Path: <alsa-devel-bounces@alsa-project.org>
X-Original-To: lists+alsa-devel@lfdr.de
Delivered-To: lists+alsa-devel@lfdr.de
Received: from alsa0.perex.cz (alsa0.perex.cz [77.48.224.243])
	by mail.lfdr.de (Postfix) with ESMTPS id C9DE15B6873
	for <lists+alsa-devel@lfdr.de>; Tue, 13 Sep 2022 09:16:28 +0200 (CEST)
Received: from alsa1.perex.cz (alsa1.perex.cz [207.180.221.201])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by alsa0.perex.cz (Postfix) with ESMTPS id CD4D61743;
	Tue, 13 Sep 2022 09:15:37 +0200 (CEST)
DKIM-Filter: OpenDKIM Filter v2.11.0 alsa0.perex.cz CD4D61743
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=alsa-project.org;
	s=default; t=1663053387;
	bh=SBWiBcDEO+0ZC/kj7DO4ZlAg2bKhj2ixZhhded9QzVU=;
	h=Date:From:To:Subject:In-Reply-To:References:Cc:List-Id:
	 List-Unsubscribe:List-Archive:List-Post:List-Help:List-Subscribe:
	 From;
	b=RRepa03SiTFNNApVb/CUbI5mFSPFszHUT8l9/FPGiJZtxBco5jJbX1vJ9FX5eR6+A
	 6QIm2UdwFOvTxsvKhZ6wcfOXdReN5uwNePFDjq6An+wWv5KMahha9advZGCY+X9Ia2
	 lGlAD/Ipuo9f+BcwLbI/oxDroYwHPMj3m1/XT4fo=
Received: from alsa1.perex.cz (localhost.localdomain [127.0.0.1])
	by alsa1.perex.cz (Postfix) with ESMTP id 79CCBF8028B;
	Tue, 13 Sep 2022 09:15:37 +0200 (CEST)
X-Original-To: alsa-devel@alsa-project.org
Delivered-To: alsa-devel@alsa-project.org
Received: by alsa1.perex.cz (Postfix, from userid 50401)
 id 60EFBF80269; Tue, 13 Sep 2022 09:15:36 +0200 (CEST)
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on alsa1.perex.cz
X-Spam-Level: 
X-Spam-Status: No, score=-0.1 required=5.0 tests=DKIM_SIGNED,DKIM_VALID,
 DKIM_VALID_AU,SPF_HELO_NONE,SPF_NONE,T_SCC_BODY_TEXT_LINE,URIBL_BLOCKED
 autolearn=disabled version=3.4.0
Received: from smtp-out1.suse.de (smtp-out1.suse.de [195.135.220.28])
 (using TLSv1.2 with cipher ECDHE-RSA-AES128-GCM-SHA256 (128/128 bits))
 (No client certificate requested)
 by alsa1.perex.cz (Postfix) with ESMTPS id 4A2E8F8008E
 for <alsa-devel@alsa-project.org>; Tue, 13 Sep 2022 09:15:29 +0200 (CEST)
DKIM-Filter: OpenDKIM Filter v2.11.0 alsa1.perex.cz 4A2E8F8008E
Authentication-Results: alsa1.perex.cz;
 dkim=pass (1024-bit key) header.d=suse.de header.i=@suse.de
 header.b="AOEl/V1m"; 
 dkim=permerror (0-bit key) header.d=suse.de header.i=@suse.de
 header.b="dOOJHHnZ"
Received: from imap2.suse-dmz.suse.de (imap2.suse-dmz.suse.de [192.168.254.74])
 (using TLSv1.3 with cipher TLS_AES_256_GCM_SHA384 (256/256 bits)
 key-exchange X25519 server-signature ECDSA (P-521) server-digest SHA512)
 (No client certificate requested)
 by smtp-out1.suse.de (Postfix) with ESMTPS id A70FA34880;
 Tue, 13 Sep 2022 07:15:29 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=suse.de; s=susede2_rsa;
 t=1663053329; h=from:from:reply-to:date:date:message-id:message-id:to:to:cc:cc:
 mime-version:mime-version:content-type:content-type:
 in-reply-to:in-reply-to:references:references;
 bh=Asp3tq6eKpLmJQrxdQF0k5WefKNzKndJj+3xTCza4Jc=;
 b=AOEl/V1myWlE6Y4/RfD9xo9TsT+4dYd391jrdMVYaPWb7xQhbZK0wxbBmj/dQOhOMGPG4Z
 vDEyLauwUfJg4AWfzeAuwgrviT5/KVrRn82wTjD+wfk5QnYqCkdqXctj70ArVIfqu5gLsg
 fHWgacGmQTxGgQgnCP+z4zTJaQp5FqM=
DKIM-Signature: v=1; a=ed25519-sha256; c=relaxed/relaxed; d=suse.de;
 s=susede2_ed25519; t=1663053329;
 h=from:from:reply-to:date:date:message-id:message-id:to:to:cc:cc:
 mime-version:mime-version:content-type:content-type:
 in-reply-to:in-reply-to:references:references;
 bh=Asp3tq6eKpLmJQrxdQF0k5WefKNzKndJj+3xTCza4Jc=;
 b=dOOJHHnZbmeqMOfv44zy0dnRHX/qUwKP06n4R+5ZXL7TdHgb3BbJdWI/HabGuSM0T+xzvu
 mEhfLOrtCy9m/0Bw==
Received: from imap2.suse-dmz.suse.de (imap2.suse-dmz.suse.de [192.168.254.74])
 (using TLSv1.3 with cipher TLS_AES_256_GCM_SHA384 (256/256 bits)
 key-exchange X25519 server-signature ECDSA (P-521) server-digest SHA512)
 (No client certificate requested)
 by imap2.suse-dmz.suse.de (Postfix) with ESMTPS id 7ABF513AB5;
 Tue, 13 Sep 2022 07:15:29 +0000 (UTC)
Received: from dovecot-director2.suse.de ([192.168.254.65])
 by imap2.suse-dmz.suse.de with ESMTPSA id Q9w/HREuIGOBegAAMHmgww
 (envelope-from <tiwai@suse.de>); Tue, 13 Sep 2022 07:15:29 +0000
Date: Tue, 13 Sep 2022 09:15:28 +0200
Message-ID: <874jxbhhin.wl-tiwai@suse.de>
From: Takashi Iwai <tiwai@suse.de>
To: Mohan Kumar <mkumard@nvidia.com>
Subject: Re: [v2] ALSA: hda: Fix Nvidia dp infoframe
In-Reply-To: <20220913065818.13015-1-mkumard@nvidia.com>
References: <20220913065818.13015-1-mkumard@nvidia.com>
User-Agent: Wanderlust/2.15.9 (Almost Unreal) Emacs/27.2 Mule/6.0
MIME-Version: 1.0 (generated by SEMI-EPG 1.14.7 - "Harue")
Content-Type: text/plain; charset=US-ASCII
Cc: alsa-devel@alsa-project.org, linux-kernel@vger.kernel.org, tiwai@suse.com,
 jonathanh@nvidia.com, thierry.reding@gmail.com, linux-tegra@vger.kernel.org
X-BeenThere: alsa-devel@alsa-project.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: "Alsa-devel mailing list for ALSA developers -
 http://www.alsa-project.org" <alsa-devel.alsa-project.org>
List-Unsubscribe: <https://mailman.alsa-project.org/mailman/options/alsa-devel>, 
 <mailto:alsa-devel-request@alsa-project.org?subject=unsubscribe>
List-Archive: <http://mailman.alsa-project.org/pipermail/alsa-devel/>
List-Post: <mailto:alsa-devel@alsa-project.org>
List-Help: <mailto:alsa-devel-request@alsa-project.org?subject=help>
List-Subscribe: <https://mailman.alsa-project.org/mailman/listinfo/alsa-devel>, 
 <mailto:alsa-devel-request@alsa-project.org?subject=subscribe>
Errors-To: alsa-devel-bounces@alsa-project.org
Sender: "Alsa-devel" <alsa-devel-bounces@alsa-project.org>

On Tue, 13 Sep 2022 08:58:18 +0200,
Mohan Kumar wrote:
> 
> Nvidia HDA HW expects infoframe data bytes order same for both
> HDMI and DP i.e infoframe data starts from 5th bytes offset. As
> dp infoframe structure has 4th byte as valid infoframe data, use
> hdmi infoframe structure for nvidia dp infoframe to match HW behvaior.
> 
> Signed-off-by: Mohan Kumar <mkumard@nvidia.com>

Aha, so this affects on all Nvidia devices, not only on Tegra, but
also on PC?  Then we should put cc-to-stable definitely.

(No need to resend, I can put it locally.)


Takashi

> ---
>  sound/pci/hda/patch_hdmi.c | 23 +++++++++++++++++++----
>  1 file changed, 19 insertions(+), 4 deletions(-)
> 
> diff --git a/sound/pci/hda/patch_hdmi.c b/sound/pci/hda/patch_hdmi.c
> index 6c209cd26c0c..9127dd1b1a9c 100644
> --- a/sound/pci/hda/patch_hdmi.c
> +++ b/sound/pci/hda/patch_hdmi.c
> @@ -170,6 +170,8 @@ struct hdmi_spec {
>  	bool dyn_pcm_no_legacy;
>  	/* hdmi interrupt trigger control flag for Nvidia codec */
>  	bool hdmi_intr_trig_ctrl;
> +	bool nv_dp_workaround; /* workaround DP audio infoframe for Nvidia */
> +
>  	bool intel_hsw_fixup;	/* apply Intel platform-specific fixups */
>  	/*
>  	 * Non-generic VIA/NVIDIA specific
> @@ -679,15 +681,24 @@ static void hdmi_pin_setup_infoframe(struct hda_codec *codec,
>  				     int ca, int active_channels,
>  				     int conn_type)
>  {
> +	struct hdmi_spec *spec = codec->spec;
>  	union audio_infoframe ai;
>  
>  	memset(&ai, 0, sizeof(ai));
> -	if (conn_type == 0) { /* HDMI */
> +	if ((conn_type == 0) || /* HDMI */
> +		/* Nvidia DisplayPort: Nvidia HW expects same layout as HDMI */
> +		(conn_type == 1 && spec->nv_dp_workaround)) {
>  		struct hdmi_audio_infoframe *hdmi_ai = &ai.hdmi;
>  
> -		hdmi_ai->type		= 0x84;
> -		hdmi_ai->ver		= 0x01;
> -		hdmi_ai->len		= 0x0a;
> +		if (conn_type == 0) { /* HDMI */
> +			hdmi_ai->type		= 0x84;
> +			hdmi_ai->ver		= 0x01;
> +			hdmi_ai->len		= 0x0a;
> +		} else {/* Nvidia DP */
> +			hdmi_ai->type		= 0x84;
> +			hdmi_ai->ver		= 0x1b;
> +			hdmi_ai->len		= 0x11 << 2;
> +		}
>  		hdmi_ai->CC02_CT47	= active_channels - 1;
>  		hdmi_ai->CA		= ca;
>  		hdmi_checksum_audio_infoframe(hdmi_ai);
> @@ -3617,6 +3628,7 @@ static int patch_nvhdmi_2ch(struct hda_codec *codec)
>  	spec->pcm_playback.rates = SUPPORTED_RATES;
>  	spec->pcm_playback.maxbps = SUPPORTED_MAXBPS;
>  	spec->pcm_playback.formats = SUPPORTED_FORMATS;
> +	spec->nv_dp_workaround = true;
>  	return 0;
>  }
>  
> @@ -3756,6 +3768,7 @@ static int patch_nvhdmi(struct hda_codec *codec)
>  	spec->chmap.ops.chmap_cea_alloc_validate_get_type =
>  		nvhdmi_chmap_cea_alloc_validate_get_type;
>  	spec->chmap.ops.chmap_validate = nvhdmi_chmap_validate;
> +	spec->nv_dp_workaround = true;
>  
>  	codec->link_down_at_suspend = 1;
>  
> @@ -3779,6 +3792,7 @@ static int patch_nvhdmi_legacy(struct hda_codec *codec)
>  	spec->chmap.ops.chmap_cea_alloc_validate_get_type =
>  		nvhdmi_chmap_cea_alloc_validate_get_type;
>  	spec->chmap.ops.chmap_validate = nvhdmi_chmap_validate;
> +	spec->nv_dp_workaround = true;
>  
>  	codec->link_down_at_suspend = 1;
>  
> @@ -3992,6 +4006,7 @@ static int tegra_hdmi_init(struct hda_codec *codec)
>  	spec->chmap.ops.chmap_cea_alloc_validate_get_type =
>  		nvhdmi_chmap_cea_alloc_validate_get_type;
>  	spec->chmap.ops.chmap_validate = nvhdmi_chmap_validate;
> +	spec->nv_dp_workaround = true;
>  
>  	return 0;
>  }
> -- 
> 2.17.1
> 
