Return-Path: <alsa-devel-bounces@alsa-project.org>
X-Original-To: lists+alsa-devel@lfdr.de
Delivered-To: lists+alsa-devel@lfdr.de
Received: from alsa0.perex.cz (alsa0.perex.cz [77.48.224.243])
	by mail.lfdr.de (Postfix) with ESMTPS id BC4BA854C6
	for <lists+alsa-devel@lfdr.de>; Wed,  7 Aug 2019 22:53:09 +0200 (CEST)
Received: from alsa1.perex.cz (alsa1.perex.cz [207.180.221.201])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by alsa0.perex.cz (Postfix) with ESMTPS id 363B384F;
	Wed,  7 Aug 2019 22:52:19 +0200 (CEST)
DKIM-Filter: OpenDKIM Filter v2.11.0 alsa0.perex.cz 363B384F
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=alsa-project.org;
	s=default; t=1565211189;
	bh=KT6DjvRqLLYpLgrtWSk8feOS2aaHNsABzmvg9z//vh0=;
	h=To:References:From:Date:In-Reply-To:Cc:Subject:List-Id:
	 List-Unsubscribe:List-Archive:List-Post:List-Help:List-Subscribe:
	 From;
	b=EHIlO/6zBEKM66kXLvWwBU2rRoQ8YBmoc9ZPuHlhLwloe2m/W+OCtPe84SQdhrVq9
	 evoL8Wcl34AV/eZw3TyiQRIasJOgfyE1U8juz5OrhUIN+XNdW3UlLZrQC2OI7FWDyT
	 xyhr1fL/szKs6SNql5hzIyrK3vn3q7+n4gkl/Kns=
Received: from alsa1.perex.cz (localhost.localdomain [127.0.0.1])
	by alsa1.perex.cz (Postfix) with ESMTP id 63748F80290;
	Wed,  7 Aug 2019 22:51:25 +0200 (CEST)
X-Original-To: alsa-devel@alsa-project.org
Delivered-To: alsa-devel@alsa-project.org
Received: by alsa1.perex.cz (Postfix, from userid 50401)
 id 3FAD0F80290; Wed,  7 Aug 2019 22:51:23 +0200 (CEST)
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on alsa1.perex.cz
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=SPF_HELO_NONE,SPF_PASS,
 URIBL_BLOCKED autolearn=disabled version=3.4.0
Received: from mga11.intel.com (mga11.intel.com [192.55.52.93])
 (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
 (No client certificate requested)
 by alsa1.perex.cz (Postfix) with ESMTPS id 6E964F800F4
 for <alsa-devel@alsa-project.org>; Wed,  7 Aug 2019 22:51:18 +0200 (CEST)
DKIM-Filter: OpenDKIM Filter v2.11.0 alsa1.perex.cz 6E964F800F4
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga006.jf.intel.com ([10.7.209.51])
 by fmsmga102.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 07 Aug 2019 13:51:15 -0700
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.64,358,1559545200"; d="scan'208";a="179622880"
Received: from crojewsk-mobl1.ger.corp.intel.com (HELO [10.252.6.17])
 ([10.252.6.17])
 by orsmga006.jf.intel.com with ESMTP; 07 Aug 2019 13:51:13 -0700
To: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
References: <20190807134745.1648-1-cezary.rojewski@intel.com>
 <4b0e1051-946b-ea7c-1e09-93e0825e5ac8@linux.intel.com>
From: Cezary Rojewski <cezary.rojewski@intel.com>
Message-ID: <b03e179d-23f8-ae3e-fcd2-996433e44894@intel.com>
Date: Wed, 7 Aug 2019 22:51:12 +0200
User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64; rv:60.0) Gecko/20100101
 Thunderbird/60.8.0
MIME-Version: 1.0
In-Reply-To: <4b0e1051-946b-ea7c-1e09-93e0825e5ac8@linux.intel.com>
Content-Language: en-US
Cc: alsa-devel@alsa-project.org, broonie@kernel.org, lgirdwood@gmail.com,
 tiwai@suse.com
Subject: Re: [alsa-devel] [RESEND PATCH v3] ASoC: Intel: Skylake:
 large_config_get overhaul
X-BeenThere: alsa-devel@alsa-project.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: "Alsa-devel mailing list for ALSA developers -
 http://www.alsa-project.org" <alsa-devel.alsa-project.org>
List-Unsubscribe: <https://mailman.alsa-project.org/mailman/options/alsa-devel>, 
 <mailto:alsa-devel-request@alsa-project.org?subject=unsubscribe>
List-Archive: <http://mailman.alsa-project.org/pipermail/alsa-devel/>
List-Post: <mailto:alsa-devel@alsa-project.org>
List-Help: <mailto:alsa-devel-request@alsa-project.org?subject=help>
List-Subscribe: <https://mailman.alsa-project.org/mailman/listinfo/alsa-devel>, 
 <mailto:alsa-devel-request@alsa-project.org?subject=subscribe>
Content-Transfer-Encoding: base64
Content-Type: text/plain; charset="utf-8"; Format="flowed"
Errors-To: alsa-devel-bounces@alsa-project.org
Sender: "Alsa-devel" <alsa-devel-bounces@alsa-project.org>

T24gMjAxOS0wOC0wNyAyMjowMCwgUGllcnJlLUxvdWlzIEJvc3NhcnQgd3JvdGU6Cj4gSSBmaW5k
IHRoaXMgcGF0Y2ggcXVpdGUgY29udm9sdXRlZCwgc28gSSBvcmRlcmVkIG15IGNvbW1lbnRzIHRv
IG1ha2UgCj4gdGhlbSBsaW5lYXIuCgpTdXJlIHRoaW5nLCB0aGFua3MgZm9yIGZlZWRiYWNrIQoK
Pj4gTEFSR0VfQ09ORklHX0dFVCBpcyBhbW9uZyB0aGUgbW9zdCBjcnVjaWFsIElQQ3MuIEhvc3Qg
aXMgZXhwZWN0ZWQgdG8KPj4gc2VuZCBzaW5nbGUgcmVxdWVzdCBmaXJzdCB0byBvYnRhaW4gdG90
YWwgcGF5bG9hZCBzaXplIGZyb20gcmVjZWl2ZWQKPj4gaGVhZGVyJ3MgZGF0YV9vZmZfc2l6ZS4g
RnJvbSB0aGVuIG9uLCBpdCBsb29wcyBmb3IgZWFjaCBmcmFtZSBleGNlZWRpbmcKPj4gaW5ib3gg
c2l6ZSB1bnRpbCBlbnRpcmUgcGF5bG9hZCBpcyByZWFkLiBJZiBlbnRpcmUgcGF5bG9hZCBpcyBj
b250YWluZWQKPj4gd2l0aGluIHRoZSB2ZXJ5IGZpcnN0IGZyYW1lLCBubyBsb29waW5nIGlzIHBl
cmZvcm1lZC4KPiAKPiBzbyB0aGVyZSdzIGdvdCB0byBiZSBhIHRlc3QgdGhhdCBkZWZpbmVzIGlm
IGxvb3BpbmcgaXMgcmVxdWlyZWQgb3Igbm90IAo+IGJ1dCBzZWUgWzFdIGJlbG93Lgo+IAoKUHJl
Y2lzZWx5ISBUaGF0IGlzIGFsc28gd2h5IHJlcGx5IGhhbmRsaW5nIHdhcyBuZWVkZWQgKGFscmVh
ZHkgYXBwbGllZCAKYnkgTWFyaykuIFdpdGhvdXQgImRhdGFfb2ZmX3NpemUiIGZpZWxkIHJldHJp
ZXZlZCBmcm9tIHJlcGx5J3MgaGVhZGVyIAooZXh0ZW5zaW9uKSwgeW91J3JlIGluIHRoZSBkYXJr
IHdoZW4gaXQgY29tZXMgdG8gcGF5bG9hZCBzaXplLgoKPj4KPj4gTEFSR0VfQ09ORklHX0dFVCBp
cyBhIGZsZXhpYmxlIElQQywgaXQgbm90IG9ubHkgcmVjZWl2ZXMgcGF5bG9hZCBidXQgbWF5Cj4+
IGNhcnJ5IG9uZSB3aXRoIHRoZW0gdG8gcHJvdmlkZSBsaXN0IG9mIHBhcmFtcyBEU1AgbW9kdWxl
IHNob3VsZCByZXR1cm4KPj4gaW5mbyBmb3IuIFRoaXMgYmVoYXZpb3IgaXMgdXN1YWxseSByZXNl
cnZlZCBmb3IgdmVuZG9ycyBhbmQgSVBDIGhhbmRsZXIKPj4gc2hvdWxkIG5vdCB0b3VjaCB0aGF0
IGNvbnRlbnQuIFRvIGFjaGlldmUgdGhhdCwgc2ltcGx5IHBhc3MgcHJvdmlkZWQKPj4gcGF5bG9h
ZCBhbmQgYnl0ZXMgdG8gc3N0X2lwY190eF9tZXNzYWdlX3dhaXQgYXMgYSBwYXJ0IG9mIHJlcXVl
c3QuCj4gCj4gWzJdIEFuZCB0aGlzIGhhcyBub3RoaW5nIHRvIGRvIHdpdGggdGhlIGxvb3BzLMKg
IGRvZXMgaXQ/CgpJZiBJJ20gdG8gZGl2ZSBpbnRvIGRldGFpbHMgc28gYmUgaXQuIF9nZXRfIG9w
ZXJhdGVzIGluIDMgbW9kZXM6CgoxKSBzaW5nbGUgcmVxdWVzdCA6IHNpbmdsZSByZXBseSAocmVx
dWVzdHMgZml0cyBpbnRvIHNpbmdsZSBmcmFtZSkKCTEgY29uZmlnIHBhcmFtIHRvIHJldHJpZXZl
CglmdyBzdGF0dXMvIGZ3IGVycm9yIGNvZGUgd2lsbCBwb2ludCBkaXJlY3RseSB3aGF0J3MgZ29p
bmcgb24KCShhZnRlciBhbGwgdGhlcmUgaXMganVzdCBvbmUgcGFyYW0gaGVyZS4uKQoJcGFyYW1f
aWQgPCAweEZGCglkYXRhX29mZl9zaXplIGhhcyBzaW5nbGUgbWVhbmluZyBoZXJlOiBwYXlsb2Fk
IHNpemUKCjIpIGxhcmdlIHJlcXVlc3QsIHNwYW5uaW5nIG92ZXIgc2V2ZXJhbCBmcmFtZXMgOiBh
cyBtYW55IHJlcGxpZXMgYXMgCnJlcXVpcmVkIChkc3AgcmVwbHkuaGVhZGVyLmV4dGVuc2lvbi5m
aW5hbF9ibG9jayA9PSAxKQoJMSBjb25maWcgcGFyYW0gdG8gcmV0cmlldmUKCWZ3IHN0YXR1cy8g
ZncgZXJyb3IgY29kZSB3aWxsIHBvaW50IGRpcmVjdGx5IHdoYXQncyBnb2luZyBvbgoJKGFmdGVy
IGFsbCB0aGVyZSBpcyBqdXN0IG9uZSBwYXJhbSBoZXJlLi4pCglwYXJhbV9pZCA8IDB4RkYKCWRh
dGFfb2ZmX3NpemUgc3dpdGNoZXMgY29udGV4dCBoZXJlOiAKcmVwbHkuaGVhZGVyLmV4dGVuc2lv
bi5kYXRhX29mZl9zaXplIGZvciB0aGUgdmVyeSBmaXJzdCByZXBseSBjYXJyaWVzIApUT1RBTCBw
YXlsb2FkIHNpemUuIEZyb20gdGhlbiBvbiwgaXQgbWFya3MgYnVmZmVyIG9mZnNldCBzaXplIC0g
aG9zdCAKbWFrZXMgdXNlIG9mIHRoaXMgb2Zmc2V0IGFuZCBpbmplY3RzIGRhdGEgaW50byByaWdo
dCBwb3Mgd2l0aGluIGhpcyBvd24gCmJ1ZmZlci4KCjMpIHZlbmRvciByZXF1ZXN0IDogc2luZ2xl
IHJlcGx5IChyZXF1ZXN0IE1VU1QgZml0IGludG8gc2luZ2xlIGZyYW1lKQoJWCBjb25maWcgcGFy
YW1zIHRvIHJldHJpZXZlLCBlYWNoIHJlcHJlc2VudGVkIGJ5IFRMVgoJZncgc3RhdHVzLyBmdyBl
cnJvciBjb2RlIHByb3ZpZGVzIGdlbmVyaWMgb3V0Y29tZSBvbmx5Cgkob24gZmFpbHVyZSBlcnJv
ci1wYXlsb2FkIGlzIHJldHVybmVkLiBDYW4gYmUgcGFyc2VkIHRvIGdldCBpZHggb2YgVExWLCAK
ZnJvbSBzcGVjaWZpZWQgVExWIGFycmF5LCB3aGljaCBjYXVzZWQgdGhlIGZhaWx1cmUgdG8gb2Nj
dXIpCglwYXJhbV9pZCA9PSAweEZGCglkYXRhX29mZl9zaXplIGhhcyBzaW5nbGUgbWVhbmluZyBo
ZXJlOiBwYXlsb2FkIHNpemUKCkVycm9yLXBheWxvYWQgaXMgYnkgbm8gbWVhbnMgcmVzdHJpY3Rl
ZCB0byAzcmQgY2FzZS1vbmx5LCBpdCdzIGp1c3QgCm9wdGlvbmFsIGFuZCBtYXkgbm90IGJlIHBy
b3ZpZGVkIGJ5IERTUCBkZXBlbmRpbmcgb24gcGFydGljdWxhciByZXF1ZXN0LgoKPiAKPj4gSW4g
Y3VycmVudCBzdGF0ZSwgTEFSR0VfQ09ORklHX0dFVCBtZXNzYWdlIGhhbmRsZXIgZG9lcyBub3Ro
aW5nIG9mIHRoYXQsCj4+IGluIGNvbnNlcXVlbmNlIG1ha2luZyBpdCBkeXNmdW5jdGlvbmFsLiBP
dmVyaGF1bCBzYWlkIGhhbmRsZXIgYWxsb3dpbmcKPj4gcmlnaHRmdWwga2luZyBvZiBJUENzIHRv
IHJldHVybiBiYWNrIG9uIGhpcyB0aHJvbmUgLSBraW5nZG9tIGhlIHNoYXJlcwo+PiB3aXRoIGhp
cyB0d2luIGJyb3RoZXI6IExBUkdFX0NPTkZJR19TRVQuCj4gCj4gWzNdIHdoYXQgaXMgZHlzZnVu
Y3Rpb25hbD8gdGhlIHVubmVjZXNzYXJ5IGxvb3BzIG9yIGhhbmRsaW5nIGRhdGEgaW4gdGhlIAo+
IElQQyB0aGF0IHNob3VsZCBvbmx5IGJlIGhhbmRsZWQgaW4gdmVuZG9yLXNwZWNpZmljIHBhcnRz
LiBBbmQgYnR3IEkgCj4gZG9uJ3Qgc2VlIHZlbmRvci1zcGVjaWZpYyBwYXJ0cyBpbiB0aGUgU2t5
bGFrZSBkcml2ZXIsIHNvIG5vdCBzdXJlIGhvdyAKPiB0aG9zZSB2ZW5kb3Itc3BlY2lmaWMgdGhp
bmdpZXMgYXJlIGhhbmRsZWQgYXQgYWxsLgoKYSkgcGF5bG9hZCBzaXplIGlzIHNraXBwZWQsIHRo
aXMgbWV0aG9kIHJ1bnMgaW4gdGhlIGRhcmsKYikgcHJvdmlkZXMgbm8gdmVuZG9yLXJlcXVlc3Qg
ZnVuY3Rpb25hbGl0eQpjKSBlcnJvci1wYXlsb2FkIGlzIG5ldmVyIHJldHVybmVkCmQpIHdvbmt5
IHRvZ2dsaW5nIG9mIGluaXRfYmxvY2suIEhvc3QgbmV2ZXIgdG91Y2hlcyBpbml0X2Jsb2NrIGZp
ZWxkIApvbmNlIGluaXRpYWwgbWVzc2FnZSBoYXMgYmVlbiBjYXJyaWVkIG91dCAtIGEgYm9vayBv
bmx5IGV2ZXIgaGFzIGEgCnNpbmdsZSBwcm9sb2d1ZSwgYWluJ3QgaXQ/Cgo+IAo+PiBUaGUgbG9v
cGluZyBoYXMgbm90IGJlZW4gYWRkZWQgaW4gdGhpcyB1cGRhdGUgYXMgcGF5bG9hZHMgb2Ygc3Vj
aCBzaXplCj4+IGRvIG5vdCBleGlzdCBpbiBwcmFjdGljZS4gV2lsbCBuZWVkIHRvIGNyZWF0ZSBj
dXN0b20gbW9kdWxlIHNwZWNpZmljYWxseQo+PiBmb3IgdGhhdCB2ZXJ5IGNhc2UgYW5kIHRlc3Qg
YWdhaW5zdCBpdCBiZWZvcmUgdGhhdCBmZWF0dXJlIGNhbiBiZSBhZGRlZC4KPiAKPiBbMV0gaGVy
ZSB5b3UgYXJlIGp1c3Qgc2F5aW5nIHRoYXQgdGhlIGxvb3BpbmcgaXMgcmVhbGx5IG5vdCByZXF1
aXJlZCBzbyAKPiB0aGVyZSBhcmUgbm8gdGVzdHMgYXQgYWxsLi4uCj4gCj4gWzRdIFNvIHNob3Vs
ZG4ndCB5b3Ugc3BsaXQgdGhlIHR3byBwYXJ0cyBvZiB0aGlzIHBhdGNoIGFuZCBzZXBhcmF0ZSAK
PiBsb29waW5nIGZyb20gbm90IHRvdWNoaW5nIHRoZSBkYXRhIHRoYXQncyB2ZW5kb3Itc3BlY2lm
aWM/CgpTbywgbG9vcGluZyBtYWlubHkgZ2V0cyB1c2VkIGluIF9zZXRzXywgZm9yIF9nZXRzXyBJ
J3ZlIG5vdCBzZWVuIGEgbGl2ZSAKZXhhbXBsZSwgcmVhbGx5IC0gZGVzcGl0ZSBGVyBzdXBwb3J0
aW5nIHN1Y2ggZmxvdy4gSG93ZXZlciwgSSdkIGxpa2UgdG8gCnZlcmlmeSBiZWZvcmUgYWRkaW5n
IGFueSBsb29waW5nLCBwb3NzaWJseSBieSBjcmVhdGluZyBhIGN1c3RvbSBtb2R1bGUgCm15c2Vs
Zi4gRm9sbG93dXAgdG8geW91ciBwb2ludDogZXhpc3RpbmcgbG9vcGluZyB3YXMgbm90IHRlc3Rl
ZCBlaXRoZXIuCgpUaGVyZSBpcyBvbmx5IG9uZSBfZ2V0XyBJIGNhbiB0aGluayBvZiB3aGljaCBt
aWdodCByZXBsYWNlIGN1c3RvbSBtb2R1bGUgCmFwcHJvYWNoLi4gdGhlIE1PRFVMRVNfSU5GTyBv
bmUuIFlvdSBqdXN0IG5lZWQgYSBGVyBiaW5hcnkgd2l0aCBidW5jaCBvZiAKZmVhdHVyZXMgaW5j
bHVkZWQgOiApIEknbGwgdHJ5IG91dCBUR0wgb25lLgoKVGhhdCdzIHdoeSBJIHByZWZlciBhZGRp
bmcgbWFqb3IgX2dldF8gZml4IGZpcnN0IGFuZCBvbmx5IHRoZW4gYSAKc2VwYXJhdGUgcGF0Y2gg
Zm9yIGxvb3BpbmcgLSBvbmNlIHRlc3RlZC4KCj4gCj4+Cj4+IFNpZ25lZC1vZmYtYnk6IENlemFy
eSBSb2pld3NraSA8Y2V6YXJ5LnJvamV3c2tpQGludGVsLmNvbT4KPj4gLS0tCj4+IMKgIHNvdW5k
L3NvYy9pbnRlbC9za3lsYWtlL3NrbC1tZXNzYWdlcy5jIHzCoCAzICstCj4+IMKgIHNvdW5kL3Nv
Yy9pbnRlbC9za3lsYWtlL3NrbC1zc3QtaXBjLmPCoCB8IDU0ICsrKysrKysrKysrLS0tLS0tLS0t
LS0tLS0tCj4+IMKgIHNvdW5kL3NvYy9pbnRlbC9za3lsYWtlL3NrbC1zc3QtaXBjLmjCoCB8wqAg
MyArLQo+PiDCoCAzIGZpbGVzIGNoYW5nZWQsIDI3IGluc2VydGlvbnMoKyksIDMzIGRlbGV0aW9u
cygtKQo+Pgo+PiBkaWZmIC0tZ2l0IGEvc291bmQvc29jL2ludGVsL3NreWxha2Uvc2tsLW1lc3Nh
Z2VzLmMgCj4+IGIvc291bmQvc29jL2ludGVsL3NreWxha2Uvc2tsLW1lc3NhZ2VzLmMKPj4gaW5k
ZXggZThjYzcxMGYwOTJiLi44NGYwZTZmNThlYjUgMTAwNjQ0Cj4+IC0tLSBhL3NvdW5kL3NvYy9p
bnRlbC9za3lsYWtlL3NrbC1tZXNzYWdlcy5jCj4+ICsrKyBiL3NvdW5kL3NvYy9pbnRlbC9za3ls
YWtlL3NrbC1tZXNzYWdlcy5jCj4+IEBAIC0xMzc5LDExICsxMzc5LDEyIEBAIGludCBza2xfZ2V0
X21vZHVsZV9wYXJhbXMoc3RydWN0IHNrbF9kZXYgKnNrbCwgCj4+IHUzMiAqcGFyYW1zLCBpbnQg
c2l6ZSwKPj4gwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIHUzMiBwYXJhbV9pZCwgc3Ry
dWN0IHNrbF9tb2R1bGVfY2ZnICptY2ZnKQo+PiDCoCB7Cj4+IMKgwqDCoMKgwqAgc3RydWN0IHNr
bF9pcGNfbGFyZ2VfY29uZmlnX21zZyBtc2c7Cj4+ICvCoMKgwqAgc2l6ZV90IGJ5dGVzID0gc2l6
ZTsKPj4gwqDCoMKgwqDCoCBtc2cubW9kdWxlX2lkID0gbWNmZy0+aWQubW9kdWxlX2lkOwo+PiDC
oMKgwqDCoMKgIG1zZy5pbnN0YW5jZV9pZCA9IG1jZmctPmlkLnB2dF9pZDsKPj4gwqDCoMKgwqDC
oCBtc2cucGFyYW1fZGF0YV9zaXplID0gc2l6ZTsKPj4gwqDCoMKgwqDCoCBtc2cubGFyZ2VfcGFy
YW1faWQgPSBwYXJhbV9pZDsKPj4gLcKgwqDCoCByZXR1cm4gc2tsX2lwY19nZXRfbGFyZ2VfY29u
ZmlnKCZza2wtPmlwYywgJm1zZywgcGFyYW1zKTsKPj4gK8KgwqDCoCByZXR1cm4gc2tsX2lwY19n
ZXRfbGFyZ2VfY29uZmlnKCZza2wtPmlwYywgJm1zZywgJnBhcmFtcywgJmJ5dGVzKTsKPj4gwqAg
fQo+PiBkaWZmIC0tZ2l0IGEvc291bmQvc29jL2ludGVsL3NreWxha2Uvc2tsLXNzdC1pcGMuYyAK
Pj4gYi9zb3VuZC9zb2MvaW50ZWwvc2t5bGFrZS9za2wtc3N0LWlwYy5jCj4+IGluZGV4IGEyYjY5
YTAyYWFiMi4uOWQyNjlhNWY4YmQ5IDEwMDY0NAo+PiAtLS0gYS9zb3VuZC9zb2MvaW50ZWwvc2t5
bGFrZS9za2wtc3N0LWlwYy5jCj4+ICsrKyBiL3NvdW5kL3NvYy9pbnRlbC9za3lsYWtlL3NrbC1z
c3QtaXBjLmMKPj4gQEAgLTk2OSwxMiArOTY5LDE3IEBAIGludCBza2xfaXBjX3NldF9sYXJnZV9j
b25maWcoc3RydWN0IAo+PiBzc3RfZ2VuZXJpY19pcGMgKmlwYywKPj4gwqAgRVhQT1JUX1NZTUJP
TF9HUEwoc2tsX2lwY19zZXRfbGFyZ2VfY29uZmlnKTsKPj4gwqAgaW50IHNrbF9pcGNfZ2V0X2xh
cmdlX2NvbmZpZyhzdHJ1Y3Qgc3N0X2dlbmVyaWNfaXBjICppcGMsCj4+IC3CoMKgwqDCoMKgwqDC
oCBzdHJ1Y3Qgc2tsX2lwY19sYXJnZV9jb25maWdfbXNnICptc2csIHUzMiAqcGFyYW0pCj4+ICvC
oMKgwqDCoMKgwqDCoCBzdHJ1Y3Qgc2tsX2lwY19sYXJnZV9jb25maWdfbXNnICptc2csCj4+ICvC
oMKgwqDCoMKgwqDCoCB1bnNpZ25lZCBpbnQgKipwYXlsb2FkLCBzaXplX3QgKmJ5dGVzKQo+PiDC
oCB7Cj4+IMKgwqDCoMKgwqAgc3RydWN0IHNrbF9pcGNfaGVhZGVyIGhlYWRlciA9IHswfTsKPj4g
LcKgwqDCoCBzdHJ1Y3Qgc3N0X2lwY19tZXNzYWdlIHJlcXVlc3QgPSB7MH0sIHJlcGx5ID0gezB9
Owo+PiAtwqDCoMKgIGludCByZXQgPSAwOwo+PiAtwqDCoMKgIHNpemVfdCBzel9yZW1haW5pbmcs
IHJ4X3NpemUsIGRhdGFfb2Zmc2V0Owo+PiArwqDCoMKgIHN0cnVjdCBzc3RfaXBjX21lc3NhZ2Ug
cmVxdWVzdCwgcmVwbHkgPSB7MH07Cj4+ICvCoMKgwqAgdW5zaWduZWQgaW50ICpidWY7Cj4+ICvC
oMKgwqAgaW50IHJldDsKPj4gKwo+PiArwqDCoMKgIHJlcGx5LmRhdGEgPSBremFsbG9jKFNLTF9B
RFNQX1cxX1NaLCBHRlBfS0VSTkVMKTsKPj4gK8KgwqDCoCBpZiAoIXJlcGx5LmRhdGEpCj4+ICvC
oMKgwqDCoMKgwqDCoCByZXR1cm4gLUVOT01FTTsKPj4gwqDCoMKgwqDCoCBoZWFkZXIucHJpbWFy
eSA9IElQQ19NU0dfVEFSR0VUKElQQ19NT0RfTVNHKTsKPj4gwqDCoMKgwqDCoCBoZWFkZXIucHJp
bWFyeSB8PSBJUENfTVNHX0RJUihJUENfTVNHX1JFUVVFU1QpOwo+PiBAQCAtOTg3LDM0ICs5OTIs
MjEgQEAgaW50IHNrbF9pcGNfZ2V0X2xhcmdlX2NvbmZpZyhzdHJ1Y3QgCj4+IHNzdF9nZW5lcmlj
X2lwYyAqaXBjLAo+PiDCoMKgwqDCoMKgIGhlYWRlci5leHRlbnNpb24gfD0gSVBDX0ZJTkFMX0JM
T0NLKDEpOwo+PiDCoMKgwqDCoMKgIGhlYWRlci5leHRlbnNpb24gfD0gSVBDX0lOSVRJQUxfQkxP
Q0soMSk7Cj4+IC3CoMKgwqAgc3pfcmVtYWluaW5nID0gbXNnLT5wYXJhbV9kYXRhX3NpemU7Cj4+
IC3CoMKgwqAgZGF0YV9vZmZzZXQgPSAwOwo+PiAtCj4+IC3CoMKgwqAgd2hpbGUgKHN6X3JlbWFp
bmluZyAhPSAwKSB7Cj4+IC3CoMKgwqDCoMKgwqDCoCByeF9zaXplID0gc3pfcmVtYWluaW5nID4g
U0tMX0FEU1BfVzFfU1oKPj4gLcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA/IFNLTF9B
RFNQX1cxX1NaIDogc3pfcmVtYWluaW5nOwo+PiAtwqDCoMKgwqDCoMKgwqAgaWYgKHJ4X3NpemUg
PT0gc3pfcmVtYWluaW5nKQo+PiAtwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCBoZWFkZXIuZXh0ZW5z
aW9uIHw9IElQQ19GSU5BTF9CTE9DSygxKTsKPj4gLQo+PiAtwqDCoMKgwqDCoMKgwqAgcmVxdWVz
dC5oZWFkZXIgPSAqKHU2NCAqKSgmaGVhZGVyKTsKPj4gLcKgwqDCoMKgwqDCoMKgIHJlcGx5LmRh
dGEgPSAoKGNoYXIgKilwYXJhbSkgKyBkYXRhX29mZnNldDsKPj4gLcKgwqDCoMKgwqDCoMKgIHJl
cGx5LnNpemUgPSBtc2ctPnBhcmFtX2RhdGFfc2l6ZTsKPj4gLcKgwqDCoMKgwqDCoMKgIHJldCA9
IHNzdF9pcGNfdHhfbWVzc2FnZV93YWl0KGlwYywgcmVxdWVzdCwgJnJlcGx5KTsKPj4gLcKgwqDC
oMKgwqDCoMKgIGlmIChyZXQgPCAwKSB7Cj4+IC3CoMKgwqDCoMKgwqDCoMKgwqDCoMKgIGRldl9l
cnIoaXBjLT5kZXYsCj4+IC3CoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgImlwYzogZ2V0
IGxhcmdlIGNvbmZpZyBmYWlsLCBlcnI6ICVkXG4iLCByZXQpOwo+PiAtwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoCByZXR1cm4gcmV0Owo+PiAtwqDCoMKgwqDCoMKgwqAgfQo+PiAtwqDCoMKgwqDCoMKg
wqAgc3pfcmVtYWluaW5nIC09IHJ4X3NpemU7Cj4+IC3CoMKgwqDCoMKgwqDCoCBkYXRhX29mZnNl
dCA9IG1zZy0+cGFyYW1fZGF0YV9zaXplIC0gc3pfcmVtYWluaW5nOwo+PiArwqDCoMKgIHJlcXVl
c3QuaGVhZGVyID0gKih1NjQgKikmaGVhZGVyOwo+PiArwqDCoMKgIHJlcXVlc3QuZGF0YSA9ICpw
YXlsb2FkOwo+PiArwqDCoMKgIHJlcXVlc3Quc2l6ZSA9ICpieXRlczsKPj4gK8KgwqDCoCByZXBs
eS5zaXplID0gU0tMX0FEU1BfVzFfU1o7Cj4+IC3CoMKgwqDCoMKgwqDCoCAvKiBjbGVhciB0aGUg
ZmllbGRzICovCj4+IC3CoMKgwqDCoMKgwqDCoCBoZWFkZXIuZXh0ZW5zaW9uICY9IElQQ19JTklU
SUFMX0JMT0NLX0NMRUFSOwo+PiAtwqDCoMKgwqDCoMKgwqAgaGVhZGVyLmV4dGVuc2lvbiAmPSBJ
UENfREFUQV9PRkZTRVRfU1pfQ0xFQVI7Cj4+IC3CoMKgwqDCoMKgwqDCoCAvKiBmaWxsIHRoZSBm
aWVsZHMgKi8KPj4gLcKgwqDCoMKgwqDCoMKgIGhlYWRlci5leHRlbnNpb24gfD0gSVBDX0lOSVRJ
QUxfQkxPQ0soMSk7Cj4+IC3CoMKgwqDCoMKgwqDCoCBoZWFkZXIuZXh0ZW5zaW9uIHw9IElQQ19E
QVRBX09GRlNFVF9TWihkYXRhX29mZnNldCk7Cj4+IC3CoMKgwqAgfQo+PiArwqDCoMKgIHJldCA9
IHNzdF9pcGNfdHhfbWVzc2FnZV93YWl0KGlwYywgcmVxdWVzdCwgJnJlcGx5KTsKPj4gK8KgwqDC
oCBpZiAocmV0IDwgMCkKPj4gK8KgwqDCoMKgwqDCoMKgIGRldl9lcnIoaXBjLT5kZXYsICJpcGM6
IGdldCBsYXJnZSBjb25maWcgZmFpbDogJWRcbiIsIHJldCk7Cj4+ICsKPj4gK8KgwqDCoCByZXBs
eS5zaXplID0gKHJlcGx5LmhlYWRlciA+PiAzMikgJiBJUENfREFUQV9PRkZTRVRfU1pfTUFTSzsK
Pj4gK8KgwqDCoCBidWYgPSBrcmVhbGxvYyhyZXBseS5kYXRhLCByZXBseS5zaXplLCBHRlBfS0VS
TkVMKTsKPj4gK8KgwqDCoCBpZiAoIWJ1ZikKPj4gK8KgwqDCoMKgwqDCoMKgIHJldHVybiAtRU5P
TUVNOwo+PiArwqDCoMKgICpwYXlsb2FkID0gYnVmOwo+PiArwqDCoMKgICpieXRlcyA9IHJlcGx5
LnNpemU7Cj4+IMKgwqDCoMKgwqAgcmV0dXJuIHJldDsKPj4gwqAgfQo+PiBkaWZmIC0tZ2l0IGEv
c291bmQvc29jL2ludGVsL3NreWxha2Uvc2tsLXNzdC1pcGMuaCAKPj4gYi9zb3VuZC9zb2MvaW50
ZWwvc2t5bGFrZS9za2wtc3N0LWlwYy5oCj4+IGluZGV4IDkzYWYwOGNmNDFkMi4uYTdhYjJjNTg5
Y2M1IDEwMDY0NAo+PiAtLS0gYS9zb3VuZC9zb2MvaW50ZWwvc2t5bGFrZS9za2wtc3N0LWlwYy5o
Cj4+ICsrKyBiL3NvdW5kL3NvYy9pbnRlbC9za3lsYWtlL3NrbC1zc3QtaXBjLmgKPj4gQEAgLTEz
OSw3ICsxMzksOCBAQCBpbnQgc2tsX2lwY19zZXRfbGFyZ2VfY29uZmlnKHN0cnVjdCAKPj4gc3N0
X2dlbmVyaWNfaXBjICppcGMsCj4+IMKgwqDCoMKgwqDCoMKgwqDCoCBzdHJ1Y3Qgc2tsX2lwY19s
YXJnZV9jb25maWdfbXNnICptc2csIHUzMiAqcGFyYW0pOwo+PiDCoCBpbnQgc2tsX2lwY19nZXRf
bGFyZ2VfY29uZmlnKHN0cnVjdCBzc3RfZ2VuZXJpY19pcGMgKmlwYywKPj4gLcKgwqDCoMKgwqDC
oMKgIHN0cnVjdCBza2xfaXBjX2xhcmdlX2NvbmZpZ19tc2cgKm1zZywgdTMyICpwYXJhbSk7Cj4+
ICvCoMKgwqDCoMKgwqDCoCBzdHJ1Y3Qgc2tsX2lwY19sYXJnZV9jb25maWdfbXNnICptc2csCj4+
ICvCoMKgwqDCoMKgwqDCoCB1bnNpZ25lZCBpbnQgKipwYXlsb2FkLCBzaXplX3QgKmJ5dGVzKTsK
Pj4gwqAgaW50IHNrbF9zc3RfaXBjX2xvYWRfbGlicmFyeShzdHJ1Y3Qgc3N0X2dlbmVyaWNfaXBj
ICppcGMsCj4+IMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIHU4IGRtYV9pZCwgdTggdGFibGVf
aWQsIGJvb2wgd2FpdCk7Cj4+Cl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fCkFsc2EtZGV2ZWwgbWFpbGluZyBsaXN0CkFsc2EtZGV2ZWxAYWxzYS1wcm9qZWN0
Lm9yZwpodHRwczovL21haWxtYW4uYWxzYS1wcm9qZWN0Lm9yZy9tYWlsbWFuL2xpc3RpbmZvL2Fs
c2EtZGV2ZWwK
