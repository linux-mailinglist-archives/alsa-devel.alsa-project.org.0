Return-Path: <alsa-devel-bounces@alsa-project.org>
X-Original-To: lists+alsa-devel@lfdr.de
Delivered-To: lists+alsa-devel@lfdr.de
Received: from alsa0.perex.cz (alsa0.perex.cz [77.48.224.243])
	by mail.lfdr.de (Postfix) with ESMTPS id 5D27D57E273
	for <lists+alsa-devel@lfdr.de>; Fri, 22 Jul 2022 15:42:13 +0200 (CEST)
Received: from alsa1.perex.cz (alsa1.perex.cz [207.180.221.201])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by alsa0.perex.cz (Postfix) with ESMTPS id 0D9C218BF;
	Fri, 22 Jul 2022 15:41:23 +0200 (CEST)
DKIM-Filter: OpenDKIM Filter v2.11.0 alsa0.perex.cz 0D9C218BF
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=alsa-project.org;
	s=default; t=1658497333;
	bh=FDsPJL9PrKC4jM6kPIaOvUGImerCFUDqpWWoDr6aoiU=;
	h=Date:From:To:Subject:In-Reply-To:References:Cc:List-Id:
	 List-Unsubscribe:List-Archive:List-Post:List-Help:List-Subscribe:
	 From;
	b=UT58kqeKLGSRpGtnNx01A7EH98qjukrizkwKplu4Tip9rIxogrfwHyUFpnZOCJ6tE
	 vW9wgmKjdh2uUMLztsxcVlnfiQ+2/ePOIq0juFicmWn6K6tJm+NrCutv1Z13yUubJs
	 M3wy58r2Rq+x+ELIHhpMKmxAiyEN0lMADWgFmBt0=
Received: from alsa1.perex.cz (localhost.localdomain [127.0.0.1])
	by alsa1.perex.cz (Postfix) with ESMTP id 6332CF80279;
	Fri, 22 Jul 2022 15:41:12 +0200 (CEST)
X-Original-To: alsa-devel@alsa-project.org
Delivered-To: alsa-devel@alsa-project.org
Received: by alsa1.perex.cz (Postfix, from userid 50401)
 id A8E74F80246; Fri, 22 Jul 2022 15:41:10 +0200 (CEST)
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on alsa1.perex.cz
X-Spam-Level: 
X-Spam-Status: No, score=-0.1 required=5.0 tests=DKIM_SIGNED,DKIM_VALID,
 DKIM_VALID_AU,SPF_HELO_NONE,SPF_NONE,T_SCC_BODY_TEXT_LINE,URIBL_BLOCKED
 autolearn=disabled version=3.4.0
Received: from smtp-out2.suse.de (smtp-out2.suse.de [IPv6:2001:67c:2178:6::1d])
 (using TLSv1.2 with cipher ECDHE-RSA-AES128-GCM-SHA256 (128/128 bits))
 (No client certificate requested)
 by alsa1.perex.cz (Postfix) with ESMTPS id 883BDF8012A
 for <alsa-devel@alsa-project.org>; Fri, 22 Jul 2022 15:41:04 +0200 (CEST)
DKIM-Filter: OpenDKIM Filter v2.11.0 alsa1.perex.cz 883BDF8012A
Authentication-Results: alsa1.perex.cz;
 dkim=pass (1024-bit key) header.d=suse.de header.i=@suse.de
 header.b="gabumqZv"; 
 dkim=permerror (0-bit key) header.d=suse.de header.i=@suse.de
 header.b="PHa4wrnv"
Received: from imap2.suse-dmz.suse.de (imap2.suse-dmz.suse.de [192.168.254.74])
 (using TLSv1.3 with cipher TLS_AES_256_GCM_SHA384 (256/256 bits)
 key-exchange X25519 server-signature ECDSA (P-521) server-digest SHA512)
 (No client certificate requested)
 by smtp-out2.suse.de (Postfix) with ESMTPS id 88AA02054D;
 Fri, 22 Jul 2022 13:41:03 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=suse.de; s=susede2_rsa;
 t=1658497263; h=from:from:reply-to:date:date:message-id:message-id:to:to:cc:cc:
 mime-version:mime-version:content-type:content-type:
 in-reply-to:in-reply-to:references:references;
 bh=uuyaztEJO/U+txt+TpKrVT4oWz325yRVlHDru4X0shc=;
 b=gabumqZvClIYLtonZ7QRkkmiqS3ZyUOvIjMahdFtEBcZ1LvPkdSYQEQgzcIkJbKcSipAlv
 FE5CEiVnBp6eX0ZxrWMweKEBmiew4iWsbbz59qjkbMmGcGsLA+ZpOc/ZY5W8CHpoIydvsA
 LeYf3a8f7jCUnJM5sudY3ZMYDxQhcaA=
DKIM-Signature: v=1; a=ed25519-sha256; c=relaxed/relaxed; d=suse.de;
 s=susede2_ed25519; t=1658497263;
 h=from:from:reply-to:date:date:message-id:message-id:to:to:cc:cc:
 mime-version:mime-version:content-type:content-type:
 in-reply-to:in-reply-to:references:references;
 bh=uuyaztEJO/U+txt+TpKrVT4oWz325yRVlHDru4X0shc=;
 b=PHa4wrnvV89bET21NF6pheiOgMYTKTEH0+M0xZX29BjhJwUYufjp6ymnqHN/nL8t6ja47U
 qBI4oYPwvWAqdCBA==
Received: from imap2.suse-dmz.suse.de (imap2.suse-dmz.suse.de [192.168.254.74])
 (using TLSv1.3 with cipher TLS_AES_256_GCM_SHA384 (256/256 bits)
 key-exchange X25519 server-signature ECDSA (P-521) server-digest SHA512)
 (No client certificate requested)
 by imap2.suse-dmz.suse.de (Postfix) with ESMTPS id 45774134A9;
 Fri, 22 Jul 2022 13:41:03 +0000 (UTC)
Received: from dovecot-director2.suse.de ([192.168.254.65])
 by imap2.suse-dmz.suse.de with ESMTPSA id gTw+EO+o2mKVWQAAMHmgww
 (envelope-from <tiwai@suse.de>); Fri, 22 Jul 2022 13:41:03 +0000
Date: Fri, 22 Jul 2022 15:41:02 +0200
Message-ID: <87h739464x.wl-tiwai@suse.de>
From: Takashi Iwai <tiwai@suse.de>
To: Venkata Prasad Potturu <venkataprasad.potturu@amd.com>
Subject: Re: [PATCH v2] ASoC: amd: acp: Initialize list to store acp_stream
 during pcm_open
In-Reply-To: <20220722133530.3314087-1-venkataprasad.potturu@amd.com>
References: <20220722133530.3314087-1-venkataprasad.potturu@amd.com>
User-Agent: Wanderlust/2.15.9 (Almost Unreal) Emacs/27.2 Mule/6.0
MIME-Version: 1.0 (generated by SEMI-EPG 1.14.7 - "Harue")
Content-Type: text/plain; charset=US-ASCII
Cc: alsa-devel@alsa-project.org, Sunil-kumar.Dommati@amd.com,
 Charles Keepax <ckeepax@opensource.cirrus.com>, ssabakar@amd.com,
 Ajit Kumar Pandey <AjitKumar.Pandey@amd.com>,
 open list <linux-kernel@vger.kernel.org>, Basavaraj.Hiregoudar@amd.com,
 Takashi Iwai <tiwai@suse.com>, Liam Girdwood <lgirdwood@gmail.com>,
 Yang Yingliang <yangyingliang@huawei.com>, broonie@kernel.org,
 Vijendar.Mukunda@amd.com, V sujith kumar Reddy <Vsujithkumar.Reddy@amd.com>
X-BeenThere: alsa-devel@alsa-project.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: "Alsa-devel mailing list for ALSA developers -
 http://www.alsa-project.org" <alsa-devel.alsa-project.org>
List-Unsubscribe: <https://mailman.alsa-project.org/mailman/options/alsa-devel>, 
 <mailto:alsa-devel-request@alsa-project.org?subject=unsubscribe>
List-Archive: <http://mailman.alsa-project.org/pipermail/alsa-devel/>
List-Post: <mailto:alsa-devel@alsa-project.org>
List-Help: <mailto:alsa-devel-request@alsa-project.org?subject=help>
List-Subscribe: <https://mailman.alsa-project.org/mailman/listinfo/alsa-devel>, 
 <mailto:alsa-devel-request@alsa-project.org?subject=subscribe>
Errors-To: alsa-devel-bounces@alsa-project.org
Sender: "Alsa-devel" <alsa-devel-bounces@alsa-project.org>

On Fri, 22 Jul 2022 15:35:22 +0200,
Venkata Prasad Potturu wrote:
> 
> From: Ajit Kumar Pandey <AjitKumar.Pandey@amd.com>
> 
> We are currently allocating acp_stream during pcm_open and saving
> it in static array corresponds to array index calculated based on
> cpu dai->driver id. This approach will fail if we have single dai
> linked to multiple pcm device as we will have same dai->driver id
> or array index for multiple pcm open. Initialize new linked list
> stream_list to store opened pcm stream info dynamically.

If an IRQ handler refers to the linked list, make sure that no list
change will happen concurrently during the IRQ handling.  It seems
that you have no protection for it yet.


thanks,

Takashi

> 
> Signed-off-by: Ajit Kumar Pandey <AjitKumar.Pandey@amd.com>
> Signed-off-by: Venkata Prasad Potturu <venkataprasad.potturu@amd.com>
> Reviewed-by: Vijendar Mukunda <Vijendar.Mukunda@amd.com>
> ---
> 
> Changes since v1:
>     -- Fix compile error and remove unused variable.
> 
>  sound/soc/amd/acp/acp-platform.c | 33 ++++++++++++--------------------
>  sound/soc/amd/acp/amd.h          |  3 ++-
>  2 files changed, 14 insertions(+), 22 deletions(-)
> 
> diff --git a/sound/soc/amd/acp/acp-platform.c b/sound/soc/amd/acp/acp-platform.c
> index 10730d33c3b0..20c0f75f7c97 100644
> --- a/sound/soc/amd/acp/acp-platform.c
> +++ b/sound/soc/amd/acp/acp-platform.c
> @@ -94,7 +94,7 @@ static irqreturn_t i2s_irq_handler(int irq, void *data)
>  	struct acp_resource *rsrc = adata->rsrc;
>  	struct acp_stream *stream;
>  	u16 i2s_flag = 0;
> -	u32 ext_intr_stat, ext_intr_stat1, i;
> +	u32 ext_intr_stat, ext_intr_stat1;
>  
>  	if (!adata)
>  		return IRQ_NONE;
> @@ -104,8 +104,7 @@ static irqreturn_t i2s_irq_handler(int irq, void *data)
>  
>  	ext_intr_stat = readl(ACP_EXTERNAL_INTR_STAT(adata, rsrc->irqp_used));
>  
> -	for (i = 0; i < ACP_MAX_STREAM; i++) {
> -		stream = adata->stream[i];
> +	list_for_each_entry(stream, &adata->stream_list, list) {
>  		if (stream && (ext_intr_stat & stream->irq_bit)) {
>  			writel(stream->irq_bit,
>  			       ACP_EXTERNAL_INTR_STAT(adata, rsrc->irqp_used));
> @@ -146,9 +145,8 @@ static void config_pte_for_stream(struct acp_dev_data *adata, struct acp_stream
>  	writel(0x01, adata->acp_base + ACPAXI2AXI_ATU_CTRL);
>  }
>  
> -static void config_acp_dma(struct acp_dev_data *adata, int cpu_id, int size)
> +static void config_acp_dma(struct acp_dev_data *adata, struct acp_stream *stream, int size)
>  {
> -	struct acp_stream *stream = adata->stream[cpu_id];
>  	struct snd_pcm_substream *substream = stream->substream;
>  	struct acp_resource *rsrc = adata->rsrc;
>  	dma_addr_t addr = substream->dma_buffer.addr;
> @@ -174,13 +172,10 @@ static void config_acp_dma(struct acp_dev_data *adata, int cpu_id, int size)
>  
>  static int acp_dma_open(struct snd_soc_component *component, struct snd_pcm_substream *substream)
>  {
> -	struct snd_soc_pcm_runtime *soc_runtime = asoc_substream_to_rtd(substream);
> -	struct snd_soc_dai *cpu_dai = asoc_rtd_to_cpu(soc_runtime, 0);
>  	struct snd_pcm_runtime *runtime = substream->runtime;
>  	struct device *dev = component->dev;
>  	struct acp_dev_data *adata = dev_get_drvdata(dev);
>  	struct acp_stream *stream;
> -	int stream_id = cpu_dai->driver->id * 2 + substream->stream;
>  	int ret;
>  
>  	stream = kzalloc(sizeof(*stream), GFP_KERNEL);
> @@ -188,7 +183,8 @@ static int acp_dma_open(struct snd_soc_component *component, struct snd_pcm_subs
>  		return -ENOMEM;
>  
>  	stream->substream = substream;
> -	adata->stream[stream_id] = stream;
> +
> +	list_add_tail(&stream->list, &adata->stream_list);
>  
>  	if (substream->stream == SNDRV_PCM_STREAM_PLAYBACK)
>  		runtime->hw = acp_pcm_hardware_playback;
> @@ -212,16 +208,13 @@ static int acp_dma_hw_params(struct snd_soc_component *component,
>  			     struct snd_pcm_substream *substream,
>  			     struct snd_pcm_hw_params *params)
>  {
> -	struct snd_soc_pcm_runtime *soc_runtime = asoc_substream_to_rtd(substream);
>  	struct acp_dev_data *adata = snd_soc_component_get_drvdata(component);
> -	struct snd_soc_dai *cpu_dai = asoc_rtd_to_cpu(soc_runtime, 0);
>  	struct acp_stream *stream = substream->runtime->private_data;
> -	int stream_id = cpu_dai->driver->id * 2 + substream->stream;
>  	u64 size = params_buffer_bytes(params);
>  
>  	/* Configure ACP DMA block with params */
>  	config_pte_for_stream(adata, stream);
> -	config_acp_dma(adata, stream_id, size);
> +	config_acp_dma(adata, stream, size);
>  
>  	return 0;
>  }
> @@ -261,16 +254,11 @@ static int acp_dma_new(struct snd_soc_component *component,
>  static int acp_dma_close(struct snd_soc_component *component,
>  			 struct snd_pcm_substream *substream)
>  {
> -	struct snd_soc_pcm_runtime *soc_runtime = asoc_substream_to_rtd(substream);
> -	struct snd_soc_dai *cpu_dai = asoc_rtd_to_cpu(soc_runtime, 0);
> -	struct device *dev = component->dev;
> -	struct acp_dev_data *adata = dev_get_drvdata(dev);
> -	struct acp_stream *stream;
> -	int stream_id = cpu_dai->driver->id * 2 + substream->stream;
> +	struct acp_stream *stream = substream->runtime->private_data;
>  
> -	stream = adata->stream[stream_id];
> +	/* Remove entry from list */
> +	list_del(&stream->list);
>  	kfree(stream);
> -	adata->stream[stream_id] = NULL;
>  
>  	return 0;
>  }
> @@ -305,6 +293,9 @@ int acp_platform_register(struct device *dev)
>  		dev_err(dev, "Fail to register acp i2s component\n");
>  		return status;
>  	}
> +
> +	INIT_LIST_HEAD(&adata->stream_list);
> +
>  	return 0;
>  }
>  EXPORT_SYMBOL_NS_GPL(acp_platform_register, SND_SOC_ACP_COMMON);
> diff --git a/sound/soc/amd/acp/amd.h b/sound/soc/amd/acp/amd.h
> index af9603724a68..148a9ab6206d 100644
> --- a/sound/soc/amd/acp/amd.h
> +++ b/sound/soc/amd/acp/amd.h
> @@ -91,6 +91,7 @@ struct acp_chip_info {
>  };
>  
>  struct acp_stream {
> +	struct list_head list;
>  	struct snd_pcm_substream *substream;
>  	int irq_bit;
>  	int dai_id;
> @@ -123,7 +124,7 @@ struct acp_dev_data {
>  	struct snd_soc_dai_driver *dai_driver;
>  	int num_dai;
>  
> -	struct acp_stream *stream[ACP_MAX_STREAM];
> +	struct list_head stream_list;
>  
>  	struct snd_soc_acpi_mach *machines;
>  	struct platform_device *mach_dev;
> -- 
> 2.25.1
> 
