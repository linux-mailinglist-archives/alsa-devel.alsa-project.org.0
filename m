Return-Path: <alsa-devel-bounces@alsa-project.org>
X-Original-To: lists+alsa-devel@lfdr.de
Delivered-To: lists+alsa-devel@lfdr.de
Received: from alsa0.perex.cz (alsa0.perex.cz [77.48.224.243])
	by mail.lfdr.de (Postfix) with ESMTPS id 11C403162F
	for <lists+alsa-devel@lfdr.de>; Fri, 31 May 2019 22:38:09 +0200 (CEST)
Received: from alsa1.perex.cz (alsa1.perex.cz [207.180.221.201])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by alsa0.perex.cz (Postfix) with ESMTPS id 80FE41682;
	Fri, 31 May 2019 22:37:18 +0200 (CEST)
DKIM-Filter: OpenDKIM Filter v2.11.0 alsa0.perex.cz 80FE41682
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=alsa-project.org;
	s=default; t=1559335088;
	bh=Gn9ZmO4tWkNlEf5hh2C9dIOQHNov5Ya0VzsK+mPIeP0=;
	h=Date:From:To:In-Reply-To:References:Cc:Subject:List-Id:
	 List-Unsubscribe:List-Archive:List-Post:List-Help:List-Subscribe:
	 From;
	b=k22O4LhbUiupaxEugFICRndwZ3EeAca7papNxTfM091fSx56sIKR9tyjYFAvnurKE
	 RK7sheAxCFh0fp2Wm+2wxLUVrM6TnwSaIwoYE8b7BTXVu/NrqR/GN0gTBU3Q1LPdZ3
	 kNb7SmWhDUIY1muFIVwtb+fHM4aEQD76FVXz2hoM=
Received: from alsa1.perex.cz (localhost.localdomain [127.0.0.1])
	by alsa1.perex.cz (Postfix) with ESMTP id E1CDFF896F2;
	Fri, 31 May 2019 22:36:23 +0200 (CEST)
X-Original-To: alsa-devel@alsa-project.org
Delivered-To: alsa-devel@alsa-project.org
Received: by alsa1.perex.cz (Postfix, from userid 50401)
 id E705AF8072E; Fri, 31 May 2019 22:36:21 +0200 (CEST)
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on alsa1.perex.cz
X-Spam-Level: *
X-Spam-Status: No, score=1.0 required=5.0 tests=PRX_BODY_30,SPF_HELO_NONE,
 SPF_PASS autolearn=disabled version=3.4.0
Received: from mx1.suse.de (mx2.suse.de [195.135.220.15])
 (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
 (No client certificate requested)
 by alsa1.perex.cz (Postfix) with ESMTPS id DDCB6F8072E
 for <alsa-devel@alsa-project.org>; Fri, 31 May 2019 22:36:18 +0200 (CEST)
DKIM-Filter: OpenDKIM Filter v2.11.0 alsa1.perex.cz DDCB6F8072E
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay2.suse.de (unknown [195.135.220.254])
 by mx1.suse.de (Postfix) with ESMTP id 622E7AFCF;
 Fri, 31 May 2019 20:36:17 +0000 (UTC)
Date: Fri, 31 May 2019 22:36:17 +0200
Message-ID: <s5hmuj2jr9a.wl-tiwai@suse.de>
From: Takashi Iwai <tiwai@suse.de>
To: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
In-Reply-To: <68aa2fa2-41fc-3dfb-c82f-1f88be5bd867@linux.intel.com>
References: <s5h7ea6lfaa.wl-tiwai@suse.de>
 <1f3059d6-b271-f612-c670-e7214674892f@linux.intel.com>
 <s5h36kulc07.wl-tiwai@suse.de>
 <a2737284-ee55-59e5-cab7-2503d27c92bb@linux.intel.com>
 <s5hzhn2jvf2.wl-tiwai@suse.de> <s5hv9xqjto3.wl-tiwai@suse.de>
 <68aa2fa2-41fc-3dfb-c82f-1f88be5bd867@linux.intel.com>
User-Agent: Wanderlust/2.15.9 (Almost Unreal) SEMI/1.14.6 (Maruoka)
 FLIM/1.14.9 (=?UTF-8?B?R29qxY0=?=) APEL/10.8 Emacs/25.3
 (x86_64-suse-linux-gnu) MULE/6.0 (HANACHIRUSATO)
MIME-Version: 1.0 (generated by SEMI 1.14.6 - "Maruoka")
Cc: alsa-devel@alsa-project.org, Keyon Jie <yang.jie@linux.intel.com>
Subject: Re: [alsa-devel] Why open-coding in sof_hda_bus_init()?
X-BeenThere: alsa-devel@alsa-project.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: "Alsa-devel mailing list for ALSA developers -
 http://www.alsa-project.org" <alsa-devel.alsa-project.org>
List-Unsubscribe: <https://mailman.alsa-project.org/mailman/options/alsa-devel>, 
 <mailto:alsa-devel-request@alsa-project.org?subject=unsubscribe>
List-Archive: <http://mailman.alsa-project.org/pipermail/alsa-devel/>
List-Post: <mailto:alsa-devel@alsa-project.org>
List-Help: <mailto:alsa-devel-request@alsa-project.org?subject=help>
List-Subscribe: <https://mailman.alsa-project.org/mailman/listinfo/alsa-devel>, 
 <mailto:alsa-devel-request@alsa-project.org?subject=subscribe>
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: 7bit
Errors-To: alsa-devel-bounces@alsa-project.org
Sender: "Alsa-devel" <alsa-devel-bounces@alsa-project.org>

On Fri, 31 May 2019 22:23:37 +0200,
Pierre-Louis Bossart wrote:
> 
> 
> 
> On 5/31/19 2:44 PM, Takashi Iwai wrote:
> > On Fri, 31 May 2019 21:06:25 +0200,
> > Takashi Iwai wrote:
> >>
> >> On Fri, 31 May 2019 20:31:33 +0200,
> >> Pierre-Louis Bossart wrote:
> >>>
> >>> On 5/31/19 1:22 PM, Takashi Iwai wrote:
> >>>> On Fri, 31 May 2019 19:43:59 +0200,
> >>>> Pierre-Louis Bossart wrote:
> >>>>>
> >>>>> On 5/31/19 12:11 PM, Takashi Iwai wrote:
> >>>>>> Hi,
> >>>>>>
> >>>>>> while looking at SOF code due to the recent debugging session, I
> >>>>>> noticed that sof_hda_bus_init() is basically an open-code of the
> >>>>>> existing snd_hdac_ext_bus_init().  Why don't we simply call
> >>>>>> snd_hdac_ext_bus_init() like below?
> >>>>>
> >>>>> It's intentional.
> >>>>> We've been asked since Day1 of SOF on ApolloLake to provide a
> >>>>> 'self-contained' controller-only support that has no dependency on the
> >>>>> snd_hdac library for solutions where HDaudio links+codecs are not used
> >>>>> (typically IOT devices). This was driven by the lack of separation
> >>>>> between layers in that library as well as a desire to have a
> >>>>> dual-license. That's why you see the init and some of the basic
> >>>>> utilities re-implemented for SOF.
> >>>>>
> >>>>> However for cases where HDaudio+HDMI are required, we didn't want to
> >>>>> reinvent the wheel - HDaudio is complicated enough - and do make use
> >>>>> of this snd_hdac library.
> >>>>>
> >>>>> We have a config SND_SOC_SOF_HDA that controls in which mode we
> >>>>> operate, and it enables HDMI by default (for I2S+HDMI solutions). To
> >>>>> get external HDaudio codecs you need the additional SOF_HDAUDIO_CODEC
> >>>>> kconfig.
> >>>>>
> >>>>> Does this help?
> >>>>
> >>>> Well, what's wrong with the conditional build with Kconfig?
> >>>> You can just wrap the call snd_hdac_ext_bus_init() with #if/endif,
> >>>> e.g. in soc/sof/intel/hda.h,
> >>>>
> >>>> static inline void sof_hda_bus_init(struct hdac_bus *bus, struct device *dev,
> >>>> 				    const struct hdac_ext_bus_ops *ext_ops)
> >>>> {
> >>>> #if IS_ENABLED(CONFIG_SND_SOC_SOF_HDA)
> >>>> 	snd_hdac_ext_bus_init(bus, dev, NULL, NULL, ext_ops);
> >>>> #endif
> >>>> }
> >>>
> >>> We still need initializations for some of the data structures when
> >>> SOF_HDA is not defined.
> >>
> >> Which data structure?  The function above is only initializing the
> >> given struct hdac_bus object.  I'm not suggesting to change the caller
> >> site, hda_init() of sound/soc/sof/intel/hda.c.
> 
> we need everything that was removed in your proposal :-)
> 
> -	memset(bus, 0, sizeof(*bus));
> -	bus->dev = dev;
> -
> -	bus->io_ops = &io_ops;
> -	INIT_LIST_HEAD(&bus->stream_list);
> -
> -	bus->irq = -1;
> -	bus->ext_ops = ext_ops;
> -
> -	/*
> -	 * There is only one HDA bus atm. keep the index as 0.
> -	 * Need to fix when there are more than one HDA bus.
> -	 */
> -	bus->idx = 0;
> -
> -	spin_lock_init(&bus->reg_lock);
> 
> This is the smallest set of initialization needed when you don't need
> hdmi/hdaudio codec support.

I don't understand it...  Why SOF core needs to initialize the content
of HD-audio bus object even if you won't use it?

IOW, what's the merit of having hda-bus.c with the copy of
snd-hda-core code?  As far as I see, both hda.c and hda-bus.c are
linked into the same snd-sof-intel-hda-common module.  And, the former
has the direct calls of HD-audio core API (with
CONFIG_SND_SOC_SOF_HDA); i.e. snd-sof-intel-hda-common already depends
on snd-hda-core if CONFIG_SND_SOC_SOF_HDA is on, no matter how you
code hda-bus.c.


thanks,

Takashi
_______________________________________________
Alsa-devel mailing list
Alsa-devel@alsa-project.org
https://mailman.alsa-project.org/mailman/listinfo/alsa-devel
