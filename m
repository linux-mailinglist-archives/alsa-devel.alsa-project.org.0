Return-Path: <alsa-devel-bounces@alsa-project.org>
X-Original-To: lists+alsa-devel@lfdr.de
Delivered-To: lists+alsa-devel@lfdr.de
Received: from alsa0.perex.cz (alsa0.perex.cz [77.48.224.243])
	by mail.lfdr.de (Postfix) with ESMTPS id 8FA75777E3
	for <lists+alsa-devel@lfdr.de>; Sat, 27 Jul 2019 11:28:43 +0200 (CEST)
Received: from alsa1.perex.cz (alsa1.perex.cz [207.180.221.201])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by alsa0.perex.cz (Postfix) with ESMTPS id E0A932080;
	Sat, 27 Jul 2019 11:27:52 +0200 (CEST)
DKIM-Filter: OpenDKIM Filter v2.11.0 alsa0.perex.cz E0A932080
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=alsa-project.org;
	s=default; t=1564219723;
	bh=pj54D+XBqJQjU5lZGfaoAgITvJ7JTamsAlJIPWg1QrE=;
	h=Date:From:To:In-Reply-To:References:Cc:Subject:List-Id:
	 List-Unsubscribe:List-Archive:List-Post:List-Help:List-Subscribe:
	 From;
	b=p9HzNWQ84hrPeoPa6qDB+5Hum/fh4pyVQiJ+xunCJl4ogzT2jB9HTmuYLlI2fHunv
	 hh9nghLjXU5vOODQapFtV9B6FhBFZevH3+OoG9oMTY3om3dUTcej951vRhtc6rR3ve
	 T6DJtbByQ4w7Y90QvV7l3B8ceg7n+fRfUnVwQ4qY=
Received: from alsa1.perex.cz (localhost.localdomain [127.0.0.1])
	by alsa1.perex.cz (Postfix) with ESMTP id 26B20F80392;
	Sat, 27 Jul 2019 11:26:59 +0200 (CEST)
X-Original-To: alsa-devel@alsa-project.org
Delivered-To: alsa-devel@alsa-project.org
Received: by alsa1.perex.cz (Postfix, from userid 50401)
 id BB1C2F80394; Sat, 27 Jul 2019 11:26:56 +0200 (CEST)
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on alsa1.perex.cz
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=RCVD_IN_DNSWL_BLOCKED,
 SPF_HELO_NONE,SPF_PASS,URIBL_BLOCKED autolearn=disabled version=3.4.0
Received: from mx1.suse.de (mx2.suse.de [195.135.220.15])
 (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
 (No client certificate requested)
 by alsa1.perex.cz (Postfix) with ESMTPS id B5FF2F80134
 for <alsa-devel@alsa-project.org>; Sat, 27 Jul 2019 11:26:53 +0200 (CEST)
DKIM-Filter: OpenDKIM Filter v2.11.0 alsa1.perex.cz B5FF2F80134
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay2.suse.de (unknown [195.135.220.254])
 by mx1.suse.de (Postfix) with ESMTP id 6DB1CAD3B;
 Sat, 27 Jul 2019 09:26:52 +0000 (UTC)
Date: Sat, 27 Jul 2019 11:26:51 +0200
Message-ID: <s5ha7czrfok.wl-tiwai@suse.de>
From: Takashi Iwai <tiwai@suse.de>
To: Tanu Kaskinen <tanuk@iki.fi>
In-Reply-To: <4ece142d39a3bbe8477b9eeac024df0b2dc35840.camel@iki.fi>
References: <20170810233614.3184-1-alexander@tsoy.me>
 <4ece142d39a3bbe8477b9eeac024df0b2dc35840.camel@iki.fi>
User-Agent: Wanderlust/2.15.9 (Almost Unreal) SEMI/1.14.6 (Maruoka)
 FLIM/1.14.9 (=?UTF-8?B?R29qxY0=?=) APEL/10.8 Emacs/25.3
 (x86_64-suse-linux-gnu) MULE/6.0 (HANACHIRUSATO)
MIME-Version: 1.0 (generated by SEMI 1.14.6 - "Maruoka")
Cc: Alexander Tsoy <alexander@tsoy.me>, alsa-devel@alsa-project.org
Subject: Re: [alsa-devel] [PATCH] ALSA: usb-audio: fix PCM device order
X-BeenThere: alsa-devel@alsa-project.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: "Alsa-devel mailing list for ALSA developers -
 http://www.alsa-project.org" <alsa-devel.alsa-project.org>
List-Unsubscribe: <https://mailman.alsa-project.org/mailman/options/alsa-devel>, 
 <mailto:alsa-devel-request@alsa-project.org?subject=unsubscribe>
List-Archive: <http://mailman.alsa-project.org/pipermail/alsa-devel/>
List-Post: <mailto:alsa-devel@alsa-project.org>
List-Help: <mailto:alsa-devel-request@alsa-project.org?subject=help>
List-Subscribe: <https://mailman.alsa-project.org/mailman/listinfo/alsa-devel>, 
 <mailto:alsa-devel-request@alsa-project.org?subject=subscribe>
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: 7bit
Errors-To: alsa-devel-bounces@alsa-project.org
Sender: "Alsa-devel" <alsa-devel-bounces@alsa-project.org>

On Sat, 27 Jul 2019 10:09:08 +0200,
Tanu Kaskinen wrote:
> 
> Ping? This patch never got any feedback, and yesterday another user
> complained on PulseAudio bug tracker that Audinst HUD-mx2 doesn't work
> out of the box, because by default hw:x,0 is used when hw:x,1 is the
> pcm that works.

Oohoo, it's a ping with so large latency.  This must have been simply
overlooked, or I was off at that time.

In anyway the patch can't be applied to the latest code as of today,
so I rewrote with a cleanup patch.

The patchset will be submitted, so please give it a try.


thanks,

Takashi

> 
> -- Tanu
> 
> 
> On Fri, 2017-08-11 at 02:36 +0300, Alexander Tsoy wrote:
> > Some cards have alternate setting with non-PCM format as the first
> > altsetting in the interface descriptors. This confuses userspace, since
> > alsa-lib uses device 0 by default. So lets parse interfaces in two steps:
> >  1. Parse altsettings with PCM formats.
> >  2. Parse altsettings with non-PCM formats.
> > 
> > This fixes at least following cards:
> >  - Audinst HUD-mx2
> >  - Audinst HUD-mini
> > 
> > Signed-off-by: Alexander Tsoy <alexander@tsoy.me>
> > ---
> >  sound/usb/stream.c | 27 ++++++++++++++++++++++++++-
> >  1 file changed, 26 insertions(+), 1 deletion(-)
> > 
> > diff --git a/sound/usb/stream.c b/sound/usb/stream.c
> > index 8e9548bc1f1a..b2ebeae91396 100644
> > --- a/sound/usb/stream.c
> > +++ b/sound/usb/stream.c
> > @@ -477,7 +477,8 @@ static struct uac2_output_terminal_descriptor *
> >  	return NULL;
> >  }
> >  
> > -int snd_usb_parse_audio_interface(struct snd_usb_audio *chip, int iface_no)
> > +static int __snd_usb_parse_audio_interface(struct snd_usb_audio *chip, int iface_no,
> > +				           bool *has_non_pcm, bool non_pcm)
> >  {
> >  	struct usb_device *dev;
> >  	struct usb_interface *iface;
> > @@ -634,6 +635,10 @@ int snd_usb_parse_audio_interface(struct snd_usb_audio *chip, int iface_no)
> >  				iface_no, altno);
> >  			continue;
> >  		}
> > +		if (fmt->bFormatType != UAC_FORMAT_TYPE_I)
> > +			*has_non_pcm = true;
> > +		if ((fmt->bFormatType == UAC_FORMAT_TYPE_I) == non_pcm)
> > +			continue;
> >  		if (((protocol == UAC_VERSION_1) && (fmt->bLength < 8)) ||
> >  		    ((protocol == UAC_VERSION_2) && (fmt->bLength < 6))) {
> >  			dev_err(&dev->dev,
> > @@ -740,3 +745,23 @@ int snd_usb_parse_audio_interface(struct snd_usb_audio *chip, int iface_no)
> >  	return 0;
> >  }
> >  
> > +int snd_usb_parse_audio_interface(struct snd_usb_audio *chip, int iface_no)
> > +{
> > +	int err;
> > +	bool has_non_pcm = false;
> > +
> > +	/* parse PCM formats */
> > +	err = __snd_usb_parse_audio_interface(chip, iface_no, &has_non_pcm, false);
> > +	if (err < 0)
> > +		return err;
> > +
> > +	if (has_non_pcm) {
> > +		/* parse non-PCM formats */
> > +		err = __snd_usb_parse_audio_interface(chip, iface_no, &has_non_pcm, true);
> > +		if (err < 0)
> > +			return err;
> > +	}
> > +
> > +	return 0;
> > +}
> > +
> 
> _______________________________________________
> Alsa-devel mailing list
> Alsa-devel@alsa-project.org
> https://mailman.alsa-project.org/mailman/listinfo/alsa-devel
> 
_______________________________________________
Alsa-devel mailing list
Alsa-devel@alsa-project.org
https://mailman.alsa-project.org/mailman/listinfo/alsa-devel
