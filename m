Return-Path: <alsa-devel-bounces@alsa-project.org>
X-Original-To: lists+alsa-devel@lfdr.de
Delivered-To: lists+alsa-devel@lfdr.de
Received: from alsa0.perex.cz (alsa0.perex.cz [77.48.224.243])
	by mail.lfdr.de (Postfix) with ESMTPS id D628E21AF1
	for <lists+alsa-devel@lfdr.de>; Fri, 17 May 2019 17:49:24 +0200 (CEST)
Received: from alsa1.perex.cz (alsa1.perex.cz [207.180.221.201])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by alsa0.perex.cz (Postfix) with ESMTPS id 626BB16A8;
	Fri, 17 May 2019 17:48:34 +0200 (CEST)
DKIM-Filter: OpenDKIM Filter v2.11.0 alsa0.perex.cz 626BB16A8
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=alsa-project.org;
	s=default; t=1558108164;
	bh=kE125Hrd4IEY+2zFe/ALEt2p3CULBB9P2jxLD7rbLck=;
	h=Date:From:To:In-Reply-To:References:Cc:Subject:List-Id:
	 List-Unsubscribe:List-Archive:List-Post:List-Help:List-Subscribe:
	 From;
	b=OM8HkBkigTHPHqKExrvr6dB/b1qC69gGNGooy/l2jJPEYv4r2nH1/MXxT65DhUjIQ
	 YGJOn5nJEQVM1jfoCu/jL4CmP7MFvmzMrdXezN7Ux76OchjY1yx73MX6TOxMC6VbMu
	 gg4PHVH3495EeJw0D+bUouBrft660J6+m5YuGI10=
Received: from alsa1.perex.cz (localhost.localdomain [127.0.0.1])
	by alsa1.perex.cz (Postfix) with ESMTP id BF0E7F8968A;
	Fri, 17 May 2019 17:47:39 +0200 (CEST)
X-Original-To: alsa-devel@alsa-project.org
Delivered-To: alsa-devel@alsa-project.org
Received: by alsa1.perex.cz (Postfix, from userid 50401)
 id 081C1F8968A; Fri, 17 May 2019 17:47:37 +0200 (CEST)
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on alsa1.perex.cz
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=SPF_HELO_NONE,SPF_PASS,
 URIBL_BLOCKED autolearn=disabled version=3.4.0
Received: from mx1.suse.de (mx2.suse.de [195.135.220.15])
 (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
 (No client certificate requested)
 by alsa1.perex.cz (Postfix) with ESMTPS id 9A201F80759
 for <alsa-devel@alsa-project.org>; Fri, 17 May 2019 17:47:33 +0200 (CEST)
DKIM-Filter: OpenDKIM Filter v2.11.0 alsa1.perex.cz 9A201F80759
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay2.suse.de (unknown [195.135.220.254])
 by mx1.suse.de (Postfix) with ESMTP id 7FE74AF67;
 Fri, 17 May 2019 15:47:32 +0000 (UTC)
Date: Fri, 17 May 2019 17:47:31 +0200
Message-ID: <s5h36ldf5gs.wl-tiwai@suse.de>
From: Takashi Iwai <tiwai@suse.de>
To: <parna.naveenkumar@gmail.com>
In-Reply-To: <20190517063328.21512-1-parna.naveenkumar@gmail.com>
References: <20190517063328.21512-1-parna.naveenkumar@gmail.com>
User-Agent: Wanderlust/2.15.9 (Almost Unreal) SEMI/1.14.6 (Maruoka)
 FLIM/1.14.9 (=?UTF-8?B?R29qxY0=?=) APEL/10.8 Emacs/25.3
 (x86_64-suse-linux-gnu) MULE/6.0 (HANACHIRUSATO)
MIME-Version: 1.0 (generated by SEMI 1.14.6 - "Maruoka")
Cc: alsa-devel@alsa-project.org, linux-kernel@vger.kernel.org
Subject: Re: [alsa-devel] [PATCH] sound: open brace should be on the
	previous line
X-BeenThere: alsa-devel@alsa-project.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: "Alsa-devel mailing list for ALSA developers -
 http://www.alsa-project.org" <alsa-devel.alsa-project.org>
List-Unsubscribe: <https://mailman.alsa-project.org/mailman/options/alsa-devel>, 
 <mailto:alsa-devel-request@alsa-project.org?subject=unsubscribe>
List-Archive: <http://mailman.alsa-project.org/pipermail/alsa-devel/>
List-Post: <mailto:alsa-devel@alsa-project.org>
List-Help: <mailto:alsa-devel-request@alsa-project.org?subject=help>
List-Subscribe: <https://mailman.alsa-project.org/mailman/listinfo/alsa-devel>, 
 <mailto:alsa-devel-request@alsa-project.org?subject=subscribe>
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: 7bit
Errors-To: alsa-devel-bounces@alsa-project.org
Sender: "Alsa-devel" <alsa-devel-bounces@alsa-project.org>

On Fri, 17 May 2019 08:33:28 +0200,
<parna.naveenkumar@gmail.com> wrote:
> 
> From: Naveen Kumar Parna <parna.naveenkumar@gmail.com>
> 
> Resolved open brace { should be on the previous line checkpatch.pl
> error. While addressing this error, also corrected the affected code
> for below mentioned checkpatch errors.
> 
> ERROR: spaces required around that '<' (ctx:VxV)
> ERROR: spaces required around that '==' (ctx:VxV)
> ERROR: space required before the open parenthesis '('
> 
> Signed-off-by: Naveen Kumar Parna <parna.naveenkumar@gmail.com>

Basically I'd take this kind of coding style cleanup only when really
needed as a preliminary work.  If you have a real fix after this,
please send a patch series together, otherwise this will be skipped.


thanks,

Takashi


> ---
>  sound/sound_core.c | 21 +++++++--------------
>  1 file changed, 7 insertions(+), 14 deletions(-)
> 
> diff --git a/sound/sound_core.c b/sound/sound_core.c
> index 40ad000c2e3c..ce794a2afc6b 100644
> --- a/sound/sound_core.c
> +++ b/sound/sound_core.c
> @@ -111,8 +111,7 @@ module_exit(cleanup_soundcore);
>  
>  #define SOUND_STEP 16
>  
> -struct sound_unit
> -{
> +struct sound_unit {
>  	int unit_minor;
>  	const struct file_operations *unit_fops;
>  	struct sound_unit *next;
> @@ -151,8 +150,7 @@ module_param(preclaim_oss, int, 0444);
>  
>  static int soundcore_open(struct inode *, struct file *);
>  
> -static const struct file_operations soundcore_fops =
> -{
> +static const struct file_operations soundcore_fops = {
>  	/* We must have an owner or the module locking fails */
>  	.owner	= THIS_MODULE,
>  	.open	= soundcore_open,
> @@ -173,8 +171,7 @@ static int __sound_insert_unit(struct sound_unit * s, struct sound_unit **list,
>  		while (*list && (*list)->unit_minor<n)
>  			list=&((*list)->next);
>  
> -		while(n<top)
> -		{
> +		while (n < top) {
>  			/* Found a hole ? */
>  			if(*list==NULL || (*list)->unit_minor>n)
>  				break;
> @@ -219,11 +216,9 @@ static int __sound_insert_unit(struct sound_unit * s, struct sound_unit **list,
>   
>  static struct sound_unit *__sound_remove_unit(struct sound_unit **list, int unit)
>  {
> -	while(*list)
> -	{
> +	while (*list) {
>  		struct sound_unit *p=*list;
> -		if(p->unit_minor==unit)
> -		{
> +		if (p->unit_minor == unit) {
>  			*list=p->next;
>  			return p;
>  		}
> @@ -528,8 +523,7 @@ static struct sound_unit *__look_for_unit(int chain, int unit)
>  	struct sound_unit *s;
>  	
>  	s=chains[chain];
> -	while(s && s->unit_minor <= unit)
> -	{
> +	while (s && s->unit_minor <= unit) {
>  		if(s->unit_minor==unit)
>  			return s;
>  		s=s->next;
> @@ -545,8 +539,7 @@ static int soundcore_open(struct inode *inode, struct file *file)
>  	const struct file_operations *new_fops = NULL;
>  
>  	chain=unit&0x0F;
> -	if(chain==4 || chain==5)	/* dsp/audio/dsp16 */
> -	{
> +	if (chain == 4 || chain == 5) {	/* dsp/audio/dsp16 */
>  		unit&=0xF0;
>  		unit|=3;
>  		chain=3;
> -- 
> 2.17.1
> 
> 
_______________________________________________
Alsa-devel mailing list
Alsa-devel@alsa-project.org
https://mailman.alsa-project.org/mailman/listinfo/alsa-devel
