Return-Path: <alsa-devel-bounces@alsa-project.org>
X-Original-To: lists+alsa-devel@lfdr.de
Delivered-To: lists+alsa-devel@lfdr.de
Received: from alsa0.perex.cz (alsa0.perex.cz [77.48.224.243])
	by mail.lfdr.de (Postfix) with ESMTPS id 33EFF2A50C9
	for <lists+alsa-devel@lfdr.de>; Tue,  3 Nov 2020 21:18:55 +0100 (CET)
Received: from alsa1.perex.cz (alsa1.perex.cz [207.180.221.201])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by alsa0.perex.cz (Postfix) with ESMTPS id BED1A16A4;
	Tue,  3 Nov 2020 21:18:04 +0100 (CET)
DKIM-Filter: OpenDKIM Filter v2.11.0 alsa0.perex.cz BED1A16A4
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=alsa-project.org;
	s=default; t=1604434734;
	bh=gFJtTNw6hp696T5x7pbkOJ+1bannpQ74l3+WGQNcRXk=;
	h=Date:From:To:Subject:In-Reply-To:References:Cc:List-Id:
	 List-Unsubscribe:List-Archive:List-Post:List-Help:List-Subscribe:
	 From;
	b=tB7tl1tWIt4znx5aKfHQQRoufN91lrHZRVI3DfnUL9SswHbWEfIBUlCGI7RS8ea8X
	 F1e0zoBT/vNJFbiPaE4wZLtyzTM0jxUOcOHh8buj+lE5EQem8U0p9zMKbPxa08tUY9
	 s2hgv9UoCaW/oH99HoEKYJ5IBM5np+tFOfnwXGqs=
Received: from alsa1.perex.cz (localhost.localdomain [127.0.0.1])
	by alsa1.perex.cz (Postfix) with ESMTP id 4C49FF80272;
	Tue,  3 Nov 2020 21:17:23 +0100 (CET)
X-Original-To: alsa-devel@alsa-project.org
Delivered-To: alsa-devel@alsa-project.org
Received: by alsa1.perex.cz (Postfix, from userid 50401)
 id 16DFDF80171; Tue,  3 Nov 2020 21:17:19 +0100 (CET)
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on alsa1.perex.cz
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=RCVD_IN_MSPIKE_H3,
 RCVD_IN_MSPIKE_WL,SPF_HELO_NONE,SPF_PASS,URIBL_BLOCKED autolearn=disabled
 version=3.4.0
Received: from mx2.suse.de (mx2.suse.de [195.135.220.15])
 by alsa1.perex.cz (Postfix) with ESMTP id 0D919F80083
 for <alsa-devel@alsa-project.org>; Tue,  3 Nov 2020 21:17:14 +0100 (CET)
DKIM-Filter: OpenDKIM Filter v2.11.0 alsa1.perex.cz 0D919F80083
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay2.suse.de (unknown [195.135.221.27])
 by mx2.suse.de (Postfix) with ESMTP id C2345AC77;
 Tue,  3 Nov 2020 20:17:11 +0000 (UTC)
Date: Tue, 03 Nov 2020 21:17:11 +0100
Message-ID: <s5hv9emkxfc.wl-tiwai@suse.de>
From: Takashi Iwai <tiwai@suse.de>
To: Yu Hao <yuhaobehappy@gmail.com>
Subject: Re: [PATCH] sound/core/seq: remove dead code
In-Reply-To: <CAM0=KirN+ALL=kzQsV2CenBcUNAgP6pQTZaSTEC+oimWmrkjSg@mail.gmail.com>
References: <20201102071154.23563-1-yuhaobehappy@gmail.com>
 <s5himamoacp.wl-tiwai@suse.de>
 <CAM0=KirN+ALL=kzQsV2CenBcUNAgP6pQTZaSTEC+oimWmrkjSg@mail.gmail.com>
User-Agent: Wanderlust/2.15.9 (Almost Unreal) SEMI/1.14.6 (Maruoka)
 FLIM/1.14.9 (=?UTF-8?B?R29qxY0=?=) APEL/10.8 Emacs/25.3
 (x86_64-suse-linux-gnu) MULE/6.0 (HANACHIRUSATO)
MIME-Version: 1.0 (generated by SEMI 1.14.6 - "Maruoka")
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
Cc: linux-kernel@vger.kernel.org, alsa-devel@alsa-project.org, tiwai@suse.com
X-BeenThere: alsa-devel@alsa-project.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: "Alsa-devel mailing list for ALSA developers -
 http://www.alsa-project.org" <alsa-devel.alsa-project.org>
List-Unsubscribe: <https://mailman.alsa-project.org/mailman/options/alsa-devel>, 
 <mailto:alsa-devel-request@alsa-project.org?subject=unsubscribe>
List-Archive: <http://mailman.alsa-project.org/pipermail/alsa-devel/>
List-Post: <mailto:alsa-devel@alsa-project.org>
List-Help: <mailto:alsa-devel-request@alsa-project.org?subject=help>
List-Subscribe: <https://mailman.alsa-project.org/mailman/listinfo/alsa-devel>, 
 <mailto:alsa-devel-request@alsa-project.org?subject=subscribe>
Errors-To: alsa-devel-bounces@alsa-project.org
Sender: "Alsa-devel" <alsa-devel-bounces@alsa-project.org>

On Tue, 03 Nov 2020 19:43:55 +0100,
Yu Hao wrote:
> 
> Yes, I can do that.
> 
> And a quick question, to resubmit with that change means that I should create
> a new submission and this one ends, right?

Yes, just submit a fresh patch.


thanks,

Takashi

> 
> Thanks.
> 
> On Tue, Nov 3, 2020 at 5:09 AM Takashi Iwai <tiwai@suse.de> wrote:
> 
>     On Mon, 02 Nov 2020 08:11:54 +0100,
>     Yu Hao wrote:
>     >
>     > The function snd_seq_queue_client_termination() is only called from
>     > function seq_free_client1(). The seq_free_client1() calls function
>     > snd_seq_queue_client_leave(), which deletes all objects whose owner
>     > equals to client->number in global array queue_list, before the function
>     > snd_seq_queue_client_termination(), which checks whether there are
>     > any objects in global array queue_list whose owner equals to
>     > client->number, with the same argument client->number. So
>     > the checking code in function snd_seq_queue_client_termination() is
>     > dead code. Remove those dead code.
>     >
>     > Signed-off-by: Yu Hao <yuhaobehappy@gmail.com>
>    
>     Actually the whole function snd_seq_queue_client_termination() can be
>     removed.  It's a quite old code and I don't remember clearly, but I
>     guess the intention was to call this before the actual queue
>     deletion.  OTOH, it doesn't make any sense to change that order any
>     longer, as the snd_seq_queue_client_leave() already takes similar
>     procedure anyway, so let's rather wipe off the useless function.
>    
>     Could you resubmit with that change?
> 
>     thanks,
>    
>     Takashi
>    
>     > ---
>     >  sound/core/seq/seq_queue.c | 11 -----------
>     >  1 file changed, 11 deletions(-)
>     >
>     > diff --git a/sound/core/seq/seq_queue.c b/sound/core/seq/seq_queue.c
>     > index 71a6ea62c3be..91b3f3295d0b 100644
>     > --- a/sound/core/seq/seq_queue.c
>     > +++ b/sound/core/seq/seq_queue.c
>     > @@ -545,21 +545,10 @@ void snd_seq_queue_client_termination(int client)
>     >       unsigned long flags;
>     >       int i;
>     >       struct snd_seq_queue *q;
>     > -     bool matched;
>     > 
>     >       for (i = 0; i < SNDRV_SEQ_MAX_QUEUES; i++) {
>     >               if ((q = queueptr(i)) == NULL)
>     >                       continue;
>     > -             spin_lock_irqsave(&q->owner_lock, flags);
>     > -             matched = (q->owner == client);
>     > -             if (matched)
>     > -                     q->klocked = 1;
>     > -             spin_unlock_irqrestore(&q->owner_lock, flags);
>     > -             if (matched) {
>     > -                     if (q->timer->running)
>     > -                             snd_seq_timer_stop(q->timer);
>     > -                     snd_seq_timer_reset(q->timer);
>     > -             }
>     >               queuefree(q);
>     >       }
>     >  }
>     > --
>     > 2.17.1
>     >
> 
> 
