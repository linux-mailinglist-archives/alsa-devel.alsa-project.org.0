Return-Path: <alsa-devel-bounces@alsa-project.org>
X-Original-To: lists+alsa-devel@lfdr.de
Delivered-To: lists+alsa-devel@lfdr.de
Received: from alsa0.perex.cz (alsa0.perex.cz [77.48.224.243])
	by mail.lfdr.de (Postfix) with ESMTPS id 2DE581540A3
	for <lists+alsa-devel@lfdr.de>; Thu,  6 Feb 2020 09:46:59 +0100 (CET)
Received: from alsa1.perex.cz (alsa1.perex.cz [207.180.221.201])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by alsa0.perex.cz (Postfix) with ESMTPS id BDA3E168B;
	Thu,  6 Feb 2020 09:46:08 +0100 (CET)
DKIM-Filter: OpenDKIM Filter v2.11.0 alsa0.perex.cz BDA3E168B
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=alsa-project.org;
	s=default; t=1580978818;
	bh=gYSh1gusDUhwyL1tMmfWJ/6LLUWdQoVmpF56hiGdHQQ=;
	h=Date:From:To:In-Reply-To:References:Cc:Subject:List-Id:
	 List-Unsubscribe:List-Archive:List-Post:List-Help:List-Subscribe:
	 From;
	b=n1pRoyTRpbmVLiTRK3nJFE2xJ8NxV967zOGdoFJGSuE7qSSyycx6GHXyg0UPKEWmd
	 QEp1o9iC/mzgvDJLuQdJbS6KaUwsb3CPe/rRN4UFhIN7jY6p6g6sSC1jUosKqWyjfx
	 SNhNvf6CrgfrN1zd3XEYHomJZTjDeLylyX+i5bXY=
Received: from alsa1.perex.cz (localhost.localdomain [127.0.0.1])
	by alsa1.perex.cz (Postfix) with ESMTP id 60119F80248;
	Thu,  6 Feb 2020 09:45:16 +0100 (CET)
X-Original-To: alsa-devel@alsa-project.org
Delivered-To: alsa-devel@alsa-project.org
Received: by alsa1.perex.cz (Postfix, from userid 50401)
 id E5AB3F80162; Thu,  6 Feb 2020 09:45:13 +0100 (CET)
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on alsa1.perex.cz
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=RCVD_IN_MSPIKE_H3,
 RCVD_IN_MSPIKE_WL,SPF_HELO_NONE,SPF_PASS,SURBL_BLOCKED,URIBL_BLOCKED
 autolearn=disabled version=3.4.0
Received: from mx2.suse.de (mx2.suse.de [195.135.220.15])
 (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
 (No client certificate requested)
 by alsa1.perex.cz (Postfix) with ESMTPS id EEF3CF800AB;
 Thu,  6 Feb 2020 09:45:03 +0100 (CET)
DKIM-Filter: OpenDKIM Filter v2.11.0 alsa1.perex.cz EEF3CF800AB
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay2.suse.de (unknown [195.135.220.254])
 by mx2.suse.de (Postfix) with ESMTP id 7F708ACBD;
 Thu,  6 Feb 2020 08:44:59 +0000 (UTC)
Date: Thu, 06 Feb 2020 09:44:58 +0100
Message-ID: <s5hpnes9kad.wl-tiwai@suse.de>
From: Takashi Iwai <tiwai@suse.de>
To: "Channaiah Vanitha (RBEI/ECF3)" <Vanitha.Channaiah@in.bosch.com>
In-Reply-To: <40c16023f7af40bba1ee87876a740253@in.bosch.com>
References: <1580976781-6642-1-git-send-email-vanitha.channaiah@in.bosch.com>
 <40c16023f7af40bba1ee87876a740253@in.bosch.com>
User-Agent: Wanderlust/2.15.9 (Almost Unreal) SEMI/1.14.6 (Maruoka)
 FLIM/1.14.9 (=?UTF-8?B?R29qxY0=?=) APEL/10.8 Emacs/25.3
 (x86_64-suse-linux-gnu) MULE/6.0 (HANACHIRUSATO)
MIME-Version: 1.0 (generated by SEMI 1.14.6 - "Maruoka")
Cc: "Wischer Timo \(ADITG/ESS\)" <twischer@de.adit-jv.com>,
 "alsa-devel@alsa-project.org" <alsa-devel@alsa-project.org>,
 "patch@alsa-project.org" <patch@alsa-project.org>
Subject: Re: [alsa-devel] [PATCH - 1/1] pcm: direct: Round down of
	slave_hw_ptr when buffer size is two period size
X-BeenThere: alsa-devel@alsa-project.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: "Alsa-devel mailing list for ALSA developers -
 http://www.alsa-project.org" <alsa-devel.alsa-project.org>
List-Unsubscribe: <https://mailman.alsa-project.org/mailman/options/alsa-devel>, 
 <mailto:alsa-devel-request@alsa-project.org?subject=unsubscribe>
List-Archive: <http://mailman.alsa-project.org/pipermail/alsa-devel/>
List-Post: <mailto:alsa-devel@alsa-project.org>
List-Help: <mailto:alsa-devel-request@alsa-project.org?subject=help>
List-Subscribe: <https://mailman.alsa-project.org/mailman/listinfo/alsa-devel>, 
 <mailto:alsa-devel-request@alsa-project.org?subject=subscribe>
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: 7bit
Errors-To: alsa-devel-bounces@alsa-project.org
Sender: "Alsa-devel" <alsa-devel-bounces@alsa-project.org>

On Thu, 06 Feb 2020 09:14:42 +0100,
Channaiah Vanitha (RBEI/ECF3) wrote:
> 
> Hello Takashi-san,
> 
> This patch is regarding the fix for rounding down/up of slave pointers.
> For buffer_size >= 2*period_size, round down of slave pointers and
> for buffer_size < 2*period_size, round up of slave pointers will avoid xruns.
> which otherwise causes snd_pcm_wait() to block for more than expected snd_pcm_period_elapsed() which leads to xruns.
> 
> We had similar discussion for same issue in below link:
> https://mailman.alsa-project.org/pipermail/alsa-devel/2019-June/151169.html

Yes, and I still don't get why this must be required.
Doesn't this imply that you drop the samples instead?


Takashi

> 
> Regards,
> Vanitha
> 
> 
> -----Original Message-----
> From: Channaiah Vanitha (RBEI/ECF3) <Vanitha.Channaiah@in.bosch.com> 
> Sent: Thursday, February 6, 2020 1:43 PM
> To: Channaiah Vanitha (RBEI/ECF3) <Vanitha.Channaiah@in.bosch.com>; patch@alsa-project.org
> Cc: alsa-devel@alsa-project.org; Wischer Timo (ADITG/ESS) <twischer@de.adit-jv.com>
> Subject: [PATCH - 1/1] pcm: direct: Round down of slave_hw_ptr when buffer size is two period size
> 
> From: Vanitha Channaiah <vanitha.channaiah@in.bosch.com>
> 
> For buffer size equal to two period size, the start position of slave_hw_ptr is rounded down in order to avoid xruns
> 
> For e.g.:
> Considering below parameters and its values:
> Period size = 96 (0x60)
> Buffer size = 192 (0xC0)
> Timer ticks = 1
> avail_min = 0x60
> slave_hw_ptr = unaligned value during dmix_start()
> 
> Issue:
> - Initial, app_ptr = hw_ptr = 0
> - Application fills buffer size of data. so app_ptr = 0xC0, hw_ptr = 0
> - During dmix_start(), current slave_hw_ptr is not rounded down. current slave_hw_ptr would be 0x66
> - slave_hw_ptr is keep on updating at the hardware 0x67, 0x68, 0x69
> - The diff calculation between old_slave_hw_ptr(0x66) and new_slave_hw_ptr(0x69)
>   results in avail = 0x6
> - After 1 snd_pcm_period_elapsed(), slave_hw_ptr = 0xC0
> - The result of avail = 0x5A which is less than avail_min(0x60)
> - Here, xruns will be observed
> 
> Fix:
> - Initial, app_ptr = hw_ptr = 0
> - Application fills buffer size of data. so app_ptr = 0xC0, hw_ptr = 0
> - Round down of slave_hw_ptr during dmix_start() leads to below calculation:
> - During dmix_start(), slave_hw_ptr rounded to 0x60 (old slave_hw_ptr)
> - The diff calculation between old_slave_hw_ptr(0x60) and new_slave_hw_ptr(0x69)
>   results in avail = 0x9
> - After 1 snd_pcm_period_elapsed(), slave_hw_ptr = 0xC0
> - The result of avail = 0x60 which is avail_min(0x60)
> - Here, xruns can be avoided
> 
> Signed-off-by: Vanitha Channaiah <vanitha.channaiah@in.bosch.com>
> 
> diff --git a/src/pcm/pcm_direct.c b/src/pcm/pcm_direct.c index 54d9900..a201fa3 100644
> --- a/src/pcm/pcm_direct.c
> +++ b/src/pcm/pcm_direct.c
> @@ -2043,10 +2043,14 @@ int snd_pcm_direct_parse_open_conf(snd_config_t *root, snd_config_t *conf,
>  
>  void snd_pcm_direct_reset_slave_ptr(snd_pcm_t *pcm, snd_pcm_direct_t *dmix)  {
> +    /*
> +     * For buffer size equal to two period size, slave_hw_ptr is rounded down
> +     * to avoid xruns
> +     */
>  
>  	if (dmix->hw_ptr_alignment == SND_PCM_HW_PTR_ALIGNMENT_ROUNDUP ||
>  		(dmix->hw_ptr_alignment == SND_PCM_HW_PTR_ALIGNMENT_AUTO &&
> -		pcm->buffer_size <= pcm->period_size * 2))
> +		pcm->buffer_size < pcm->period_size * 2))
>  		dmix->slave_appl_ptr =
>  			((dmix->slave_appl_ptr + dmix->slave_period_size - 1) /
>  			dmix->slave_period_size) * dmix->slave_period_size;
> --
> 2.7.4
> 
> _______________________________________________
> Alsa-devel mailing list
> Alsa-devel@alsa-project.org
> https://mailman.alsa-project.org/mailman/listinfo/alsa-devel
> 
_______________________________________________
Alsa-devel mailing list
Alsa-devel@alsa-project.org
https://mailman.alsa-project.org/mailman/listinfo/alsa-devel
