Return-Path: <alsa-devel-bounces@alsa-project.org>
X-Original-To: lists+alsa-devel@lfdr.de
Delivered-To: lists+alsa-devel@lfdr.de
Received: from alsa0.perex.cz (alsa0.perex.cz [77.48.224.243])
	by mail.lfdr.de (Postfix) with ESMTPS id EE9CB32722A
	for <lists+alsa-devel@lfdr.de>; Sun, 28 Feb 2021 13:07:02 +0100 (CET)
Received: from alsa1.perex.cz (alsa1.perex.cz [207.180.221.201])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by alsa0.perex.cz (Postfix) with ESMTPS id 6F726166A;
	Sun, 28 Feb 2021 13:06:12 +0100 (CET)
DKIM-Filter: OpenDKIM Filter v2.11.0 alsa0.perex.cz 6F726166A
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=alsa-project.org;
	s=default; t=1614514022;
	bh=1y9wCIxgcxD3wjz0RDJo5WIzI/SkcqnAgsxqrBOgqiw=;
	h=Date:From:To:Subject:In-Reply-To:References:Cc:List-Id:
	 List-Unsubscribe:List-Archive:List-Post:List-Help:List-Subscribe:
	 From;
	b=kEIldWNmCphxtSRNyace0yuO5h6HherFaXbOpm7a8b6MyBGVCfxBsHB07zUB9y/WJ
	 mSHKwnBHMrvDJnpccp80FaaYOiJsIG63NLKoBlX7434M9pDSp3G26bKobt97sZw4EM
	 S5dZgHprp5uA1qsqMYZrvqUV5bmprecBHXKDUckE=
Received: from alsa1.perex.cz (localhost.localdomain [127.0.0.1])
	by alsa1.perex.cz (Postfix) with ESMTP id CAF82F80227;
	Sun, 28 Feb 2021 13:05:31 +0100 (CET)
X-Original-To: alsa-devel@alsa-project.org
Delivered-To: alsa-devel@alsa-project.org
Received: by alsa1.perex.cz (Postfix, from userid 50401)
 id 270CBF8025B; Sun, 28 Feb 2021 13:05:30 +0100 (CET)
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on alsa1.perex.cz
X-Spam-Level: *
X-Spam-Status: No, score=1.0 required=5.0 tests=PRX_BODY_30,SPF_HELO_NONE,
 SPF_NONE,URIBL_BLOCKED autolearn=disabled version=3.4.0
Received: from mx2.suse.de (mx2.suse.de [195.135.220.15])
 (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
 (No client certificate requested)
 by alsa1.perex.cz (Postfix) with ESMTPS id 0CE0FF8010A
 for <alsa-devel@alsa-project.org>; Sun, 28 Feb 2021 13:05:23 +0100 (CET)
DKIM-Filter: OpenDKIM Filter v2.11.0 alsa1.perex.cz 0CE0FF8010A
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay2.suse.de (unknown [195.135.221.27])
 by mx2.suse.de (Postfix) with ESMTP id 25B02AB7D;
 Sun, 28 Feb 2021 12:05:23 +0000 (UTC)
Date: Sun, 28 Feb 2021 13:05:22 +0100
Message-ID: <s5hpn0kjt31.wl-tiwai@suse.de>
From: Takashi Iwai <tiwai@suse.de>
To: Anton Yakovlev <anton.yakovlev@opensynergy.com>
Subject: Re: [PATCH v6 9/9] ALSA: virtio: introduce device suspend/resume
 support
In-Reply-To: <20210227085956.1700687-10-anton.yakovlev@opensynergy.com>
References: <20210227085956.1700687-1-anton.yakovlev@opensynergy.com>
 <20210227085956.1700687-10-anton.yakovlev@opensynergy.com>
User-Agent: Wanderlust/2.15.9 (Almost Unreal) SEMI/1.14.6 (Maruoka)
 FLIM/1.14.9 (=?UTF-8?B?R29qxY0=?=) APEL/10.8 Emacs/25.3
 (x86_64-suse-linux-gnu) MULE/6.0 (HANACHIRUSATO)
MIME-Version: 1.0 (generated by SEMI 1.14.6 - "Maruoka")
Content-Type: text/plain; charset=US-ASCII
Cc: virtio-dev@lists.oasis-open.org, alsa-devel@alsa-project.org,
 "Michael S. Tsirkin" <mst@redhat.com>, linux-kernel@vger.kernel.org,
 Takashi Iwai <tiwai@suse.com>, virtualization@lists.linux-foundation.org
X-BeenThere: alsa-devel@alsa-project.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: "Alsa-devel mailing list for ALSA developers -
 http://www.alsa-project.org" <alsa-devel.alsa-project.org>
List-Unsubscribe: <https://mailman.alsa-project.org/mailman/options/alsa-devel>, 
 <mailto:alsa-devel-request@alsa-project.org?subject=unsubscribe>
List-Archive: <http://mailman.alsa-project.org/pipermail/alsa-devel/>
List-Post: <mailto:alsa-devel@alsa-project.org>
List-Help: <mailto:alsa-devel-request@alsa-project.org?subject=help>
List-Subscribe: <https://mailman.alsa-project.org/mailman/listinfo/alsa-devel>, 
 <mailto:alsa-devel-request@alsa-project.org?subject=subscribe>
Errors-To: alsa-devel-bounces@alsa-project.org
Sender: "Alsa-devel" <alsa-devel-bounces@alsa-project.org>

On Sat, 27 Feb 2021 09:59:56 +0100,
Anton Yakovlev wrote:
> 
> All running PCM substreams are stopped on device suspend and restarted
> on device resume.
> 
> Signed-off-by: Anton Yakovlev <anton.yakovlev@opensynergy.com>
> ---
>  sound/virtio/virtio_card.c    | 56 +++++++++++++++++++++++++++++++++++
>  sound/virtio/virtio_pcm.c     |  1 +
>  sound/virtio/virtio_pcm_ops.c | 41 ++++++++++++++++++++-----
>  3 files changed, 90 insertions(+), 8 deletions(-)
> 
> diff --git a/sound/virtio/virtio_card.c b/sound/virtio/virtio_card.c
> index 59455a562018..c7ae8801991d 100644
> --- a/sound/virtio/virtio_card.c
> +++ b/sound/virtio/virtio_card.c
> @@ -323,6 +323,58 @@ static void virtsnd_remove(struct virtio_device *vdev)
>  	kfree(snd->event_msgs);
>  }
>  
> +#ifdef CONFIG_PM_SLEEP
> +/**
> + * virtsnd_freeze() - Suspend device.
> + * @vdev: VirtIO parent device.
> + *
> + * Context: Any context.
> + * Return: 0 on success, -errno on failure.
> + */
> +static int virtsnd_freeze(struct virtio_device *vdev)
> +{
> +	struct virtio_snd *snd = vdev->priv;
> +
> +	virtsnd_ctl_msg_cancel_all(snd);
> +
> +	vdev->config->del_vqs(vdev);
> +	vdev->config->reset(vdev);
> +
> +	kfree(snd->event_msgs);
> +
> +	/*
> +	 * If the virtsnd_restore() fails before re-allocating events, then we
> +	 * get a dangling pointer here.
> +	 */
> +	snd->event_msgs = NULL;
> +
> +	return 0;

I suppose some cancel of inflight works is needed?
Ditto for the device removal, too.

> --- a/sound/virtio/virtio_pcm.c
> +++ b/sound/virtio/virtio_pcm.c
> @@ -109,6 +109,7 @@ static int virtsnd_pcm_build_hw(struct virtio_pcm_substream *vss,
>  		SNDRV_PCM_INFO_BATCH |
>  		SNDRV_PCM_INFO_BLOCK_TRANSFER |
>  		SNDRV_PCM_INFO_INTERLEAVED |
> +		SNDRV_PCM_INFO_RESUME |
>  		SNDRV_PCM_INFO_PAUSE;

Actually you don't need to set SNDRV_PCM_INFO_RESUME.
This flag means that the driver supports the full resume procedure,
which isn't often the case; with this, the driver is supposed to
resume the stream exactly from the suspended position.

Most drivers don't set this but implement only the suspend-stop
action.  Then the application (or the sound backend) will re-setup the
stream and restart accordingly.

> @@ -309,6 +318,21 @@ static int virtsnd_pcm_trigger(struct snd_pcm_substream *substream, int command)
>  	int rc;
>  
>  	switch (command) {
> +	case SNDRV_PCM_TRIGGER_RESUME: {
> +		/*
> +		 * We restart the substream by executing the standard command
> +		 * sequence.
> +		 */
> +		rc = virtsnd_pcm_hw_params(substream, NULL);
> +		if (rc)
> +			return rc;
> +
> +		rc = virtsnd_pcm_prepare(substream);
> +		if (rc)
> +			return rc;

And this won't work at all unless nonatomic PCM ops.


thanks,

Takashi
