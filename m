Return-Path: <alsa-devel-bounces@alsa-project.org>
X-Original-To: lists+alsa-devel@lfdr.de
Delivered-To: lists+alsa-devel@lfdr.de
Received: from alsa0.perex.cz (alsa0.perex.cz [77.48.224.243])
	by mail.lfdr.de (Postfix) with ESMTPS id 3A4CA715BD
	for <lists+alsa-devel@lfdr.de>; Tue, 23 Jul 2019 12:11:03 +0200 (CEST)
Received: from alsa1.perex.cz (alsa1.perex.cz [207.180.221.201])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by alsa0.perex.cz (Postfix) with ESMTPS id 6BB8717B1;
	Tue, 23 Jul 2019 12:10:12 +0200 (CEST)
DKIM-Filter: OpenDKIM Filter v2.11.0 alsa0.perex.cz 6BB8717B1
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=alsa-project.org;
	s=default; t=1563876662;
	bh=P35dSr7JxlvEE7Akzeztzaekh4D/+PaHpjbNoyzRli0=;
	h=Date:From:To:In-Reply-To:References:Cc:Subject:List-Id:
	 List-Unsubscribe:List-Archive:List-Post:List-Help:List-Subscribe:
	 From;
	b=eQfxA/6g/bUinGzpOZPB3XI2UZ5pLa71SA0X1EYRuSB/s8pTsi5O/AmWg9jiQPtgH
	 nyClpwvgOC4+WKjiPlmuxtPD1MHSdnAShe6tfd+Ol957TMpYCRUIZiWjELkBzkE6WV
	 3AWj1E56IIzAwBG6mTxTg5PXIpY/WftEqEBG0O7w=
Received: from alsa1.perex.cz (localhost.localdomain [127.0.0.1])
	by alsa1.perex.cz (Postfix) with ESMTP id D0012F8045F;
	Tue, 23 Jul 2019 12:08:53 +0200 (CEST)
X-Original-To: alsa-devel@alsa-project.org
Delivered-To: alsa-devel@alsa-project.org
Received: by alsa1.perex.cz (Postfix, from userid 50401)
 id 0D250F8044C; Tue, 23 Jul 2019 12:08:45 +0200 (CEST)
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on alsa1.perex.cz
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=SPF_HELO_NONE,SPF_PASS,
 URIBL_BLOCKED autolearn=disabled version=3.4.0
Received: from mx1.suse.de (mx2.suse.de [195.135.220.15])
 (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
 (No client certificate requested)
 by alsa1.perex.cz (Postfix) with ESMTPS id 06DA2F8044A
 for <alsa-devel@alsa-project.org>; Tue, 23 Jul 2019 12:08:42 +0200 (CEST)
DKIM-Filter: OpenDKIM Filter v2.11.0 alsa1.perex.cz 06DA2F8044A
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay2.suse.de (unknown [195.135.220.254])
 by mx1.suse.de (Postfix) with ESMTP id 93229AF79;
 Tue, 23 Jul 2019 10:08:41 +0000 (UTC)
Date: Tue, 23 Jul 2019 12:08:41 +0200
Message-ID: <s5h36ix6p1y.wl-tiwai@suse.de>
From: Takashi Iwai <tiwai@suse.de>
To: "Charles Keepax" <ckeepax@opensource.cirrus.com>
In-Reply-To: <20190722092436.651-2-ckeepax@opensource.cirrus.com>
References: <20190722092436.651-1-ckeepax@opensource.cirrus.com>
 <20190722092436.651-2-ckeepax@opensource.cirrus.com>
User-Agent: Wanderlust/2.15.9 (Almost Unreal) SEMI/1.14.6 (Maruoka)
 FLIM/1.14.9 (=?UTF-8?B?R29qxY0=?=) APEL/10.8 Emacs/25.3
 (x86_64-suse-linux-gnu) MULE/6.0 (HANACHIRUSATO)
MIME-Version: 1.0 (generated by SEMI 1.14.6 - "Maruoka")
Cc: patches@opensource.cirrus.com, vkoul@kernel.org,
 alsa-devel@alsa-project.org
Subject: Re: [alsa-devel] [PATCH v2 2/4] ALSA: compress: Prevent bypasses of
	set_params
X-BeenThere: alsa-devel@alsa-project.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: "Alsa-devel mailing list for ALSA developers -
 http://www.alsa-project.org" <alsa-devel.alsa-project.org>
List-Unsubscribe: <https://mailman.alsa-project.org/mailman/options/alsa-devel>, 
 <mailto:alsa-devel-request@alsa-project.org?subject=unsubscribe>
List-Archive: <http://mailman.alsa-project.org/pipermail/alsa-devel/>
List-Post: <mailto:alsa-devel@alsa-project.org>
List-Help: <mailto:alsa-devel-request@alsa-project.org?subject=help>
List-Subscribe: <https://mailman.alsa-project.org/mailman/listinfo/alsa-devel>, 
 <mailto:alsa-devel-request@alsa-project.org?subject=subscribe>
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: 7bit
Errors-To: alsa-devel-bounces@alsa-project.org
Sender: "Alsa-devel" <alsa-devel-bounces@alsa-project.org>

On Mon, 22 Jul 2019 11:24:34 +0200,
Charles Keepax wrote:
> 
> Currently, whilst in SNDRV_PCM_STATE_OPEN it is possible to call
> snd_compr_stop, snd_compr_drain and snd_compr_partial_drain, which
> allow a transition to SNDRV_PCM_STATE_SETUP. The stream should
> only be able to move to the setup state once it has received a
> SNDRV_COMPRESS_SET_PARAMS ioctl. Fix this issue by not allowing
> those ioctls whilst in the open state.
> 
> Signed-off-by: Charles Keepax <ckeepax@opensource.cirrus.com>

Applied, thanks.


Takashi

> ---
> 
> No changes since v1.
> 
> Thanks,
> Charles
> 
>  sound/core/compress_offload.c | 30 ++++++++++++++++++++++++------
>  1 file changed, 24 insertions(+), 6 deletions(-)
> 
> diff --git a/sound/core/compress_offload.c b/sound/core/compress_offload.c
> index d79aee6b9edd2..40dae723c59db 100644
> --- a/sound/core/compress_offload.c
> +++ b/sound/core/compress_offload.c
> @@ -711,9 +711,15 @@ static int snd_compr_stop(struct snd_compr_stream *stream)
>  {
>  	int retval;
>  
> -	if (stream->runtime->state == SNDRV_PCM_STATE_PREPARED ||
> -			stream->runtime->state == SNDRV_PCM_STATE_SETUP)
> +	switch (stream->runtime->state) {
> +	case SNDRV_PCM_STATE_OPEN:
> +	case SNDRV_PCM_STATE_SETUP:
> +	case SNDRV_PCM_STATE_PREPARED:
>  		return -EPERM;
> +	default:
> +		break;
> +	}
> +
>  	retval = stream->ops->trigger(stream, SNDRV_PCM_TRIGGER_STOP);
>  	if (!retval) {
>  		snd_compr_drain_notify(stream);
> @@ -801,9 +807,14 @@ static int snd_compr_drain(struct snd_compr_stream *stream)
>  {
>  	int retval;
>  
> -	if (stream->runtime->state == SNDRV_PCM_STATE_PREPARED ||
> -			stream->runtime->state == SNDRV_PCM_STATE_SETUP)
> +	switch (stream->runtime->state) {
> +	case SNDRV_PCM_STATE_OPEN:
> +	case SNDRV_PCM_STATE_SETUP:
> +	case SNDRV_PCM_STATE_PREPARED:
>  		return -EPERM;
> +	default:
> +		break;
> +	}
>  
>  	retval = stream->ops->trigger(stream, SND_COMPR_TRIGGER_DRAIN);
>  	if (retval) {
> @@ -840,9 +851,16 @@ static int snd_compr_next_track(struct snd_compr_stream *stream)
>  static int snd_compr_partial_drain(struct snd_compr_stream *stream)
>  {
>  	int retval;
> -	if (stream->runtime->state == SNDRV_PCM_STATE_PREPARED ||
> -			stream->runtime->state == SNDRV_PCM_STATE_SETUP)
> +
> +	switch (stream->runtime->state) {
> +	case SNDRV_PCM_STATE_OPEN:
> +	case SNDRV_PCM_STATE_SETUP:
> +	case SNDRV_PCM_STATE_PREPARED:
>  		return -EPERM;
> +	default:
> +		break;
> +	}
> +
>  	/* stream can be drained only when next track has been signalled */
>  	if (stream->next_track == false)
>  		return -EPERM;
> -- 
> 2.11.0
> 
> 
_______________________________________________
Alsa-devel mailing list
Alsa-devel@alsa-project.org
https://mailman.alsa-project.org/mailman/listinfo/alsa-devel
