Return-Path: <alsa-devel-bounces@alsa-project.org>
X-Original-To: lists+alsa-devel@lfdr.de
Delivered-To: lists+alsa-devel@lfdr.de
Received: from alsa0.perex.cz (alsa0.perex.cz [77.48.224.243])
	by mail.lfdr.de (Postfix) with ESMTPS id 1DB693006D5
	for <lists+alsa-devel@lfdr.de>; Fri, 22 Jan 2021 16:15:05 +0100 (CET)
Received: from alsa1.perex.cz (alsa1.perex.cz [207.180.221.201])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by alsa0.perex.cz (Postfix) with ESMTPS id A85B71F24;
	Fri, 22 Jan 2021 16:14:14 +0100 (CET)
DKIM-Filter: OpenDKIM Filter v2.11.0 alsa0.perex.cz A85B71F24
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=alsa-project.org;
	s=default; t=1611328504;
	bh=cS4E6IF1cExmQT4Hqtk1ZwaYX59y9MCLubQHgPscSw0=;
	h=Date:From:To:Subject:In-Reply-To:References:Cc:List-Id:
	 List-Unsubscribe:List-Archive:List-Post:List-Help:List-Subscribe:
	 From;
	b=qIBvKp2IEjtxPxKca2LFodTp6kwodchdxpMg6rdE4l/o8x0ZeafaHDonQTDI+CUj4
	 jWd0cZSYc/E1WqFQB7FdaIw5otB01rVIXhanLvxkI3B1iJ5T6bX2sPaQQ3lycuaExU
	 0+GFkPOhhC+5anwtFArLRxwrYjsbjPcuhE6YqDrA=
Received: from alsa1.perex.cz (localhost.localdomain [127.0.0.1])
	by alsa1.perex.cz (Postfix) with ESMTP id F1739F8015B;
	Fri, 22 Jan 2021 16:13:31 +0100 (CET)
X-Original-To: alsa-devel@alsa-project.org
Delivered-To: alsa-devel@alsa-project.org
Received: by alsa1.perex.cz (Postfix, from userid 50401)
 id 9B9E5F8016E; Fri, 22 Jan 2021 16:13:30 +0100 (CET)
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on alsa1.perex.cz
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=SPF_HELO_NONE,SPF_NONE
 autolearn=disabled version=3.4.0
Received: from mx2.suse.de (mx2.suse.de [195.135.220.15])
 (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
 (No client certificate requested)
 by alsa1.perex.cz (Postfix) with ESMTPS id 0C515F8015B
 for <alsa-devel@alsa-project.org>; Fri, 22 Jan 2021 16:13:27 +0100 (CET)
DKIM-Filter: OpenDKIM Filter v2.11.0 alsa1.perex.cz 0C515F8015B
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay2.suse.de (unknown [195.135.221.27])
 by mx2.suse.de (Postfix) with ESMTP id DE97AAD17;
 Fri, 22 Jan 2021 15:13:26 +0000 (UTC)
Date: Fri, 22 Jan 2021 16:13:26 +0100
Message-ID: <s5hv9bp6m3t.wl-tiwai@suse.de>
From: Takashi Iwai <tiwai@suse.de>
To: Hui Wang <hui.wang@canonical.com>
Subject: Re: [RFC][PATCH v6 1/1] alsa: jack: implement software jack injection
 via debugfs
In-Reply-To: <20210122141456.12460-2-hui.wang@canonical.com>
References: <20210122141456.12460-1-hui.wang@canonical.com>
 <20210122141456.12460-2-hui.wang@canonical.com>
User-Agent: Wanderlust/2.15.9 (Almost Unreal) SEMI/1.14.6 (Maruoka)
 FLIM/1.14.9 (=?UTF-8?B?R29qxY0=?=) APEL/10.8 Emacs/25.3
 (x86_64-suse-linux-gnu) MULE/6.0 (HANACHIRUSATO)
MIME-Version: 1.0 (generated by SEMI 1.14.6 - "Maruoka")
Content-Type: text/plain; charset=US-ASCII
Cc: alsa-devel@alsa-project.org, kai.vehmanen@linux.intel.com
X-BeenThere: alsa-devel@alsa-project.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: "Alsa-devel mailing list for ALSA developers -
 http://www.alsa-project.org" <alsa-devel.alsa-project.org>
List-Unsubscribe: <https://mailman.alsa-project.org/mailman/options/alsa-devel>, 
 <mailto:alsa-devel-request@alsa-project.org?subject=unsubscribe>
List-Archive: <http://mailman.alsa-project.org/pipermail/alsa-devel/>
List-Post: <mailto:alsa-devel@alsa-project.org>
List-Help: <mailto:alsa-devel-request@alsa-project.org?subject=help>
List-Subscribe: <https://mailman.alsa-project.org/mailman/listinfo/alsa-devel>, 
 <mailto:alsa-devel-request@alsa-project.org?subject=subscribe>
Errors-To: alsa-devel-bounces@alsa-project.org
Sender: "Alsa-devel" <alsa-devel-bounces@alsa-project.org>

On Fri, 22 Jan 2021 15:14:56 +0100,
Hui Wang wrote:
> 
> --- /dev/null
> +++ b/Documentation/sound/designs/jack-injection.rst
> @@ -0,0 +1,124 @@
(snip)
> +Explanation for the debugfs nodes:
> +::
> +
> + - kctl_id, read-only, get jack_kctl->kctl's id
> +   sound/card1/Headphone_Jack# cat kctl_id
> +   Headphone Jack
> +
> + - mask_bits, read-only, get jack_kctl's supported events mask_bits
> +   sound/card1/Headphone_Jack# cat mask_bits
> +   0x0001 HEADPHONE(0x0001)
> +
> + - status, read-only, get jack_kctl's current status
> +   headphone unplugged:
> +   sound/card1/Headphone_Jack# cat status
> +   Unplugged
> +   headphone plugged:
> +   sound/card1/Headphone_Jack# cat status
> +   Plugged
> +
> + - type, read-only, get snd_jack's supported events type (all
> +   supported events on the physical audio jack)
> +   sound/card1/Headphone_Jack# cat type
> +   0x7803 HEADPHONE(0x0001) MICROPHONE(0x0002) BTN_3(0x0800) BTN_2(0x1000) BTN_1(0x2000) BTN_0(0x4000)
> +
> + - sw_inject_enable, read-write, enable or disable injection
> +   injection disabled:
> +   sound/card1/Headphone_Jack# cat sw_inject_enable
> +   Jack: Headphone Jack		Inject Enabled: 0
> +   injection enabled:
> +   sound/card1/Headphone_Jack# cat sw_inject_enable
> +   Jack: Headphone Jack		Inject Enabled: 1
> +   to enable jack injection:
> +   sound/card1/Headphone_Jack# echo 1 > sw_inject_enable
> +   to disable jack injection:
> +   sound/card1/Headphone_Jack# echo 0 > sw_inject_enable
> +
> + - jackin_inject, write-only, inject plugin or plugout
> +   to inject plugin:
> +   sound/card1/Headphone_Jack# echo 1 > jackin_inject
> +   to inject plugout:
> +   sound/card1/Headphone_Jack# echo 0 > jackin_inject

The lists could be better in a normal format, while only the examples
with cat and echo should be in verbose format.

> diff --git a/sound/core/Kconfig b/sound/core/Kconfig
> index d4554f376160..a9189f58dc56 100644
> --- a/sound/core/Kconfig
> +++ b/sound/core/Kconfig
> @@ -38,6 +38,15 @@ config SND_JACK_INPUT_DEV
>  	depends on SND_JACK
>  	default y if INPUT=y || INPUT=SND
>  
> +config SND_JACK_INJECTION_DEBUG
> +	bool "Sound jack injection interface via debugfs"
> +	depends on SND_JACK && DEBUG_FS

Also, could depend on SND_DEBUG for consistency.

> diff --git a/sound/core/init.c b/sound/core/init.c
> index 75aec71c48a8..e7f7cfe1143b 100644
> --- a/sound/core/init.c
> +++ b/sound/core/init.c
> @@ -13,6 +13,7 @@
>  #include <linux/time.h>
>  #include <linux/ctype.h>
>  #include <linux/pm.h>
> +#include <linux/debugfs.h>
>  #include <linux/completion.h>
>  
>  #include <sound/core.h>
> @@ -161,6 +162,7 @@ int snd_card_new(struct device *parent, int idx, const char *xid,
>  {
>  	struct snd_card *card;
>  	int err;
> +	char name[8];
>  
>  	if (snd_BUG_ON(!card_ret))
>  		return -EINVAL;
> @@ -244,6 +246,10 @@ int snd_card_new(struct device *parent, int idx, const char *xid,
>  		dev_err(parent, "unable to create card info\n");
>  		goto __error_ctl;
>  	}
> +
> +	sprintf(name, "card%d", idx);
> +	card->debugfs_root = debugfs_create_dir(name, sound_debugfs_root);

It's still an open question whether we want to create the debugfs
always.  But I guess it's OK, we might want to add more stuff to
debugfs later.  Or, it makes sense to create only if
CONFIG_SND_DEBUG=y.


> +static ssize_t sw_inject_enable_write(struct file *file,
> +				      const char __user *from, size_t count, loff_t *ppos)
> +{
> +	struct snd_jack_kctl *jack_kctl = file->private_data;
> +	int ret, err;
> +	unsigned long enable;
> +	char buf[8] = { 0 };
> +
> +	if (count >= 8)
> +		return -EINVAL;
> +
> +	ret = simple_write_to_buffer(buf, count, ppos, from, count);

The simple_write_to_buffer() doesn't terminate the string by itself,
hence you need to make sure the string termination before kstrtoul()
call. e.g.  buf[sizeof(buf)-1] = 0;

And maybe it's easier to make a helper function to that, since it's
called in multiple places.

> +static int parse_mask_bits(unsigned int mask_bits, char *s)
> +{
> +	char buf[256];
> +	int len, i;
> +
> +	len = scnprintf(buf, sizeof(buf), "0x%04x", mask_bits);
> +
> +	for (i = 0; i < 16; i++)
> +		if (mask_bits & (1 << i))
> +			len += scnprintf(buf + strlen(buf), sizeof(buf) - strlen(buf),
> +					 " %s", jack_events_name[i]);
> +
> +	len += scnprintf(buf + strlen(buf), sizeof(buf) - strlen(buf), "\n");
> +
> +	strcpy(s, buf);

You need to intermediate buffer if you do a full copy here...
Just perform the string ops on s with a certain limit.
Also, you can use strncat() or strlcat() for simplicity.


thanks,

Takashi
