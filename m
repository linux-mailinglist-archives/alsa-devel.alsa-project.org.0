Return-Path: <alsa-devel-bounces@alsa-project.org>
X-Original-To: lists+alsa-devel@lfdr.de
Delivered-To: lists+alsa-devel@lfdr.de
Received: from alsa0.perex.cz (alsa0.perex.cz [77.48.224.243])
	by mail.lfdr.de (Postfix) with ESMTPS id B8D891CCF3B
	for <lists+alsa-devel@lfdr.de>; Mon, 11 May 2020 03:43:46 +0200 (CEST)
Received: from alsa1.perex.cz (alsa1.perex.cz [207.180.221.201])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by alsa0.perex.cz (Postfix) with ESMTPS id 6C2E015F2;
	Mon, 11 May 2020 03:42:56 +0200 (CEST)
DKIM-Filter: OpenDKIM Filter v2.11.0 alsa0.perex.cz 6C2E015F2
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=alsa-project.org;
	s=default; t=1589161426;
	bh=Ypzg2JgbjdAUuJyifqX8klIckdBTF5skTXWOqBx4ve4=;
	h=Date:From:To:Subject:In-Reply-To:References:Cc:List-Id:
	 List-Unsubscribe:List-Archive:List-Post:List-Help:List-Subscribe:
	 From;
	b=DOSyUhadXWqnRRPVxk7+Hc1AwL6Hyx9pm82emqvu+3+hWpn1vta/ZDS02LV90ey4T
	 UptIgLYB0jGTELrGWjm5nHjWi+gT/hXrsL09aPgQEiNmqUxr3vTytNHD6vNdwEUjwL
	 Q6rd7x0KySDOwkMU5X2+wZRAOFk0gOaO/nhhoyyI=
Received: from alsa1.perex.cz (localhost.localdomain [127.0.0.1])
	by alsa1.perex.cz (Postfix) with ESMTP id 72E31F800E3;
	Mon, 11 May 2020 03:42:05 +0200 (CEST)
X-Original-To: alsa-devel@alsa-project.org
Delivered-To: alsa-devel@alsa-project.org
Received: by alsa1.perex.cz (Postfix, from userid 50401)
 id A3E75F80157; Mon, 11 May 2020 03:42:02 +0200 (CEST)
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on alsa1.perex.cz
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=SPF_HELO_NONE,SPF_PASS,
 URIBL_BLOCKED autolearn=disabled version=3.4.0
Received: from relmlie5.idc.renesas.com (relmlor1.renesas.com
 [210.160.252.171])
 by alsa1.perex.cz (Postfix) with ESMTP id DCB11F800E3
 for <alsa-devel@alsa-project.org>; Mon, 11 May 2020 03:41:54 +0200 (CEST)
DKIM-Filter: OpenDKIM Filter v2.11.0 alsa1.perex.cz DCB11F800E3
Date: 11 May 2020 10:41:53 +0900
X-IronPort-AV: E=Sophos;i="5.73,378,1583161200"; d="scan'208";a="46716152"
Received: from unknown (HELO relmlir5.idc.renesas.com) ([10.200.68.151])
 by relmlie5.idc.renesas.com with ESMTP; 11 May 2020 10:41:53 +0900
Received: from mercury.renesas.com (unknown [10.166.252.133])
 by relmlir5.idc.renesas.com (Postfix) with ESMTP id 3586E40083D5;
 Mon, 11 May 2020 10:41:53 +0900 (JST)
Message-ID: <878shz9rj2.wl-kuninori.morimoto.gx@renesas.com>
From: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
To: Ranjani Sridharan <ranjani.sridharan@linux.intel.com>
Subject: Re: [PATCH] ASoC: core: Make sure component driver names are unique
In-Reply-To: <20200427193306.31198-1-ranjani.sridharan@linux.intel.com>
References: <20200427193306.31198-1-ranjani.sridharan@linux.intel.com>
User-Agent: Wanderlust/2.15.9 Emacs/25.2 Mule/6.0
MIME-Version: 1.0 (generated by SEMI-EPG 1.14.7 - "Harue")
Content-Type: text/plain; charset=US-ASCII
Cc: alsa-devel@alsa-project.org, broonie@kernel.org
X-BeenThere: alsa-devel@alsa-project.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: "Alsa-devel mailing list for ALSA developers -
 http://www.alsa-project.org" <alsa-devel.alsa-project.org>
List-Unsubscribe: <https://mailman.alsa-project.org/mailman/options/alsa-devel>, 
 <mailto:alsa-devel-request@alsa-project.org?subject=unsubscribe>
List-Archive: <http://mailman.alsa-project.org/pipermail/alsa-devel/>
List-Post: <mailto:alsa-devel@alsa-project.org>
List-Help: <mailto:alsa-devel-request@alsa-project.org?subject=help>
List-Subscribe: <https://mailman.alsa-project.org/mailman/listinfo/alsa-devel>, 
 <mailto:alsa-devel-request@alsa-project.org?subject=subscribe>
Errors-To: alsa-devel-bounces@alsa-project.org
Sender: "Alsa-devel" <alsa-devel-bounces@alsa-project.org>


Hi Ranjani

> When registering a component, make sure that the driver names
> are unique. This will ensure that the snd_soc_rtdcom_lookup()
> function returns the right component based on the name.
> 
> Signed-off-by: Ranjani Sridharan <ranjani.sridharan@linux.intel.com>
> ---
(snip)
> +static bool
> +snd_soc_component_driver_name_is_unique(const struct snd_soc_component_driver *component_driver)
> +{
> +	struct snd_soc_component *component;
> +
> +	mutex_lock(&client_mutex);
> +	for_each_component(component)
> +		if (!strcmp(component->driver->name, component_driver->name)) {
> +			mutex_unlock(&client_mutex);
> +			return false;
> +		}
> +
> +	mutex_unlock(&client_mutex);
> +	return true;
> +}

I think it will be more readable if it doesn't have
multiple mutex_unlock().

	{
		int ret = true;

		mutex_lock();
		for_each_component()
			if (...) {
				...
				ret = false;
			}
		mutex_unlock();
		return ret;
	}

Thank you for your help !!

Best regards
---
Kuninori Morimoto
