Return-Path: <alsa-devel-bounces@alsa-project.org>
X-Original-To: lists+alsa-devel@lfdr.de
Delivered-To: lists+alsa-devel@lfdr.de
Received: from alsa0.perex.cz (alsa0.perex.cz [77.48.224.243])
	by mail.lfdr.de (Postfix) with ESMTPS id E54668CC11
	for <lists+alsa-devel@lfdr.de>; Wed, 14 Aug 2019 08:48:12 +0200 (CEST)
Received: from alsa1.perex.cz (alsa1.perex.cz [207.180.221.201])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by alsa0.perex.cz (Postfix) with ESMTPS id 5657E1668;
	Wed, 14 Aug 2019 08:47:22 +0200 (CEST)
DKIM-Filter: OpenDKIM Filter v2.11.0 alsa0.perex.cz 5657E1668
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=alsa-project.org;
	s=default; t=1565765292;
	bh=Gd2QfVUxDS5SWGEcTuQcl0kkd7bgrP1H6UL9Y0M0+uA=;
	h=Date:From:To:In-Reply-To:References:Cc:Subject:List-Id:
	 List-Unsubscribe:List-Archive:List-Post:List-Help:List-Subscribe:
	 From;
	b=dL6AEIsVfu76K4DIutt4SSA/rvrfEhUgbgPcz5wpHmfzsqgSfWDql6u0bF1IaS1X6
	 VR3qofJoAMGpKiTTRgM39488DTLRrgffzqg7knO3fsPP1Go6IxLIUKET+SmBVTiFKk
	 gTCTG9FQ5Wy71u01PSwlWoYeDhQ+ajQ5F9L+WHC0=
Received: from alsa1.perex.cz (localhost.localdomain [127.0.0.1])
	by alsa1.perex.cz (Postfix) with ESMTP id 9FB55F801DF;
	Wed, 14 Aug 2019 08:46:28 +0200 (CEST)
X-Original-To: alsa-devel@alsa-project.org
Delivered-To: alsa-devel@alsa-project.org
Received: by alsa1.perex.cz (Postfix, from userid 50401)
 id 3F3C6F80214; Wed, 14 Aug 2019 08:46:27 +0200 (CEST)
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on alsa1.perex.cz
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=SPF_HELO_NONE,SPF_PASS,
 URIBL_BLOCKED autolearn=disabled version=3.4.0
Received: from mx1.suse.de (mx2.suse.de [195.135.220.15])
 (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
 (No client certificate requested)
 by alsa1.perex.cz (Postfix) with ESMTPS id 21D1BF801DF
 for <alsa-devel@alsa-project.org>; Wed, 14 Aug 2019 08:46:23 +0200 (CEST)
DKIM-Filter: OpenDKIM Filter v2.11.0 alsa1.perex.cz 21D1BF801DF
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay2.suse.de (unknown [195.135.220.254])
 by mx1.suse.de (Postfix) with ESMTP id 148D5AF9C;
 Wed, 14 Aug 2019 06:46:23 +0000 (UTC)
Date: Wed, 14 Aug 2019 08:46:22 +0200
Message-ID: <s5hv9v0b5xd.wl-tiwai@suse.de>
From: Takashi Iwai <tiwai@suse.de>
To: Dennis Mungai <dmngaie@gmail.com>
In-Reply-To: <CAKKYfmGOWD2w2Ozr8vwLTYpjdJ4bTegxWqPjhzyBtB5TVvqCzg@mail.gmail.com>
References: <CAKKYfmGOWD2w2Ozr8vwLTYpjdJ4bTegxWqPjhzyBtB5TVvqCzg@mail.gmail.com>
User-Agent: Wanderlust/2.15.9 (Almost Unreal) SEMI/1.14.6 (Maruoka)
 FLIM/1.14.9 (=?UTF-8?B?R29qxY0=?=) APEL/10.8 Emacs/25.3
 (x86_64-suse-linux-gnu) MULE/6.0 (HANACHIRUSATO)
MIME-Version: 1.0 (generated by SEMI 1.14.6 - "Maruoka")
Cc: jackpot51@gmail.com, alsa-devel@alsa-project.org
Subject: Re: [alsa-devel] [PATCH] Add support for Sabre HiFi on System76 and
	Clevo laptops
X-BeenThere: alsa-devel@alsa-project.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: "Alsa-devel mailing list for ALSA developers -
 http://www.alsa-project.org" <alsa-devel.alsa-project.org>
List-Unsubscribe: <https://mailman.alsa-project.org/mailman/options/alsa-devel>, 
 <mailto:alsa-devel-request@alsa-project.org?subject=unsubscribe>
List-Archive: <http://mailman.alsa-project.org/pipermail/alsa-devel/>
List-Post: <mailto:alsa-devel@alsa-project.org>
List-Help: <mailto:alsa-devel-request@alsa-project.org?subject=help>
List-Subscribe: <https://mailman.alsa-project.org/mailman/listinfo/alsa-devel>, 
 <mailto:alsa-devel-request@alsa-project.org?subject=subscribe>
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: 7bit
Errors-To: alsa-devel-bounces@alsa-project.org
Sender: "Alsa-devel" <alsa-devel-bounces@alsa-project.org>

On Mon, 12 Aug 2019 00:19:17 +0200,
Dennis Mungai wrote:
> 
> Hello there,
> 
> The patch attached below is based on Jeremy Soller's prior work on:
> https://patchwork.kernel.org/patch/9552671/ , copied herein.
> 
> Cleaned up to pass checkpatch.pl tests.
> 
> I can confirm that this patch does indeed fix the audio DAC init on
> the Clevo based P775TM1-R chassis with no issues.

Thanks for the patch.  But this needs more consideration,
unfortunately.


> From 9f6b7f51a8be738bb588e8d6b0f4d9fb8ac5a0ce Mon Sep 17 00:00:00 2001
> From: brainiarc7 <dmngaie@gmail.com>
> Date: Mon, 12 Aug 2019 00:43:55 +0300
> Subject: [PATCH 1/1] Fix ESS Sabre DAC init for Clevo laptops
> 
> Signed-off-by: brainiarc7 <dmngaie@gmail.com>

First off, the sign-off needs to have the real name.  It's a mandatory
legal matter.

And we need a proper description of the patch in the changelog.

About the code change:

> +static void alc898_clevo_dac_hook(struct hda_codec *codec,
> +				   struct hda_jack_callback *jack)
> +{
> +       int val;
> +
> +       // Read ESS DAC status
> +       snd_hda_codec_write(codec, codec->core.afg, 0, AC_VERB_SET_GPIO_MASK, 4);
> +       snd_hda_codec_write(codec, codec->core.afg, 0, AC_VERB_SET_GPIO_DIRECTION, 0);

Usually the mask and the direction bits are set once at initialization.

> +       val = snd_hda_codec_read(codec, codec->core.afg, 0, AC_VERB_GET_GPIO_DATA, 0);
> +       val &= 0x04;
> +
> +       if (val == 0) {
> +	       // Set VREF on headphone pin to 80%
> +	       val = snd_hda_codec_get_pin_target(codec, 0x1b);
> +	       val |= AC_PINCTL_VREF_80;
> +	       snd_hda_set_pin_ctl(codec, 0x1b, val);
> +       } else {
> +	       // Set VREF on headphone pin to HIZ
> +	       val = snd_hda_codec_get_pin_target(codec, 0x1b);
> +	       val = val & 0xfff8;
> +	       snd_hda_set_pin_ctl(codec, 0x1b, val);
> +       }

... and this whole function looks strange.  Why it's a jack detection
callback although the jack state isn't checked at all?

> +}
> +
> +static void alc898_fixup_clevo(struct hda_codec *codec,
> +				      const struct hda_fixup *fix, int action)
> +{
> +       switch (action) {
> +       case HDA_FIXUP_ACT_PRE_PROBE:
> +	       snd_hda_jack_detect_enable_callback(codec, 0x1b, alc898_clevo_dac_hook);

Is it really the jack detection on NID 0x1b?  This is no pin widget
but a mixer widget which has no such capability.

> +	       break;
> +       case HDA_FIXUP_ACT_INIT:
> +	       snd_hda_codec_read(codec, 0x1b, 0, AC_VERB_SET_PIN_WIDGET_CONTROL, 4);

Use the proper constant.

> +	       break;
> +       }
> +}
> +
>  static void alc_fixup_bass_chmap(struct hda_codec *codec,
>                  const struct hda_fixup *fix, int action);
>  
> @@ -2350,7 +2388,11 @@ static const struct hda_fixup alc882_fixups[] = {
>     [ALC887_FIXUP_BASS_CHMAP] = {
>         .type = HDA_FIXUP_FUNC,
>         .v.func = alc_fixup_bass_chmap,
> -   },
> +    }, [ALC898_FIXUP_CLEVO_SPDIF] = {
> +		.type = HDA_FIXUP_FUNC,
> +		.v.func = alc898_fixup_clevo,
> +	},
> +
>     [ALC1220_FIXUP_GB_DUAL_CODECS] = {
>         .type = HDA_FIXUP_FUNC,
>         .v.func = alc1220_fixup_gb_dual_codecs,
> @@ -2459,6 +2501,11 @@ static const struct snd_pci_quirk alc882_fixup_tbl[] = {
>     {}
>  };
>  
> +static const struct snd_pci_quirk alc898_fixup_tbl[] = {
> +    SND_PCI_QUIRK_VENDOR(0x1558, "Clevo laptop", ALC898_FIXUP_CLEVO_SPDIF),
> +    {}
> +};
> +
>  static const struct hda_model_fixup alc882_fixup_models[] = {
>     {.id = ALC882_FIXUP_ABIT_AW9D_MAX, .name = "abit-aw9d"},
>     {.id = ALC882_FIXUP_LENOVO_Y530, .name = "lenovo-y530"},
> @@ -2524,6 +2571,11 @@ static int patch_alc882(struct hda_codec *codec)
>     case 0x10ec0900:
>     case 0x10ec1220:
>         break;
> +	 case 0x10ec0898:
> +	 case 0x10ec0899:
> +		 snd_hda_pick_fixup(codec, NULL, alc898_fixup_tbl,
> +			alc882_fixups);
> +		break;

This is no-go, will break other machines.
You can put the vendor catch-all entry in the existing table, and
check the codec IDs in the fixup function instead.


thanks,

Takashi
_______________________________________________
Alsa-devel mailing list
Alsa-devel@alsa-project.org
https://mailman.alsa-project.org/mailman/listinfo/alsa-devel
