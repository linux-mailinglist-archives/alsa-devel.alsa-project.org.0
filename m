Return-Path: <alsa-devel-bounces@alsa-project.org>
X-Original-To: lists+alsa-devel@lfdr.de
Delivered-To: lists+alsa-devel@lfdr.de
Received: from alsa0.perex.cz (alsa0.perex.cz [77.48.224.243])
	by mail.lfdr.de (Postfix) with ESMTPS id 8E9651385A5
	for <lists+alsa-devel@lfdr.de>; Sun, 12 Jan 2020 09:49:38 +0100 (CET)
Received: from alsa1.perex.cz (alsa1.perex.cz [207.180.221.201])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by alsa0.perex.cz (Postfix) with ESMTPS id 32FAF169A;
	Sun, 12 Jan 2020 09:48:48 +0100 (CET)
DKIM-Filter: OpenDKIM Filter v2.11.0 alsa0.perex.cz 32FAF169A
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=alsa-project.org;
	s=default; t=1578818978;
	bh=v+CTmUBkI93/t1h7xE35MKW/RrMyrRPntn7h56marWk=;
	h=Date:From:To:In-Reply-To:References:Cc:Subject:List-Id:
	 List-Unsubscribe:List-Archive:List-Post:List-Help:List-Subscribe:
	 From;
	b=ZzGzo4ZqkR5KeZzEw1b/BlCensbB6/TG30lPhM4LQBvmXunVBarSk8ReDZH+y0gwU
	 YFKacI2+WPwRH1y+Rby0b8WY57mANo75UDytw6KblM/ImAB+qX2G85YJcYNdA4ohOp
	 Qt4aE2Btu+aoii9GK6ogJ9KjCZo8pN1tV/jjeBmo=
Received: from alsa1.perex.cz (localhost.localdomain [127.0.0.1])
	by alsa1.perex.cz (Postfix) with ESMTP id E3C58F8014E;
	Sun, 12 Jan 2020 09:47:54 +0100 (CET)
X-Original-To: alsa-devel@alsa-project.org
Delivered-To: alsa-devel@alsa-project.org
Received: by alsa1.perex.cz (Postfix, from userid 50401)
 id 13D48F8014E; Sun, 12 Jan 2020 09:47:52 +0100 (CET)
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on alsa1.perex.cz
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=RCVD_IN_MSPIKE_H3,
 RCVD_IN_MSPIKE_WL,SPF_HELO_NONE,SPF_PASS,SURBL_BLOCKED autolearn=disabled
 version=3.4.0
Received: from mx2.suse.de (mx2.suse.de [195.135.220.15])
 (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
 (No client certificate requested)
 by alsa1.perex.cz (Postfix) with ESMTPS id 3AEE6F800B9
 for <alsa-devel@alsa-project.org>; Sun, 12 Jan 2020 09:47:48 +0100 (CET)
DKIM-Filter: OpenDKIM Filter v2.11.0 alsa1.perex.cz 3AEE6F800B9
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay2.suse.de (unknown [195.135.220.254])
 by mx2.suse.de (Postfix) with ESMTP id 26C35AC3F;
 Sun, 12 Jan 2020 08:47:48 +0000 (UTC)
Date: Sun, 12 Jan 2020 09:47:47 +0100
Message-ID: <s5hy2udjc24.wl-tiwai@suse.de>
From: Takashi Iwai <tiwai@suse.de>
To: Alexander Tsoy <alexander@tsoy.me>
In-Reply-To: <20200111233446.72046-1-alexander@tsoy.me>
References: <20200111233446.72046-1-alexander@tsoy.me>
User-Agent: Wanderlust/2.15.9 (Almost Unreal) SEMI/1.14.6 (Maruoka)
 FLIM/1.14.9 (=?UTF-8?B?R29qxY0=?=) APEL/10.8 Emacs/25.3
 (x86_64-suse-linux-gnu) MULE/6.0 (HANACHIRUSATO)
MIME-Version: 1.0 (generated by SEMI 1.14.6 - "Maruoka")
Cc: alsa-devel@alsa-project.org
Subject: Re: [alsa-devel] [PATCH] ALSA: usb-audio: Add boot quirk for MOTU M
	Series
X-BeenThere: alsa-devel@alsa-project.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: "Alsa-devel mailing list for ALSA developers -
 http://www.alsa-project.org" <alsa-devel.alsa-project.org>
List-Unsubscribe: <https://mailman.alsa-project.org/mailman/options/alsa-devel>, 
 <mailto:alsa-devel-request@alsa-project.org?subject=unsubscribe>
List-Archive: <http://mailman.alsa-project.org/pipermail/alsa-devel/>
List-Post: <mailto:alsa-devel@alsa-project.org>
List-Help: <mailto:alsa-devel-request@alsa-project.org?subject=help>
List-Subscribe: <https://mailman.alsa-project.org/mailman/listinfo/alsa-devel>, 
 <mailto:alsa-devel-request@alsa-project.org?subject=subscribe>
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: 7bit
Errors-To: alsa-devel-bounces@alsa-project.org
Sender: "Alsa-devel" <alsa-devel-bounces@alsa-project.org>

On Sun, 12 Jan 2020 00:34:46 +0100,
Alexander Tsoy wrote:
> 
> Add delay to make sure that audio urbs are not sent too early.
> Otherwise the device hangs. Windows driver makes ~2s delay, so use
> about the same time delay value.
> 
> snd_usb_apply_boot_quirk() is called 3 times for my MOTU M4, which
> is an overkill. Thus a quirk that is called only once is implemented.
> 
> Also send two vendor-specific control messages before and after
> the delay. This behaviour is blindly copied from the Windows driver.
> 
> Signed-off-by: Alexander Tsoy <alexander@tsoy.me>

The code change looks OK, but I get a lot of errors from
scripts/checkpatch.pl regarding the spaces.
Could you resubmit with those fixes?


thanks,

Takashi

> ---
>  sound/usb/card.c   |  4 ++++
>  sound/usb/quirks.c | 38 ++++++++++++++++++++++++++++++++++++++
>  sound/usb/quirks.h |  5 +++++
>  3 files changed, 47 insertions(+)
> 
> diff --git a/sound/usb/card.c b/sound/usb/card.c
> index 9f743ebae615..2f582ac7cf78 100644
> --- a/sound/usb/card.c
> +++ b/sound/usb/card.c
> @@ -600,6 +600,10 @@ static int usb_audio_probe(struct usb_interface *intf,
>  		}
>  	}
>  	if (! chip) {
> +		err = snd_usb_apply_boot_quirk_once(dev, intf, quirk, id);
> +		if (err < 0)
> +			return err;
> +
>  		/* it's a fresh one.
>  		 * now look for an empty slot and create a new card instance
>  		 */
> diff --git a/sound/usb/quirks.c b/sound/usb/quirks.c
> index 82184036437b..c93c53126243 100644
> --- a/sound/usb/quirks.c
> +++ b/sound/usb/quirks.c
> @@ -1113,6 +1113,31 @@ static int snd_usb_motu_microbookii_boot_quirk(struct usb_device *dev)
>  	return err;
>  }
>  
> +static int snd_usb_motu_m_series_boot_quirk(struct usb_device *dev)
> +{
> +	int ret;
> +
> +	if (snd_usb_pipe_sanity_check(dev, usb_sndctrlpipe(dev, 0)))
> +		return -EINVAL;
> +	ret = usb_control_msg(dev, usb_sndctrlpipe(dev, 0),
> +			      1, USB_TYPE_VENDOR | USB_RECIP_DEVICE,
> +			      0x0, 0, NULL, 0, 1000);
> +
> +	if (ret < 0)
> +		return ret;
> +
> +	msleep(2000);
> +
> +	ret = usb_control_msg(dev, usb_sndctrlpipe(dev, 0),
> +			      1, USB_TYPE_VENDOR | USB_RECIP_DEVICE,
> +			      0x20, 0, NULL, 0, 1000);
> +
> +	if (ret < 0)
> +		return ret;
> +
> +	return 0;
> +}
> +
>  /*
>   * Setup quirks
>   */
> @@ -1297,6 +1322,19 @@ int snd_usb_apply_boot_quirk(struct usb_device *dev,
>  	return 0;
>  }
>  
> +int snd_usb_apply_boot_quirk_once(struct usb_device *dev,
> +			          struct usb_interface *intf,
> +			          const struct snd_usb_audio_quirk *quirk,
> +			          unsigned int id)
> +{
> +	switch (id) {
> +	case USB_ID(0x07fd, 0x0008): /* MOTU M Series */
> +		return snd_usb_motu_m_series_boot_quirk(dev);
> +	}
> +
> +	return 0;
> +}
> +
>  /*
>   * check if the device uses big-endian samples
>   */
> diff --git a/sound/usb/quirks.h b/sound/usb/quirks.h
> index a80e0ddd0736..fa83a98ad7bb 100644
> --- a/sound/usb/quirks.h
> +++ b/sound/usb/quirks.h
> @@ -20,6 +20,11 @@ int snd_usb_apply_boot_quirk(struct usb_device *dev,
>  			     const struct snd_usb_audio_quirk *quirk,
>  			     unsigned int usb_id);
>  
> +int snd_usb_apply_boot_quirk_once(struct usb_device *dev,
> +			          struct usb_interface *intf,
> +			          const struct snd_usb_audio_quirk *quirk,
> +			          unsigned int usb_id);
> +
>  void snd_usb_set_format_quirk(struct snd_usb_substream *subs,
>  			      struct audioformat *fmt);
>  
> -- 
> 2.24.1
> 
_______________________________________________
Alsa-devel mailing list
Alsa-devel@alsa-project.org
https://mailman.alsa-project.org/mailman/listinfo/alsa-devel
