Return-Path: <alsa-devel-bounces@alsa-project.org>
X-Original-To: lists+alsa-devel@lfdr.de
Delivered-To: lists+alsa-devel@lfdr.de
Received: from alsa0.perex.cz (alsa0.perex.cz [77.48.224.243])
	by mail.lfdr.de (Postfix) with ESMTPS id 0B6F84AC11
	for <lists+alsa-devel@lfdr.de>; Tue, 18 Jun 2019 22:51:49 +0200 (CEST)
Received: from alsa1.perex.cz (alsa1.perex.cz [207.180.221.201])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by alsa0.perex.cz (Postfix) with ESMTPS id 87DDE16AB;
	Tue, 18 Jun 2019 22:50:58 +0200 (CEST)
DKIM-Filter: OpenDKIM Filter v2.11.0 alsa0.perex.cz 87DDE16AB
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=alsa-project.org;
	s=default; t=1560891108;
	bh=dI7giYJYIcKsOmUs9/2FNXka2PjdsGqJ9qysWXe6WgE=;
	h=Date:From:To:In-Reply-To:References:Cc:Subject:List-Id:
	 List-Unsubscribe:List-Archive:List-Post:List-Help:List-Subscribe:
	 From;
	b=rWQEPFBCDgoCWJlvMR30hRNwyslhwdTSu+E5nYqUDJOF6FkaQBuGwR89NJi8DXrhw
	 HUUyVZImOhKUoAmRXyAP58ogC03C8rK9rblVJSwmubG4ONVctvseoejPaxU1FrNLnz
	 05YdSHJeho1zK3JffeVUz8ldsaRc1cEkuajFUjX8=
Received: from alsa1.perex.cz (localhost.localdomain [127.0.0.1])
	by alsa1.perex.cz (Postfix) with ESMTP id 57FDAF89682;
	Tue, 18 Jun 2019 22:50:04 +0200 (CEST)
X-Original-To: alsa-devel@alsa-project.org
Delivered-To: alsa-devel@alsa-project.org
Received: by alsa1.perex.cz (Postfix, from userid 50401)
 id A3227F896F4; Tue, 18 Jun 2019 22:50:00 +0200 (CEST)
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on alsa1.perex.cz
X-Spam-Level: *
X-Spam-Status: No, score=1.0 required=5.0 tests=PRX_BODY_30,SPF_HELO_NONE,
 SPF_PASS,URIBL_BLOCKED autolearn=disabled version=3.4.0
Received: from mx1.suse.de (mx2.suse.de [195.135.220.15])
 (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
 (No client certificate requested)
 by alsa1.perex.cz (Postfix) with ESMTPS id 42F4BF8075C
 for <alsa-devel@alsa-project.org>; Tue, 18 Jun 2019 22:49:56 +0200 (CEST)
DKIM-Filter: OpenDKIM Filter v2.11.0 alsa1.perex.cz 42F4BF8075C
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay2.suse.de (unknown [195.135.220.254])
 by mx1.suse.de (Postfix) with ESMTP id E35DAAD24;
 Tue, 18 Jun 2019 20:49:55 +0000 (UTC)
Date: Tue, 18 Jun 2019 22:49:55 +0200
Message-ID: <s5hd0ja8vpo.wl-tiwai@suse.de>
From: Takashi Iwai <tiwai@suse.de>
To: "scott andrew franco" <samiam@moorecad.com>
In-Reply-To: <20190618115919.6c61c97e98fe7bb02193b2d6dca4a85a.e791232afd.mailapi@email03.godaddy.com>
References: <20190618113358.6c61c97e98fe7bb02193b2d6dca4a85a.ed0e6629be.mailapi@email03.godaddy.com>
 <20190618115919.6c61c97e98fe7bb02193b2d6dca4a85a.e791232afd.mailapi@email03.godaddy.com>
User-Agent: Wanderlust/2.15.9 (Almost Unreal) SEMI/1.14.6 (Maruoka)
 FLIM/1.14.9 (=?UTF-8?B?R29qxY0=?=) APEL/10.8 Emacs/25.3
 (x86_64-suse-linux-gnu) MULE/6.0 (HANACHIRUSATO)
MIME-Version: 1.0 (generated by SEMI 1.14.6 - "Maruoka")
Cc: alsa-devel@alsa-project.org
Subject: Re: [alsa-devel] Serious bug calling ALSA lib functions from .so
	vs. .o file
X-BeenThere: alsa-devel@alsa-project.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: "Alsa-devel mailing list for ALSA developers -
 http://www.alsa-project.org" <alsa-devel.alsa-project.org>
List-Unsubscribe: <https://mailman.alsa-project.org/mailman/options/alsa-devel>, 
 <mailto:alsa-devel-request@alsa-project.org?subject=unsubscribe>
List-Archive: <http://mailman.alsa-project.org/pipermail/alsa-devel/>
List-Post: <mailto:alsa-devel@alsa-project.org>
List-Help: <mailto:alsa-devel-request@alsa-project.org?subject=help>
List-Subscribe: <https://mailman.alsa-project.org/mailman/listinfo/alsa-devel>, 
 <mailto:alsa-devel-request@alsa-project.org?subject=subscribe>
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: 7bit
Errors-To: alsa-devel-bounces@alsa-project.org
Sender: "Alsa-devel" <alsa-devel-bounces@alsa-project.org>

On Tue, 18 Jun 2019 20:59:19 +0200,
scott andrew franco wrote:
> 
> PS. I really appreciate the help, I have spent more than a week on this, it is a serious blocking issue.
>  
> I've gone over the example I posted quite carefully. I recommend you try the example out. You just need the
> two source files below (test2.c and playwav.c). and execute the commands shown below.
>  
> The fact that it fails only in the .so file can explain why this bug hasn't affected more user code, since most
> people don't call alsa from another library. However, it does not explain everything since I believe there must
> be a few users who do put the calling code in a library.

What Jaroslav pointed is to pass -lasound2 at creating the *.so file,
not at linking to the final binary.  That is,

% gcc -shared test2.o -o test2.so -lasound

Otherwise the linker won't get the proper versioned symbol, hence an
incorrect symbol may be taken instead of the expected versioned one.

Calling ALSA library from a shared object is commonly done,
e.g. PulseAudio.  The tricky part is the versioned symbol handling,
and it's not specific to ALSA-lib but a generic problem.


Takashi

>  
> Thanks,
>  
> Scott Franco
>  
> --------- Original Message --------- Subject: RE: Re: [alsa-devel] Serious bug calling ALSA lib functions from .so vs. .o file
> From: "scott andrew franco" <samiam@moorecad.com>
> Date: 6/18/19 11:33 am
> To: "Jaroslav Kysela" <perex@perex.cz>
> Cc: alsa-devel@alsa-project.org
> 
>  Hi, and thanks for the reply.
>  
> >I think that you must link .so to -lasound, too.
>  
> This was done and shows in the command line example below, IE,
>  
>  samiam@samiam-home-pc:~/projects/petit_ami$ gcc -fPIC -c test2.c -o test2.o
> > samiam@samiam-home-pc:~/projects/petit_ami$ gcc -g3 -Iinclude linux/playwav.c ./test2.so -lasound -o playwav
> > samiam@samiam-home-pc:~/projeclufthansa check reservationts/petit_ami$ ./playwav
> > alsaplaywave: rate: 1
> > alsaplaywave: rate: 0
> > samiam@samiam-home-pc:~/projects/petit_ami$ gcc -g3 -Iinclude linux/playwav.c ./test2.o -lasound -o playwav
> > samiam@samiam-home-pc:~/projects/petit_ami$ ./playwav
> > alsaplaywave: rate: 1
> > alsaplaywave: rate: 1
>  
> Note that in both the "succeeds" case and the "fails" case carry the -lasound option. It would not compile
> if not.
>  
> Scott Franco
>  
> --------- Original Message --------- Subject: Re: [alsa-devel] Serious bug calling ALSA lib functions from .so vs. .o file
> From: "Jaroslav Kysela" <perex@perex.cz>
> Date: 6/18/19 11:18 am
> To: "scott andrew franco" <samiam@moorecad.com>
> Cc: alsa-devel@alsa-project.org
> 
> Dne 18. 06. 19 v 17:16 scott andrew franco napsal(a):
>  > Hello,
>  > 
>  > The issue:
>  > 
>  > calling across .so (dynamic linking) produces different behavior in ALSA library calls than normal,
>  > and causes ALSA to malfunction.
>  > 
>  > I have minimized my issue to as small a code section as possible. Note the code is from commonly available
>  > internet examples, including Free Electrons "Audio in embedded linux systems".
>  
>  It seems like a linker issue. I think that you must link .so to -lasound, too.
>  (add -lasound to the command producing your .so library to satisfy the
>  versioned symbols)
>  
>  Jaroslav
>  
>  > 
>  > The run is:
>  > 
>  > samiam@samiam-home-pc:~/projects/petit_ami$ gcc -fPIC -c test2.c -o test2.o
>  > samiam@samiam-home-pc:~/projects/petit_ami$ gcc -g3 -Iinclude linux/playwav.c ./test2.so -lasound -o playwav
>  > samiam@samiam-home-pc:~/projeclufthansa check reservationts/petit_ami$ ./playwav
>  > alsaplaywave: rate: 1
>  > alsaplaywave: rate: 0
>  > samiam@samiam-home-pc:~/projects/petit_ami$ gcc -g3 -Iinclude linux/playwav.c ./test2.o -lasound -o playwav
>  > samiam@samiam-home-pc:~/projects/petit_ami$ ./playwav
>  > alsaplaywave: rate: 1
>  > alsaplaywave: rate: 1
>  > 
>  > Note the only difference between the two runs of "playwave" is if the second module, test2, is linked as a .so or
>  > linked as a .o.
>  > 
>  > The code is:
>  > =======================================================================================
>  > playwav.c
>  > #include <alsa/asoundlib.h>
>  > #include <stdio.h>
>  > void alsaplaywave1(void)
>  > {
>  > snd_pcm_t *pcm_handle;
>  > snd_pcm_hw_params_t *params;
>  > unsigned int val;
>  > unsigned int rate;
>  > int r;
>  > /* open pcm device */
>  > r = snd_pcm_open(&pcm_handle, "default", SND_PCM_STREAM_PLAYBACK, 0);
>  > if (r < 0) printf("Cannot open PCM output device");
>  > snd_pcm_hw_params_alloca(&params); /* get hw parameter block */
>  > snd_pcm_hw_params_any(pcm_handle, params);
>  > r = snd_pcm_hw_params_set_access(pcm_handle, params, SND_PCM_ACCESS_RW_INTERLEAVED);
>  > if (r < 0) printf("Cannot set interleaved mode");
>  > r = snd_pcm_hw_params_set_format(pcm_handle, params, SND_PCM_FORMAT_S16_LE);
>  > if (r < 0) printf("Cannot set format");
>  > r = snd_pcm_hw_params_set_channels(pcm_handle, params, 2);
>  > if (r < 0) printf("Cannot set channels number");
>  > val = 44100;
>  > r = snd_pcm_hw_params_set_rate_near(pcm_handle, params, &rate, 0);
>  > if (r < 0) printf("Cannot set rate");
>  > snd_pcm_hw_params_get_rate(params, &rate, 0);
>  > printf("alsaplaywave: rate: %d\n", rate);
>  > snd_pcm_close(pcm_handle);
>  > }
>  > extern void alsaplaywave2(void);
>  > int main(int argc, char **argv)
>  > {
>  > alsaplaywave1();
>  > alsaplaywave2();
>  > return 0;
>  > }
>  > 
>  > ==================================================================================
>  > test2.c
>  > #include <alsa/asoundlib.h>
>  > #include <stdio.h>
>  > void alsaplaywave2(void)
>  > {
>  > snd_pcm_t *pcm_handle;
>  > snd_pcm_hw_params_t *params;
>  > unsigned int val;
>  > unsigned int rate;
>  > int r;
>  > /* open pcm device */
>  > r = snd_pcm_open(&pcm_handle, "default", SND_PCM_STREAM_PLAYBACK, 0);
>  > if (r < 0) printf("Cannot open PCM output device");
>  > snd_pcm_hw_params_alloca(&params); /* get hw parameter block */
>  > snd_pcm_hw_params_any(pcm_handle, params);
>  > r = snd_pcm_hw_params_set_access(pcm_handle, params, SND_PCM_ACCESS_RW_INTERLEAVED);
>  > if (r < 0) printf("Cannot set interleaved mode");
>  > r = snd_pcm_hw_params_set_format(pcm_handle, params, SND_PCM_FORMAT_S16_LE);
>  > if (r < 0) printf("Cannot set format");
>  > r = snd_pcm_hw_params_set_channels(pcm_handle, params, 2);
>  > if (r < 0) printf("Cannot set channels number");
>  > val = 44100;
>  > r = snd_pcm_hw_params_set_rate_near(pcm_handle, params, &rate, 0);
>  > if (r < 0) printf("Cannot set rate");
>  > snd_pcm_hw_params_get_rate(params, &rate, 0);
>  > printf("alsaplaywave: rate: %d\n", rate);
>  > snd_pcm_close(pcm_handle);
>  > }
>  > _______________________________________________
>  > Alsa-devel mailing list
>  > Alsa-devel@alsa-project.org
>  > https://mailman.alsa-project.org/mailman/listinfo/alsa-devel
>  > 
>  
>  
>  -- 
>  Jaroslav Kysela <perex@perex.cz>
>  Linux Sound Maintainer; ALSA Project; Red Hat, Inc.
>  _______________________________________________
>  Alsa-devel mailing list
>  Alsa-devel@alsa-project.org
>  https://mailman.alsa-project.org/mailman/listinfo/alsa-devel
> _______________________________________________
> Alsa-devel mailing list
> Alsa-devel@alsa-project.org
> https://mailman.alsa-project.org/mailman/listinfo/alsa-devel
> 
_______________________________________________
Alsa-devel mailing list
Alsa-devel@alsa-project.org
https://mailman.alsa-project.org/mailman/listinfo/alsa-devel
