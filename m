Return-Path: <alsa-devel-bounces@alsa-project.org>
X-Original-To: lists+alsa-devel@lfdr.de
Delivered-To: lists+alsa-devel@lfdr.de
Received: from alsa0.perex.cz (alsa0.perex.cz [77.48.224.243])
	by mail.lfdr.de (Postfix) with ESMTPS id 56CA7173242
	for <lists+alsa-devel@lfdr.de>; Fri, 28 Feb 2020 08:59:04 +0100 (CET)
Received: from alsa1.perex.cz (alsa1.perex.cz [207.180.221.201])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by alsa0.perex.cz (Postfix) with ESMTPS id EA0C116E3;
	Fri, 28 Feb 2020 08:58:13 +0100 (CET)
DKIM-Filter: OpenDKIM Filter v2.11.0 alsa0.perex.cz EA0C116E3
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=alsa-project.org;
	s=default; t=1582876744;
	bh=4cethoaChBf4vjJFA/XxJ1Fzdpv4cmyIrohkAFDiVNk=;
	h=Date:From:To:Subject:In-Reply-To:References:List-Id:
	 List-Unsubscribe:List-Archive:List-Post:List-Help:List-Subscribe:
	 From;
	b=reaD/YtlclMEo8HmJDCVtC0I+q2ef/TzwztKe/iEY47SPM7+KzYW5FYpqBZrhIwlo
	 j3L4US6cESSo/7a7RBoDozErMr3mQmAtqFhRq024Lqoe8MiFDTMRRyMjCd+T3NS232
	 rLycz87Ek68fkLWRfra58hQZP61q8Z7RGIzLPJnY=
Received: from alsa1.perex.cz (localhost.localdomain [127.0.0.1])
	by alsa1.perex.cz (Postfix) with ESMTP id 59D57F80113;
	Fri, 28 Feb 2020 08:57:54 +0100 (CET)
X-Original-To: alsa-devel@alsa-project.org
Delivered-To: alsa-devel@alsa-project.org
Received: by alsa1.perex.cz (Postfix, from userid 50401)
 id 3E03FF80171; Fri, 28 Feb 2020 08:57:52 +0100 (CET)
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on alsa1.perex.cz
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=SPF_HELO_NONE,SPF_PASS
 autolearn=disabled version=3.4.0
Received: from relmlie6.idc.renesas.com (relmlor2.renesas.com
 [210.160.252.172])
 by alsa1.perex.cz (Postfix) with ESMTP id 12D85F80113
 for <alsa-devel@alsa-project.org>; Fri, 28 Feb 2020 08:57:45 +0100 (CET)
DKIM-Filter: OpenDKIM Filter v2.11.0 alsa1.perex.cz 12D85F80113
Date: 28 Feb 2020 16:57:43 +0900
X-IronPort-AV: E=Sophos;i="5.70,493,1574089200"; d="scan'208";a="40295078"
Received: from unknown (HELO relmlir6.idc.renesas.com) ([10.200.68.152])
 by relmlie6.idc.renesas.com with ESMTP; 28 Feb 2020 16:57:43 +0900
Received: from mercury.renesas.com (unknown [10.166.252.133])
 by relmlir6.idc.renesas.com (Postfix) with ESMTP id 85B4741F4DF6;
 Fri, 28 Feb 2020 16:57:43 +0900 (JST)
Message-ID: <87zhd35eko.wl-kuninori.morimoto.gx@renesas.com>
From: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
To: Kai Vehmanen <kai.vehmanen@linux.intel.com>, broonie@kernel.org,
 alsa-devel@alsa-project.org, ranjani.sridharan@linux.intel.com,
 digetx@gmail.com, pierre-louis.bossart@linux.intel.com
Subject: Re: [PATCH] ASoC: soc-pcm: Revert "call
 snd_soc_component_open/close() once"
In-Reply-To: <871rqf6xas.wl-kuninori.morimoto.gx@renesas.com>
References: <20200219182650.1416-1-kai.vehmanen@linux.intel.com>
 <87blput7hh.wl-kuninori.morimoto.gx@renesas.com>
 <alpine.DEB.2.21.2002201103060.2957@eliteleevi.tm.intel.com>
 <87mu9cspyf.wl-kuninori.morimoto.gx@renesas.com>
 <alpine.DEB.2.21.2002211251280.2957@eliteleevi.tm.intel.com>
 <87mu978pob.wl-kuninori.morimoto.gx@renesas.com>
 <87ftey88wk.wl-kuninori.morimoto.gx@renesas.com>
 <alpine.DEB.2.21.2002271110010.2957@eliteleevi.tm.intel.com>
 <874kvb7d38.wl-kuninori.morimoto.gx@renesas.com>
 <871rqf6xas.wl-kuninori.morimoto.gx@renesas.com>
User-Agent: Wanderlust/2.15.9 Emacs/25.2 Mule/6.0
MIME-Version: 1.0 (generated by SEMI-EPG 1.14.7 - "Harue")
Content-Type: text/plain; charset=US-ASCII
X-BeenThere: alsa-devel@alsa-project.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: "Alsa-devel mailing list for ALSA developers -
 http://www.alsa-project.org" <alsa-devel.alsa-project.org>
List-Unsubscribe: <https://mailman.alsa-project.org/mailman/options/alsa-devel>, 
 <mailto:alsa-devel-request@alsa-project.org?subject=unsubscribe>
List-Archive: <http://mailman.alsa-project.org/pipermail/alsa-devel/>
List-Post: <mailto:alsa-devel@alsa-project.org>
List-Help: <mailto:alsa-devel-request@alsa-project.org?subject=help>
List-Subscribe: <https://mailman.alsa-project.org/mailman/listinfo/alsa-devel>, 
 <mailto:alsa-devel-request@alsa-project.org?subject=subscribe>
Errors-To: alsa-devel-bounces@alsa-project.org
Sender: "Alsa-devel" <alsa-devel-bounces@alsa-project.org>


Hi Kai, again, and, again

> > 	start(substream-A); <=
> > 	start(substream-B);
> > 	start(substream-C);
> >
> > 	stop(substream-Z);  <=
> > 	stop(substream-B);
> > 	stop(substream-C);
(snip)
> Ohh, yes indeed !! I was confused.
> But Hmm... I don't want to have substream list on each component...
> Hmm... I will re-consider it again.

I don't want to have substream list on each components,
and keep simple code as much as possible.

My current idea is using ID. What do you think ?
It is not super simple though...

	int soc_pcm_components_open(struct snd_pcm_substream *substream, u8 id)
	{
		int ret = 0;

		/*
		 * Add ID to each component to know "which open".
		 */
		for_each_rtd_components(rtd, i, component) {
			if (component->driver->open) {
				ret = component->driver->open(component, substream);
				if (ret < 0)
					return ret;

				component->open_id = id; /* add ID */
			}
		}

		return 0;
	}

	int soc_pcm_components_close(struct snd_pcm_substream *substream, u8 id)
	{
		/*
		 * if ID > 0,  it is only target.
		 * if ID == 0, all components are the target
		 */
		for_each_rtd_components(rtd, i, component) {
			if ((id == 0 ||
			     id == component->open_id) &&
			    component->driver->close)
				component->driver->close(component, substream);
		}
		...
	}


=>	int soc_pcm_clear(..., u8 id)
	{
		...
		/*
		 * if ID > 0,  it is only target.
		 * if ID == 0, all components are the target
		 */
		soc_pcm_components_close(substream, id);
		...
	}

	int soc_pcm_close(...)
	{
		/*
		 * ID = 0
		 * All components are target of close
		 */
=>		soc_pcm_clear(xxx, 0);
	}

	int soc_pcm_open(...)
	{
		static u8 id;

		/* update ID */
		id++;
		if (id == 0)
			id++;

		...
		ret = soc_pcm_components_open(substream, id);
		if (ret < 0)
			goto open_err;
		...

		return 0; /* success */

	open_err:
		/*
		 * ID = id
		 * Only this IDs are the target
		 */
=>		soc_pcm_clear(xxx, id)

		return ret;
	}


Thank you for your help !!
Best regards
---
Kuninori Morimoto
