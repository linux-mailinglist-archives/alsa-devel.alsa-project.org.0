Return-Path: <alsa-devel-bounces@alsa-project.org>
X-Original-To: lists+alsa-devel@lfdr.de
Delivered-To: lists+alsa-devel@lfdr.de
Received: from alsa0.perex.cz (alsa0.perex.cz [77.48.224.243])
	by mail.lfdr.de (Postfix) with ESMTPS id 95ED838D403
	for <lists+alsa-devel@lfdr.de>; Sat, 22 May 2021 08:47:14 +0200 (CEST)
Received: from alsa1.perex.cz (alsa1.perex.cz [207.180.221.201])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by alsa0.perex.cz (Postfix) with ESMTPS id 2962B16AE;
	Sat, 22 May 2021 08:46:24 +0200 (CEST)
DKIM-Filter: OpenDKIM Filter v2.11.0 alsa0.perex.cz 2962B16AE
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=alsa-project.org;
	s=default; t=1621666034;
	bh=7+ywo0wfDkjIy/GHFVLgKaUqYvinT1JQdth7fdaXC30=;
	h=Date:From:To:Subject:In-Reply-To:References:Cc:List-Id:
	 List-Unsubscribe:List-Archive:List-Post:List-Help:List-Subscribe:
	 From;
	b=Oiwl+YHsAs8RpgFLDEK4YhN0OUKGljLmP/kRFiXhGrqEcg7Z4mvKAYaINmF77ZPQW
	 wK24QMnhlAJLB1lx8o3dxE1rfonFKn3ulFEgauyC8k5aJPGyfasIBBfCFWG5h/T/Xw
	 Xc94HDvRjPWNjHKrQg/qRjJODEHef5ZxjQbEsbrE=
Received: from alsa1.perex.cz (localhost.localdomain [127.0.0.1])
	by alsa1.perex.cz (Postfix) with ESMTP id 7196DF8020B;
	Sat, 22 May 2021 08:45:45 +0200 (CEST)
X-Original-To: alsa-devel@alsa-project.org
Delivered-To: alsa-devel@alsa-project.org
Received: by alsa1.perex.cz (Postfix, from userid 50401)
 id E155BF80217; Sat, 22 May 2021 08:45:42 +0200 (CEST)
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on alsa1.perex.cz
X-Spam-Level: 
X-Spam-Status: No, score=-0.1 required=5.0 tests=DKIM_SIGNED,DKIM_VALID,
 DKIM_VALID_AU,RCVD_IN_MSPIKE_H3,RCVD_IN_MSPIKE_WL,SPF_HELO_NONE,SPF_PASS,
 URIBL_BLOCKED autolearn=disabled version=3.4.0
Received: from mx2.suse.de (mx2.suse.de [195.135.220.15])
 (using TLSv1.2 with cipher ECDHE-RSA-AES128-GCM-SHA256 (128/128 bits))
 (No client certificate requested)
 by alsa1.perex.cz (Postfix) with ESMTPS id 0E9D0F80153
 for <alsa-devel@alsa-project.org>; Sat, 22 May 2021 08:45:34 +0200 (CEST)
DKIM-Filter: OpenDKIM Filter v2.11.0 alsa1.perex.cz 0E9D0F80153
Authentication-Results: alsa1.perex.cz;
 dkim=pass (1024-bit key) header.d=suse.de header.i=@suse.de
 header.b="QDYzRUel"; 
 dkim=permerror (0-bit key) header.d=suse.de header.i=@suse.de
 header.b="eJQJNScS"
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=suse.de; s=susede2_rsa;
 t=1621665933; h=from:from:reply-to:date:date:message-id:message-id:to:to:cc:cc:
 mime-version:mime-version:content-type:content-type:
 in-reply-to:in-reply-to:references:references;
 bh=stNMbmkfr0H4CTD2K3KTiK4y5A/GN2rVn4bUsldoZ4c=;
 b=QDYzRUelPV6yLoPdmLyrdsVyYAOAd57fVYU3rKX9lyCzcDZ0HYWNCmaGklBiADgs2xzqo1
 57H2nb8a8lu7ZPb0Otcwjdk9NMviR892T8IUJ25IfbXF9HtuzzBKtRGSFzOmDBghyh+MlI
 wvMdIiRrc5amtV+j+bj6sN8qmcfAEec=
DKIM-Signature: v=1; a=ed25519-sha256; c=relaxed/relaxed; d=suse.de;
 s=susede2_ed25519; t=1621665933;
 h=from:from:reply-to:date:date:message-id:message-id:to:to:cc:cc:
 mime-version:mime-version:content-type:content-type:
 in-reply-to:in-reply-to:references:references;
 bh=stNMbmkfr0H4CTD2K3KTiK4y5A/GN2rVn4bUsldoZ4c=;
 b=eJQJNScSiAtI7hyaN5vliE9YnjF8RIC+wg9VLkVURHz0TPNfUXfrt8Eg3PNi4T++uqeA6c
 WMz2/+FtpcY4EIDA==
Received: from relay2.suse.de (unknown [195.135.221.27])
 by mx2.suse.de (Postfix) with ESMTP id E85F4AAFD;
 Sat, 22 May 2021 06:45:32 +0000 (UTC)
Date: Sat, 22 May 2021 08:45:32 +0200
Message-ID: <s5him3bfer7.wl-tiwai@suse.de>
From: Takashi Iwai <tiwai@suse.de>
To: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Subject: Re: [PATCH][next] ALSA: firewire-lib: Fix uninitialized variable err
 issue
In-Reply-To: <20210521222146.GA10202@workstation>
References: <20210520083424.6685-1-colin.king@canonical.com>
 <s5hh7ixh9qn.wl-tiwai@suse.de>
 <20210520130409.GA170303@workstation>
 <20210521222146.GA10202@workstation>
User-Agent: Wanderlust/2.15.9 (Almost Unreal) SEMI/1.14.6 (Maruoka)
 FLIM/1.14.9 (=?UTF-8?B?R29qxY0=?=) APEL/10.8 Emacs/25.3
 (x86_64-suse-linux-gnu) MULE/6.0 (HANACHIRUSATO)
MIME-Version: 1.0 (generated by SEMI 1.14.6 - "Maruoka")
Content-Type: text/plain; charset=US-ASCII
Cc: alsa-devel@alsa-project.org, Clemens Ladisch <clemens@ladisch.de>,
 kernel-janitors@vger.kernel.org, Takashi Iwai <tiwai@suse.com>,
 Colin King <colin.king@canonical.com>, linux-kernel@vger.kernel.org
X-BeenThere: alsa-devel@alsa-project.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: "Alsa-devel mailing list for ALSA developers -
 http://www.alsa-project.org" <alsa-devel.alsa-project.org>
List-Unsubscribe: <https://mailman.alsa-project.org/mailman/options/alsa-devel>, 
 <mailto:alsa-devel-request@alsa-project.org?subject=unsubscribe>
List-Archive: <http://mailman.alsa-project.org/pipermail/alsa-devel/>
List-Post: <mailto:alsa-devel@alsa-project.org>
List-Help: <mailto:alsa-devel-request@alsa-project.org?subject=help>
List-Subscribe: <https://mailman.alsa-project.org/mailman/listinfo/alsa-devel>, 
 <mailto:alsa-devel-request@alsa-project.org?subject=subscribe>
Errors-To: alsa-devel-bounces@alsa-project.org
Sender: "Alsa-devel" <alsa-devel-bounces@alsa-project.org>

On Sat, 22 May 2021 00:21:46 +0200,
Takashi Sakamoto wrote:
> 
> Hi,
> 
> On Thu, May 20, 2021 at 10:04:09PM +0900, Takashi Sakamoto wrote:
> > Hi,
> > 
> > On Thu, May 20, 2021 at 02:26:24PM +0200, Takashi Iwai wrote:
> > > On Thu, 20 May 2021 10:34:24 +0200,
> > > Colin King wrote:
> > > > 
> > > > From: Colin Ian King <colin.king@canonical.com>
> > > > 
> > > > Currently in the case where the payload_length is less than the
> > > > cip_header_size the error return variable err is not being set
> > > > and function parse_ir_ctx_header can return an uninitialized
> > > > error return value. Fix this by setting err to zero.
> > > > 
> > > > Addresses-Coverity: ("Uninitialized scalar variable")
> > > > Fixes: c09010eeb373 ("ALSA: firewire-lib: handle the case that empty isochronous packet payload for CIP")
> > > > Signed-off-by: Colin Ian King <colin.king@canonical.com>
> > > 
> > > Just a bikeshed, IMO, it'd be more proper to initialize err at the
> > > beginning than setting 0 at every branch, e.g.
> > > 
> > > --- a/sound/firewire/amdtp-stream.c
> > > +++ b/sound/firewire/amdtp-stream.c
> > > @@ -652,7 +652,7 @@ static int parse_ir_ctx_header(struct amdtp_stream *s, unsigned int cycle,
> > >  	unsigned int payload_length;
> > >  	const __be32 *cip_header;
> > >  	unsigned int cip_header_size;
> > > -	int err;
> > > +	int err = 0;
> > >  
> > >  	payload_length = be32_to_cpu(ctx_header[0]) >> ISO_DATA_LENGTH_SHIFT;
> > >  
> > > @@ -683,7 +683,6 @@ static int parse_ir_ctx_header(struct amdtp_stream *s, unsigned int cycle,
> > >  		}
> > >  	} else {
> > >  		cip_header = NULL;
> > > -		err = 0;
> > >  		*data_blocks = payload_length / sizeof(__be32) / s->data_block_quadlets;
> > >  		*syt = 0;
> > 
> > Thanks for the patches.
> > 
> > The error check is just done for the case to process CIP header, thus we
> > can put the auto variable into the branch.
> > 
> > ======== 8< --------
> > From 3fcca0062297e937c665f1c8e3a117e1187f4115 Mon Sep 17 00:00:00 2001
> > From: Takashi Sakamoto <o-takashi@sakamocchi.jp>
> > Date: Thu, 20 May 2021 21:59:50 +0900
> > Subject: [PATCH] ALSA: firewire-lib: Fix uninitialized variable err issue
> > 
> > The check of error is just done for the case that CIP header is available.
> > 
> > This commit moves auto variable into the branch to process CIP header.
> > 
> > Addresses-Coverity: ("Uninitialized scalar variable")
> > Fixes: c09010eeb373 ("ALSA: firewire-lib: handle the case that empty isochronous packet payload for CIP")
> > Suggested-by: Colin Ian King <colin.king@canonical.com>
> > Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
> > ---
> >  sound/firewire/amdtp-stream.c | 6 +++---
> >  1 file changed, 3 insertions(+), 3 deletions(-)
> > 
> > diff --git a/sound/firewire/amdtp-stream.c b/sound/firewire/amdtp-stream.c
> > index 37c8de8a..11ae4e88 100644
> > --- a/sound/firewire/amdtp-stream.c
> > +++ b/sound/firewire/amdtp-stream.c
> > @@ -748,7 +748,6 @@ static int parse_ir_ctx_header(struct amdtp_stream *s, unsigned int cycle,
> >  	unsigned int payload_length;
> >  	const __be32 *cip_header;
> >  	unsigned int cip_header_size;
> > -	int err;
> >  
> >  	payload_length = be32_to_cpu(ctx_header[0]) >> ISO_DATA_LENGTH_SHIFT;
> >  
> > @@ -766,6 +765,8 @@ static int parse_ir_ctx_header(struct amdtp_stream *s, unsigned int cycle,
> >  
> >  	if (cip_header_size > 0) {
> >  		if (payload_length >= cip_header_size) {
> > +			int err;
> > +
> >  			cip_header = ctx_header + IR_CTX_HEADER_DEFAULT_QUADLETS;
> >  			err = check_cip_header(s, cip_header, payload_length - cip_header_size,
> >  					       data_blocks, data_block_counter, syt);
> > @@ -779,7 +780,6 @@ static int parse_ir_ctx_header(struct amdtp_stream *s, unsigned int cycle,
> >  		}
> >  	} else {
> >  		cip_header = NULL;
> > -		err = 0;
> >  		*data_blocks = payload_length / sizeof(__be32) / s->data_block_quadlets;
> >  		*syt = 0;
> >  
> > @@ -790,7 +790,7 @@ static int parse_ir_ctx_header(struct amdtp_stream *s, unsigned int cycle,
> >  	trace_amdtp_packet(s, cycle, cip_header, payload_length, *data_blocks,
> >  			   *data_block_counter, packet_index, index);
> >  
> > -	return err;
> > +	return 0;
> >  }
> >  
> >  // In CYCLE_TIMER register of IEEE 1394, 7 bits are used to represent second. On
> > -- 
> > 2.27.0
> > ======== 8< --------
> 
> Thanks for applying the patch but the commit in your tree includes
> duplicated From/Data/Subject lines and causes failure of git-am for the
> patch simply generated by git-am. Is it possible for you to modify
> history of your for-next branch with enough correction?

My bad, now corrected.


thanks,

Takashi
