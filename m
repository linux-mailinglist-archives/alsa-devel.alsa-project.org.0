Return-Path: <alsa-devel-bounces@alsa-project.org>
X-Original-To: lists+alsa-devel@lfdr.de
Delivered-To: lists+alsa-devel@lfdr.de
Received: from alsa0.perex.cz (alsa0.perex.cz [77.48.224.243])
	by mail.lfdr.de (Postfix) with ESMTPS id 89924147E6
	for <lists+alsa-devel@lfdr.de>; Mon,  6 May 2019 11:57:29 +0200 (CEST)
Received: from alsa1.perex.cz (alsa1.perex.cz [207.180.221.201])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by alsa0.perex.cz (Postfix) with ESMTPS id 189C91875;
	Mon,  6 May 2019 11:56:39 +0200 (CEST)
DKIM-Filter: OpenDKIM Filter v2.11.0 alsa0.perex.cz 189C91875
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=alsa-project.org;
	s=default; t=1557136649;
	bh=RmPzkxWrZ7Orts9gcYNzfD1dCo5manUpzLihvgGMmz0=;
	h=Date:From:To:In-Reply-To:References:Cc:Subject:List-Id:
	 List-Unsubscribe:List-Archive:List-Post:List-Help:List-Subscribe:
	 From;
	b=L6lGX9Mv5kLOgeGTYMwP/wpn9uv7GcDm84CNoVast/Sgzi5ng9T+iix0Xr3OxcbhD
	 sN9FyKKSxS4kuG+TghE1IW/9Yi53kRW08iBMJyYWl8PC2WJ84g3L2t5PRsNuvLeqLW
	 kKpBQ/WYFTMhBR8ao20xamY+3xw3iDZE5cvClAc0=
Received: from alsa1.perex.cz (localhost.localdomain [127.0.0.1])
	by alsa1.perex.cz (Postfix) with ESMTP id A69C5F896F0;
	Mon,  6 May 2019 11:55:44 +0200 (CEST)
X-Original-To: alsa-devel@alsa-project.org
Delivered-To: alsa-devel@alsa-project.org
Received: by alsa1.perex.cz (Postfix, from userid 50401)
 id A4930F89673; Mon,  6 May 2019 11:55:41 +0200 (CEST)
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on alsa1.perex.cz
X-Spam-Level: 
X-Spam-Status: No, score=1.0 required=5.0 tests=PRX_BODY_30,SPF_PASS
 autolearn=disabled version=3.4.0
Received: from mx1.suse.de (mx2.suse.de [195.135.220.15])
 (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
 (No client certificate requested)
 by alsa1.perex.cz (Postfix) with ESMTPS id C4CA7F8962A
 for <alsa-devel@alsa-project.org>; Mon,  6 May 2019 11:55:38 +0200 (CEST)
DKIM-Filter: OpenDKIM Filter v2.11.0 alsa1.perex.cz C4CA7F8962A
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay2.suse.de (unknown [195.135.220.254])
 by mx1.suse.de (Postfix) with ESMTP id B09ABAE55;
 Mon,  6 May 2019 09:55:37 +0000 (UTC)
Date: Mon, 06 May 2019 11:55:37 +0200
Message-ID: <s5hsgtr6h5y.wl-tiwai@suse.de>
From: Takashi Iwai <tiwai@suse.de>
To: Mark Brown <broonie@kernel.org>
In-Reply-To: <20190506042625.GK14916@sirena.org.uk>
References: <20190423141336.12568-1-tiwai@suse.de>
 <20190423141336.12568-2-tiwai@suse.de>
 <20190427175938.GJ14916@sirena.org.uk>
 <s5h36lxpcbd.wl-tiwai@suse.de>
 <20190503064729.GF14916@sirena.org.uk>
 <s5hk1f8m2f1.wl-tiwai@suse.de>
 <20190506042625.GK14916@sirena.org.uk>
User-Agent: Wanderlust/2.15.9 (Almost Unreal) SEMI/1.14.6 (Maruoka)
 FLIM/1.14.9 (=?UTF-8?B?R29qxY0=?=) APEL/10.8 Emacs/25.3
 (x86_64-suse-linux-gnu) MULE/6.0 (HANACHIRUSATO)
MIME-Version: 1.0 (generated by SEMI 1.14.6 - "Maruoka")
Cc: alsa-devel@alsa-project.org,
 Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
Subject: Re: [alsa-devel] [PATCH 1/2] ASoC: Add support for Conexant CX2072X
	CODEC
X-BeenThere: alsa-devel@alsa-project.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: "Alsa-devel mailing list for ALSA developers -
 http://www.alsa-project.org" <alsa-devel.alsa-project.org>
List-Unsubscribe: <https://mailman.alsa-project.org/mailman/options/alsa-devel>, 
 <mailto:alsa-devel-request@alsa-project.org?subject=unsubscribe>
List-Archive: <http://mailman.alsa-project.org/pipermail/alsa-devel/>
List-Post: <mailto:alsa-devel@alsa-project.org>
List-Help: <mailto:alsa-devel-request@alsa-project.org?subject=help>
List-Subscribe: <https://mailman.alsa-project.org/mailman/listinfo/alsa-devel>, 
 <mailto:alsa-devel-request@alsa-project.org?subject=subscribe>
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: 7bit
Errors-To: alsa-devel-bounces@alsa-project.org
Sender: "Alsa-devel" <alsa-devel-bounces@alsa-project.org>

On Mon, 06 May 2019 06:26:25 +0200,
Mark Brown wrote:
> 
> On Fri, May 03, 2019 at 09:18:26AM +0200, Takashi Iwai wrote:
> > On Fri, 03 May 2019 08:47:29 +0200,
> > Mark Brown wrote:
> > > On Thu, May 02, 2019 at 09:04:06AM +0200, Takashi Iwai wrote:
> > > > Mark Brown wrote:
> 
> > > > > This looks *very* much like board configuration rather than a patch -
> > > > > there's no kind of test bit and the comments talk specifically about
> 
> > > > OK, will replace with the straight regmap_multi_reg_write().
> 
> > > That's probably not addressing the issue, a lot of that stuff just
> > > doesn't seem like it should be in some fixed configuration table at all.
> 
> > So what's your alternative suggestion?
> 
> Make it either platform data or runtime controls depending on the
> specific thing being configured.  Though...
> 
> > > Oh, joy.  What's the story here?  Do you have a datasheet for the part?
> 
> > Not at all.  I just refreshed the already submitted patches since I
> > have a laptop with the codec.  I tried to contact Conexant, but in
> > vain, so I decided to submit the renewed one.
> 
> ...this is not going to help.  At the very least it needs to be
> abundantly clear to anyone reading the code tht any magic register write
> sequences like this are being done the way they are due to a badly
> documented part from an unsupportive vendor rather than because it's a
> good idea in case someone decides to use the driver as an example.  Some
> comments or something.  For safety the bits that look board specific
> like the pinmuxing should ideally be behind DMI checks, though if nobody
> else ever bought the CODEC that's probably not so important.

Fair enough.  I'm going to put more comments on that part.

Since this is the only code for this codec on the net and all existing
platforms (Intel devices, RPi extensions and else) seem working with
it -- i.e. all these depend on the same init sequence more or less, so
splitting to platform data won't help much in practice.

> > > > The jack detection in ASoC is anyway a bit funky, especially when
> > > > involved with PM...
> 
> > > What do you mean here?  I'm not aware of any issues and the systems I've
> > > worked with seemed robust...
> 
> > There are tons of different ways of implementation for jack controls,
> > with different API usages.  IOW, no consistency.
> 
> The board registration interfaces do vary as the hardware isn't very
> standard so there's a bunch of things you can do for configuration
> (though there is a generic interface for the 90% case, the main
> limitation these days on using it is Intel's lack of any sensible
> firmware interface).  I'm not aware of any issues with power management
> though?

Yeah, I understand the various use cases and coverage for a wide range
of hardware implementations, but the lack of the documentation
is... not a thing we can be proud of.

Regarding the PM, my statement wasn't straight, sorry.  The fact is
that ASoC manages so many different levels of (a sort of) "PM".  We
have the Linux device-object system and runtime PMs, and we have BIAS
level control.  The machine needed the jack handling via ACPI GPIO
IRQ, that is outside the codec, which looks rather like a rare case, 
and  I had hard time to look for the right choice of the API usage.

> > > > > > +EXPORT_SYMBOL_GPL(snd_soc_cx2072x_get_jack_state);
> 
> > > > > Why is this symbol exported?
> 
> > > > It's called from the machine driver.
> > > > snd_soc_jack_add_gpios() is called in the machine driver side, and it
> > > > needs the jack_status_check callback that calls this function.
> 
> > > That code shouldn't be in the machine driver, the CODEC driver should
> > > request any interrupts it needs itself.
> 
> > The similar things are done on many other Intel SST board drivers.
> > The current patch just follows the pattern.
> 
> The only example I can find is the max98095 which it just plain buggy in
> this regard, that example shouldn't be followed - it looks like it's
> just plain an oversight in review.  Frankly the export was done by me
> and looks like I was just rushing to fix up a build breakage.

This is rather a question how generic the codec driver should be
written.  I changed the code in v5 patchset to embed the jack_gpio
stuff inside the codec driver side rather than the machine driver, so
the whole exported functions can be reduced now.  But, of course, it
slightly gives more implicit assumption about the hardware
implementations, too.  Though, the existing code seems to have already
fixed gpio / pin setups, so the other setups wouldn't have worked, in
anyway.

> > > No, that's not the question.  The question is why there is any
> > > initialization at all?
> 
> > Again, no idea.  These are likely no default values of the hardware
> > registers, and we need to set up some.  I *guess* ditto for the
> > initial register table in the above, too.
> 
> Or it's just a taste setting someone had for their particular system.
> With the earlier register default table an awful lot of it is fairly
> obvious board specific configuration, doing things like pinmuxing which
> will vary with the board.
> 
> It's unlikely there are *no* default values - you'd kind of have to try
> to have a specific register range like this with genuinely floating
> values.  Given that the code for configuring the EQ was broken to IIRC
> never take effect I'd not be 100% surprisd if someone couldn't figure
> out why their settings weren't taking effect and just bodged something
> directly in the driver.

Actually I'm fine to drop the whole EQ stuff that brings lots of black
magic.  Certainly it'll benefit us for code simplification.  Let's
see.


thanks,

Takashi
_______________________________________________
Alsa-devel mailing list
Alsa-devel@alsa-project.org
https://mailman.alsa-project.org/mailman/listinfo/alsa-devel
