Return-Path: <alsa-devel-bounces@alsa-project.org>
X-Original-To: lists+alsa-devel@lfdr.de
Delivered-To: lists+alsa-devel@lfdr.de
Received: from alsa0.perex.cz (alsa0.perex.cz [77.48.224.243])
	by mail.lfdr.de (Postfix) with ESMTPS id 5825E2E2A61
	for <lists+alsa-devel@lfdr.de>; Fri, 25 Dec 2020 09:04:43 +0100 (CET)
Received: from alsa1.perex.cz (alsa1.perex.cz [207.180.221.201])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by alsa0.perex.cz (Postfix) with ESMTPS id C79E51840;
	Fri, 25 Dec 2020 09:03:47 +0100 (CET)
DKIM-Filter: OpenDKIM Filter v2.11.0 alsa0.perex.cz C79E51840
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=alsa-project.org;
	s=default; t=1608883477;
	bh=cV6NuHa+XiD5ap1QveW+2xauqiIKxNxUoVDW5hF1MPE=;
	h=Date:From:To:Subject:In-Reply-To:References:Cc:List-Id:
	 List-Unsubscribe:List-Archive:List-Post:List-Help:List-Subscribe:
	 From;
	b=OMjl6Mt36FAG/O1x5Iz0ZbpzUiqo6phM1ueyXvd1vjEteJZ3ci02rOr/JX7WL4f3H
	 RAmH5ZBtDXKYZmRkemiBRG8AbgsWPUTY1G7jn/hsA0h5M7Lv2mTaH0JL7xsSkmHWKe
	 m6C1Ie9BL4DH4Tx19TTrkPldNgf5vH6KLP/dRKAo=
Received: from alsa1.perex.cz (localhost.localdomain [127.0.0.1])
	by alsa1.perex.cz (Postfix) with ESMTP id 25472F80128;
	Fri, 25 Dec 2020 09:03:03 +0100 (CET)
X-Original-To: alsa-devel@alsa-project.org
Delivered-To: alsa-devel@alsa-project.org
Received: by alsa1.perex.cz (Postfix, from userid 50401)
 id 3FD1AF801D5; Fri, 25 Dec 2020 09:03:01 +0100 (CET)
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on alsa1.perex.cz
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=SPF_HELO_NONE,SPF_NONE,
 URIBL_BLOCKED autolearn=disabled version=3.4.0
Received: from mx2.suse.de (mx2.suse.de [195.135.220.15])
 (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
 (No client certificate requested)
 by alsa1.perex.cz (Postfix) with ESMTPS id 10F5EF80128
 for <alsa-devel@alsa-project.org>; Fri, 25 Dec 2020 09:02:54 +0100 (CET)
DKIM-Filter: OpenDKIM Filter v2.11.0 alsa1.perex.cz 10F5EF80128
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay2.suse.de (unknown [195.135.221.27])
 by mx2.suse.de (Postfix) with ESMTP id 22FD5ACBA;
 Fri, 25 Dec 2020 08:02:54 +0000 (UTC)
Date: Fri, 25 Dec 2020 09:02:53 +0100
Message-ID: <s5hpn2yfh3m.wl-tiwai@suse.de>
From: Takashi Iwai <tiwai@suse.de>
To: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Subject: Re: [PATCH] ALSA: pcm: use bit field on snd_pcm
In-Reply-To: <878s9m212i.wl-kuninori.morimoto.gx@renesas.com>
References: <878s9m212i.wl-kuninori.morimoto.gx@renesas.com>
User-Agent: Wanderlust/2.15.9 (Almost Unreal) SEMI/1.14.6 (Maruoka)
 FLIM/1.14.9 (=?UTF-8?B?R29qxY0=?=) APEL/10.8 Emacs/25.3
 (x86_64-suse-linux-gnu) MULE/6.0 (HANACHIRUSATO)
MIME-Version: 1.0 (generated by SEMI 1.14.6 - "Maruoka")
Content-Type: text/plain; charset=US-ASCII
Cc: Linux-ALSA <alsa-devel@alsa-project.org>
X-BeenThere: alsa-devel@alsa-project.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: "Alsa-devel mailing list for ALSA developers -
 http://www.alsa-project.org" <alsa-devel.alsa-project.org>
List-Unsubscribe: <https://mailman.alsa-project.org/mailman/options/alsa-devel>, 
 <mailto:alsa-devel-request@alsa-project.org?subject=unsubscribe>
List-Archive: <http://mailman.alsa-project.org/pipermail/alsa-devel/>
List-Post: <mailto:alsa-devel@alsa-project.org>
List-Help: <mailto:alsa-devel-request@alsa-project.org?subject=help>
List-Subscribe: <https://mailman.alsa-project.org/mailman/listinfo/alsa-devel>, 
 <mailto:alsa-devel-request@alsa-project.org?subject=subscribe>
Errors-To: alsa-devel-bounces@alsa-project.org
Sender: "Alsa-devel" <alsa-devel-bounces@alsa-project.org>

On Fri, 25 Dec 2020 01:21:43 +0100,
Kuninori Morimoto wrote:
> 
> 
> From: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
> 
> snd_pcm's internal, nonatomic, no_device_suspend are defined as bool.
> But we can reduce struct size if we use bit field for these.
> This patch converts these.
> 
> Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>

Practically seen, this doesn't reduce the struct size at all, as bool
is usually a byte type.  And, a byte access is even better from the
performance and concurrency POV.

So, unless there is any better reason, I don't think it worth to
switch to bit fields.


thanks,

Takashi

> ---
>  include/sound/pcm.h | 7 ++++---
>  1 file changed, 4 insertions(+), 3 deletions(-)
> 
> diff --git a/include/sound/pcm.h b/include/sound/pcm.h
> index 2336bf9243e1..e836741d2708 100644
> --- a/include/sound/pcm.h
> +++ b/include/sound/pcm.h
> @@ -520,12 +520,13 @@ struct snd_pcm {
>  	wait_queue_head_t open_wait;
>  	void *private_data;
>  	void (*private_free) (struct snd_pcm *pcm);
> -	bool internal; /* pcm is for internal use only */
> -	bool nonatomic; /* whole PCM operations are in non-atomic context */
> -	bool no_device_suspend; /* don't invoke device PM suspend */
>  #if IS_ENABLED(CONFIG_SND_PCM_OSS)
>  	struct snd_pcm_oss oss;
>  #endif
> +	/* bit field */
> +	unsigned int internal:1; /* pcm is for internal use only */
> +	unsigned int nonatomic:1; /* whole PCM operations are in non-atomic context */
> +	unsigned int no_device_suspend:1; /* don't invoke device PM suspend */
>  };
>  
>  /*
> -- 
> 2.25.1
> 
