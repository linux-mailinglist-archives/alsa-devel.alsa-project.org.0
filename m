Return-Path: <alsa-devel-bounces@alsa-project.org>
X-Original-To: lists+alsa-devel@lfdr.de
Delivered-To: lists+alsa-devel@lfdr.de
Received: from alsa0.perex.cz (alsa0.perex.cz [77.48.224.243])
	by mail.lfdr.de (Postfix) with ESMTPS id 0FCFF38FB60
	for <lists+alsa-devel@lfdr.de>; Tue, 25 May 2021 09:06:46 +0200 (CEST)
Received: from alsa1.perex.cz (alsa1.perex.cz [207.180.221.201])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by alsa0.perex.cz (Postfix) with ESMTPS id 9D3AA166D;
	Tue, 25 May 2021 09:05:55 +0200 (CEST)
DKIM-Filter: OpenDKIM Filter v2.11.0 alsa0.perex.cz 9D3AA166D
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=alsa-project.org;
	s=default; t=1621926405;
	bh=UKeCcNYHSimggYIGD/3oBZYlZz+wnLX/OudZ5HooXZE=;
	h=Date:From:To:Subject:In-Reply-To:References:Cc:List-Id:
	 List-Unsubscribe:List-Archive:List-Post:List-Help:List-Subscribe:
	 From;
	b=Kjp9QLLzFF8ZvPb8oicOsaOuXb8VXQRX8fXcAQGNDnz0IIXEIAZmFXZs42Kod625b
	 w5VTNIsMBoym1Z7KVLaQmJlJ6bJKh71j7RLCnK/m0x/d5ZGLIuOXqaBMa5hPM8PTIU
	 V7VXCQJp3zI9ZScxYxQyjbKu9XjBADPn+BDfxINQ=
Received: from alsa1.perex.cz (localhost.localdomain [127.0.0.1])
	by alsa1.perex.cz (Postfix) with ESMTP id 1CA8EF80113;
	Tue, 25 May 2021 09:05:17 +0200 (CEST)
X-Original-To: alsa-devel@alsa-project.org
Delivered-To: alsa-devel@alsa-project.org
Received: by alsa1.perex.cz (Postfix, from userid 50401)
 id DF7A4F801EB; Tue, 25 May 2021 09:05:15 +0200 (CEST)
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on alsa1.perex.cz
X-Spam-Level: 
X-Spam-Status: No, score=-0.1 required=5.0 tests=DKIM_SIGNED,DKIM_VALID,
 DKIM_VALID_AU,RCVD_IN_MSPIKE_H3,RCVD_IN_MSPIKE_WL,SPF_HELO_NONE,SPF_PASS
 autolearn=disabled version=3.4.0
Received: from mx2.suse.de (mx2.suse.de [195.135.220.15])
 (using TLSv1.2 with cipher ECDHE-RSA-AES128-GCM-SHA256 (128/128 bits))
 (No client certificate requested)
 by alsa1.perex.cz (Postfix) with ESMTPS id 9C6D7F8011B
 for <alsa-devel@alsa-project.org>; Tue, 25 May 2021 09:05:13 +0200 (CEST)
DKIM-Filter: OpenDKIM Filter v2.11.0 alsa1.perex.cz 9C6D7F8011B
Authentication-Results: alsa1.perex.cz;
 dkim=pass (1024-bit key) header.d=suse.de header.i=@suse.de
 header.b="0BGiOZM0"; 
 dkim=permerror (0-bit key) header.d=suse.de header.i=@suse.de
 header.b="KQGI6Va6"
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=suse.de; s=susede2_rsa;
 t=1621926313; h=from:from:reply-to:date:date:message-id:message-id:to:to:cc:cc:
 mime-version:mime-version:content-type:content-type:
 in-reply-to:in-reply-to:references:references;
 bh=9un4IKganlZMcLCm9ZMn/Qibi54b+/iSeKlbK6QKBKY=;
 b=0BGiOZM0wNdlDFfuUhoJQv6bo+JJbg62d1e/gDvGQtgMudhGyPg8Rf6kPW9VMi/WNOusgk
 ZYolP6kQwU74FyCI5igZlOPv9EBOKtfF2VsImR/vG6ADM0iaVgfhBRd1XIoBB8CRDqC/Sp
 LWEvb0aRZLqwaOPeGIv6KI+SGNXEtFw=
DKIM-Signature: v=1; a=ed25519-sha256; c=relaxed/relaxed; d=suse.de;
 s=susede2_ed25519; t=1621926313;
 h=from:from:reply-to:date:date:message-id:message-id:to:to:cc:cc:
 mime-version:mime-version:content-type:content-type:
 in-reply-to:in-reply-to:references:references;
 bh=9un4IKganlZMcLCm9ZMn/Qibi54b+/iSeKlbK6QKBKY=;
 b=KQGI6Va6d6YerX9zikjPqYHTuNn4hcLqyoOR/lfEpezjAERihaT7N3Zq6d6D7tN0Q8VPbh
 1rBb/n8wsqbSILAQ==
Received: from relay2.suse.de (unknown [195.135.221.27])
 by mx2.suse.de (Postfix) with ESMTP id 5E34FAE92;
 Tue, 25 May 2021 07:05:13 +0000 (UTC)
Date: Tue, 25 May 2021 09:05:13 +0200
Message-ID: <s5hh7ire1jq.wl-tiwai@suse.de>
From: Takashi Iwai <tiwai@suse.de>
To: Hyeonggon Yoo <42.hyeyoo@gmail.com>
Subject: Re: [PATCH] ALSA: line6: Improve poor error handling in
 line6_init_cap_control
In-Reply-To: <20210524173644.GA116662@hyeyoo>
References: <20210524173644.GA116662@hyeyoo>
User-Agent: Wanderlust/2.15.9 (Almost Unreal) SEMI/1.14.6 (Maruoka)
 FLIM/1.14.9 (=?UTF-8?B?R29qxY0=?=) APEL/10.8 Emacs/25.3
 (x86_64-suse-linux-gnu) MULE/6.0 (HANACHIRUSATO)
MIME-Version: 1.0 (generated by SEMI 1.14.6 - "Maruoka")
Content-Type: text/plain; charset=US-ASCII
Cc: alsa-devel@alsa-project.org,
 Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
 Oliver Neukum <oneukum@suse.com>, Takashi Iwai <tiwai@suse.com>,
 Vasily Khoruzhick <anarsoul@gmail.com>, linux-kernel@vger.kernel.org
X-BeenThere: alsa-devel@alsa-project.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: "Alsa-devel mailing list for ALSA developers -
 http://www.alsa-project.org" <alsa-devel.alsa-project.org>
List-Unsubscribe: <https://mailman.alsa-project.org/mailman/options/alsa-devel>, 
 <mailto:alsa-devel-request@alsa-project.org?subject=unsubscribe>
List-Archive: <http://mailman.alsa-project.org/pipermail/alsa-devel/>
List-Post: <mailto:alsa-devel@alsa-project.org>
List-Help: <mailto:alsa-devel-request@alsa-project.org?subject=help>
List-Subscribe: <https://mailman.alsa-project.org/mailman/listinfo/alsa-devel>, 
 <mailto:alsa-devel-request@alsa-project.org?subject=subscribe>
Errors-To: alsa-devel-bounces@alsa-project.org
Sender: "Alsa-devel" <alsa-devel-bounces@alsa-project.org>

On Mon, 24 May 2021 19:36:44 +0200,
Hyeonggon Yoo wrote:
> 
> line6_init_cap_control doesn't free resources properly when allocations
> like kmalloc, usb_alloc_urb fails. It can cause memory leak when some
> allocations succeed, and then an error occurs.
> 
> This patch makes line6_init_cap_control to properly free the resources,
> freeing previously allocated resources when there's an error.
> 
> Signed-off-by: Hyeonggon Yoo <42.hyeyoo@gmail.com>
> ---
>  sound/usb/line6/driver.c | 36 +++++++++++++++++++++++++++---------
>  1 file changed, 27 insertions(+), 9 deletions(-)
> 
> diff --git a/sound/usb/line6/driver.c b/sound/usb/line6/driver.c
> index 9602929b7de9..6991cb855023 100644
> --- a/sound/usb/line6/driver.c
> +++ b/sound/usb/line6/driver.c
> @@ -688,34 +688,52 @@ static int line6_init_cap_control(struct usb_line6 *line6)
>  
>  	/* initialize USB buffers: */
>  	line6->buffer_listen = kmalloc(LINE6_BUFSIZE_LISTEN, GFP_KERNEL);
> -	if (!line6->buffer_listen)
> -		return -ENOMEM;
> +	if (!line6->buffer_listen) {
> +		ret = -ENOMEM;
> +		goto fail_ret;
> +	}
>  
>  	line6->urb_listen = usb_alloc_urb(0, GFP_KERNEL);
> -	if (!line6->urb_listen)
> -		return -ENOMEM;
> +	if (!line6->urb_listen) {
> +		ret = -ENOMEM;
> +		goto fail1;
> +	}
>  
>  	if (line6->properties->capabilities & LINE6_CAP_CONTROL_MIDI) {
>  		line6->buffer_message = kmalloc(LINE6_MIDI_MESSAGE_MAXLEN, GFP_KERNEL);
> -		if (!line6->buffer_message)
> -			return -ENOMEM;
> +		if (!line6->buffer_message) {
> +			ret = -ENOMEM;
> +			goto fail2;
> +		}
>  
>  		ret = line6_init_midi(line6);
>  		if (ret < 0)
> -			return ret;
> +			goto fail3;
>  	} else {
>  		ret = line6_hwdep_init(line6);
>  		if (ret < 0)
> -			return ret;
> +			goto fail2;
>  	}
>  
>  	ret = line6_start_listen(line6);
>  	if (ret < 0) {
>  		dev_err(line6->ifcdev, "cannot start listening: %d\n", ret);
> -		return ret;
> +		if (line6->properties->capabilities & LINE6_CAP_CONTROL_MIDI)
> +			goto fail3;
> +		else
> +			goto fail2;
>  	}
>  
>  	return 0;
> +
> +fail3:
> +	kfree(line6->buffer_message);
> +fail2:
> +	usb_free_urb(line6->urb_listen);
> +fail1:
> +	kfree(line6->buffer_listen);
> +fail_ret:
> +	return ret;
>  }

Those resources are freed in the common destructor of the card
instance, line6_destruct(), at disconnect callback, so it's redundant
to release them here; even worse, since you haven't re-initialize with
NULL, this change would lead to double-free.


thanks,

Takashi
