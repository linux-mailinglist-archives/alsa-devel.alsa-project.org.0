Return-Path: <alsa-devel-bounces@alsa-project.org>
X-Original-To: lists+alsa-devel@lfdr.de
Delivered-To: lists+alsa-devel@lfdr.de
Received: from alsa0.perex.cz (alsa0.perex.cz [77.48.224.243])
	by mail.lfdr.de (Postfix) with ESMTPS id 4EADD360517
	for <lists+alsa-devel@lfdr.de>; Thu, 15 Apr 2021 10:57:01 +0200 (CEST)
Received: from alsa1.perex.cz (alsa1.perex.cz [207.180.221.201])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by alsa0.perex.cz (Postfix) with ESMTPS id C71E8166B;
	Thu, 15 Apr 2021 10:56:10 +0200 (CEST)
DKIM-Filter: OpenDKIM Filter v2.11.0 alsa0.perex.cz C71E8166B
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=alsa-project.org;
	s=default; t=1618477020;
	bh=lVKUSmbW3Dp2I7hMkF+/RIAQuJieaR1SrjDMJ/p3BoI=;
	h=Date:From:To:Subject:In-Reply-To:References:Cc:List-Id:
	 List-Unsubscribe:List-Archive:List-Post:List-Help:List-Subscribe:
	 From;
	b=kx/clBIpQ6uTRW5snT6emzA0O/bnxWWa/OiwILkXTiwIlrmTfehi+ByPE3SfjvmzY
	 0WBPo9vtchvk6hHkqq0HoG3CxQaQ16U91LQGaCg5+pDIQTNGd+/h9YRh2fmHply2x8
	 YqbkFAtC5QavmCvhw1YmQnSyB+uVEtSkueME/8N8=
Received: from alsa1.perex.cz (localhost.localdomain [127.0.0.1])
	by alsa1.perex.cz (Postfix) with ESMTP id 193FEF8021D;
	Thu, 15 Apr 2021 10:55:32 +0200 (CEST)
X-Original-To: alsa-devel@alsa-project.org
Delivered-To: alsa-devel@alsa-project.org
Received: by alsa1.perex.cz (Postfix, from userid 50401)
 id A46AFF8022B; Thu, 15 Apr 2021 10:55:29 +0200 (CEST)
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on alsa1.perex.cz
X-Spam-Level: *
X-Spam-Status: No, score=1.0 required=5.0 tests=PRX_BODY_30,SPF_HELO_NONE,
 SPF_NONE autolearn=disabled version=3.4.0
Received: from mx2.suse.de (mx2.suse.de [195.135.220.15])
 (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
 (No client certificate requested)
 by alsa1.perex.cz (Postfix) with ESMTPS id 9F3B2F800FF
 for <alsa-devel@alsa-project.org>; Thu, 15 Apr 2021 10:55:23 +0200 (CEST)
DKIM-Filter: OpenDKIM Filter v2.11.0 alsa1.perex.cz 9F3B2F800FF
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay2.suse.de (unknown [195.135.221.27])
 by mx2.suse.de (Postfix) with ESMTP id B7519B036;
 Thu, 15 Apr 2021 08:55:22 +0000 (UTC)
Date: Thu, 15 Apr 2021 10:55:22 +0200
Message-ID: <s5hmtu0sz9h.wl-tiwai@suse.de>
From: Takashi Iwai <tiwai@suse.de>
To: "Gong, Sishuai" <sishuai@purdue.edu>
Subject: Re: [Problem] A data race in snd_ctl_elem_add()
In-Reply-To: <FEEBF384-44BE-42CF-8FB3-93470933F64F@purdue.edu>
References: <FEEBF384-44BE-42CF-8FB3-93470933F64F@purdue.edu>
User-Agent: Wanderlust/2.15.9 (Almost Unreal) SEMI/1.14.6 (Maruoka)
 FLIM/1.14.9 (=?UTF-8?B?R29qxY0=?=) APEL/10.8 Emacs/25.3
 (x86_64-suse-linux-gnu) MULE/6.0 (HANACHIRUSATO)
MIME-Version: 1.0 (generated by SEMI 1.14.6 - "Maruoka")
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
Cc: "alsa-devel@alsa-project.org" <alsa-devel@alsa-project.org>,
 "tiwai@suse.com" <tiwai@suse.com>
X-BeenThere: alsa-devel@alsa-project.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: "Alsa-devel mailing list for ALSA developers -
 http://www.alsa-project.org" <alsa-devel.alsa-project.org>
List-Unsubscribe: <https://mailman.alsa-project.org/mailman/options/alsa-devel>, 
 <mailto:alsa-devel-request@alsa-project.org?subject=unsubscribe>
List-Archive: <http://mailman.alsa-project.org/pipermail/alsa-devel/>
List-Post: <mailto:alsa-devel@alsa-project.org>
List-Help: <mailto:alsa-devel-request@alsa-project.org?subject=help>
List-Subscribe: <https://mailman.alsa-project.org/mailman/listinfo/alsa-devel>, 
 <mailto:alsa-devel-request@alsa-project.org?subject=subscribe>
Errors-To: alsa-devel-bounces@alsa-project.org
Sender: "Alsa-devel" <alsa-devel-bounces@alsa-project.org>

On Thu, 15 Apr 2021 03:47:14 +0200,
Gong, Sishuai wrote:
> 
> Hi,
> 
> We found a data race in sound/core/control.c in linux-5.12-rc3 and we are able to reproduce it under x86. 
> In general, we found when 2 kernel threads are both running snd_ctl_elem_add(),
> one may read a stale value of card->user_ctl_count, as shown below.
> 
> Currently, we havenâ€™t found any explicit errors due to this data race, but it looks the reader threads 
> may operate in an inconsistent  state, where card->user_ctl_count + 1 is actually bigger 
> than MAX_USER_CONTROLS, so we want to point it out.
>  
> Thread 1					Thread 2
> //snd_ctl_elem_add()		//snd_ctl_elem_add()
> 						if (card->user_ctl_count + 1 > MAX_USER_CONTROLS)
> 							return -ENOMEM;
> 						
> card->user_ctl_count++;
> unlock:
> up_write(&card->controls_rwsem);
> return err;

Thanks for the report.  Indeed this is a race at read.

OTOH, it's not much serious since this check is only for a sort of
soft-limit to avoid the memory exhaustion.  If any, we can add the
same card->user_ctl_count check just before __snd_ctl_add_replace()
call, but maybe not worth for extra work.

To be noted, the relevant code was already changed significantly for
5.13 (currently in for-next branch), hence the fix I mentioned in the
above won't be applicable.  And, I noticed that a similar problem is
seen there, even worse -- a race may happen at the write side in this
case, which needs a fix.  Will take a deeper look later.


thanks,

Takashi
