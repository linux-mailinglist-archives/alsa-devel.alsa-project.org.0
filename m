Return-Path: <alsa-devel-bounces@alsa-project.org>
X-Original-To: lists+alsa-devel@lfdr.de
Delivered-To: lists+alsa-devel@lfdr.de
Received: from alsa0.perex.cz (alsa0.perex.cz [77.48.224.243])
	by mail.lfdr.de (Postfix) with ESMTPS id 205CA626AA
	for <lists+alsa-devel@lfdr.de>; Mon,  8 Jul 2019 18:56:29 +0200 (CEST)
Received: from alsa1.perex.cz (alsa1.perex.cz [207.180.221.201])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by alsa0.perex.cz (Postfix) with ESMTPS id 8971E1670;
	Mon,  8 Jul 2019 18:55:38 +0200 (CEST)
DKIM-Filter: OpenDKIM Filter v2.11.0 alsa0.perex.cz 8971E1670
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=alsa-project.org;
	s=default; t=1562604988;
	bh=GyXSkFDgCcwyeFQfdA40yxi6a6cANh23spLdPPJd5V4=;
	h=Date:From:To:In-Reply-To:References:Cc:Subject:List-Id:
	 List-Unsubscribe:List-Archive:List-Post:List-Help:List-Subscribe:
	 From;
	b=uEYvk7RY/adfi0axptKvOTexRjFwZNtLq4msIlDQb3O6g3EmGTLgu4WPzV0jjcu35
	 SBT615cA7sxsp+TCdRo2vTX6SI/iiCvMSRVzXr82tM5gVYvw3OSFm2mU1bTd/qahJ8
	 tHrZMc1cBJA8m5LUUfd1PdMEZAqVh/0/rNysyY3A=
Received: from alsa1.perex.cz (localhost.localdomain [127.0.0.1])
	by alsa1.perex.cz (Postfix) with ESMTP id B7B08F80268;
	Mon,  8 Jul 2019 18:54:43 +0200 (CEST)
X-Original-To: alsa-devel@alsa-project.org
Delivered-To: alsa-devel@alsa-project.org
Received: by alsa1.perex.cz (Postfix, from userid 50401)
 id 679D9F80268; Mon,  8 Jul 2019 18:54:41 +0200 (CEST)
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on alsa1.perex.cz
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=SPF_HELO_NONE,SPF_PASS,
 URIBL_BLOCKED autolearn=disabled version=3.4.0
Received: from mx1.suse.de (mx2.suse.de [195.135.220.15])
 (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
 (No client certificate requested)
 by alsa1.perex.cz (Postfix) with ESMTPS id 3BEF4F801A4
 for <alsa-devel@alsa-project.org>; Mon,  8 Jul 2019 18:54:37 +0200 (CEST)
DKIM-Filter: OpenDKIM Filter v2.11.0 alsa1.perex.cz 3BEF4F801A4
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay2.suse.de (unknown [195.135.220.254])
 by mx1.suse.de (Postfix) with ESMTP id 4B451AD26;
 Mon,  8 Jul 2019 16:54:37 +0000 (UTC)
Date: Mon, 08 Jul 2019 18:54:37 +0200
Message-ID: <s5hd0ikjwky.wl-tiwai@suse.de>
From: Takashi Iwai <tiwai@suse.de>
To: Evan Green <evgreen@chromium.org>
In-Reply-To: <CAE=gft72HzSUG6Yc0G2wTdGgmUste67ZUDibjBttXZVD7Kds8Q@mail.gmail.com>
References: <20190705100605.19945-1-tiwai@suse.de>
 <CAE=gft72HzSUG6Yc0G2wTdGgmUste67ZUDibjBttXZVD7Kds8Q@mail.gmail.com>
User-Agent: Wanderlust/2.15.9 (Almost Unreal) SEMI/1.14.6 (Maruoka)
 FLIM/1.14.9 (=?UTF-8?B?R29qxY0=?=) APEL/10.8 Emacs/25.3
 (x86_64-suse-linux-gnu) MULE/6.0 (HANACHIRUSATO)
MIME-Version: 1.0 (generated by SEMI 1.14.6 - "Maruoka")
Cc: alsa-devel@alsa-project.org
Subject: Re: [alsa-devel] [PATCH] ALSA: hda: Simplify
	snd_hdac_refresh_widgets()
X-BeenThere: alsa-devel@alsa-project.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: "Alsa-devel mailing list for ALSA developers -
 http://www.alsa-project.org" <alsa-devel.alsa-project.org>
List-Unsubscribe: <https://mailman.alsa-project.org/mailman/options/alsa-devel>, 
 <mailto:alsa-devel-request@alsa-project.org?subject=unsubscribe>
List-Archive: <http://mailman.alsa-project.org/pipermail/alsa-devel/>
List-Post: <mailto:alsa-devel@alsa-project.org>
List-Help: <mailto:alsa-devel-request@alsa-project.org?subject=help>
List-Subscribe: <https://mailman.alsa-project.org/mailman/listinfo/alsa-devel>, 
 <mailto:alsa-devel-request@alsa-project.org?subject=subscribe>
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: 7bit
Errors-To: alsa-devel-bounces@alsa-project.org
Sender: "Alsa-devel" <alsa-devel-bounces@alsa-project.org>

On Mon, 08 Jul 2019 18:49:01 +0200,
Evan Green wrote:
> 
> On Fri, Jul 5, 2019 at 3:06 AM Takashi Iwai <tiwai@suse.de> wrote:
> >
> > Along with the recent fix for the races of snd_hdac_refresh_widgets()
> > it turned out that the instantiation of widgets sysfs at
> > snd_hdac_sysfs_reinit() could cause a race.  The race itself was
> > already covered later by extending the mutex protection range, the
> > commit 98482377dc72 ("ALSA: hda: Fix widget_mutex incomplete
> > protection"), but this also indicated that the call of *_reinit() is
> > basically superfluous, as the widgets shall be created sooner or later
> > from snd_hdac_device_register().
> >
> > This patch removes the redundant call of snd_hdac_sysfs_reinit() at
> > first.  By this removal, the sysfs argument itself in
> > snd_hdac_refresh_widgets() becomes superfluous, too, because the only
> > case sysfs=false is always with codec->widgets=NULL.  So, we drop this
> > redundant argument as well.
> >
> > Signed-off-by: Takashi Iwai <tiwai@suse.de>
> > ---
> >  include/sound/hdaudio.h      |  2 +-
> >  sound/hda/hdac_device.c      | 13 +++++--------
> >  sound/hda/hdac_sysfs.c       |  2 +-
> >  sound/pci/hda/hda_codec.c    |  2 +-
> >  sound/soc/codecs/hdac_hdmi.c |  2 +-
> >  5 files changed, 9 insertions(+), 12 deletions(-)
> >
> > diff --git a/include/sound/hdaudio.h b/include/sound/hdaudio.h
> > index e8346784cf3f..f475293d0668 100644
> > --- a/include/sound/hdaudio.h
> > +++ b/include/sound/hdaudio.h
> > @@ -120,7 +120,7 @@ void snd_hdac_device_unregister(struct hdac_device *codec);
> >  int snd_hdac_device_set_chip_name(struct hdac_device *codec, const char *name);
> >  int snd_hdac_codec_modalias(struct hdac_device *hdac, char *buf, size_t size);
> >
> > -int snd_hdac_refresh_widgets(struct hdac_device *codec, bool sysfs);
> > +int snd_hdac_refresh_widgets(struct hdac_device *codec);
> >
> >  unsigned int snd_hdac_make_cmd(struct hdac_device *codec, hda_nid_t nid,
> >                                unsigned int verb, unsigned int parm);
> > diff --git a/sound/hda/hdac_device.c b/sound/hda/hdac_device.c
> > index 11050bfd8068..a265c1d68876 100644
> > --- a/sound/hda/hdac_device.c
> > +++ b/sound/hda/hdac_device.c
> > @@ -89,7 +89,7 @@ int snd_hdac_device_init(struct hdac_device *codec, struct hdac_bus *bus,
> >
> >         fg = codec->afg ? codec->afg : codec->mfg;
> >
> > -       err = snd_hdac_refresh_widgets(codec, false);
> > +       err = snd_hdac_refresh_widgets(codec);
> >         if (err < 0)
> >                 goto error;
> >
> > @@ -394,9 +394,8 @@ static void setup_fg_nodes(struct hdac_device *codec)
> >  /**
> >   * snd_hdac_refresh_widgets - Reset the widget start/end nodes
> >   * @codec: the codec object
> > - * @sysfs: re-initialize sysfs tree, too
> >   */
> > -int snd_hdac_refresh_widgets(struct hdac_device *codec, bool sysfs)
> > +int snd_hdac_refresh_widgets(struct hdac_device *codec)
> >  {
> >         hda_nid_t start_nid;
> >         int nums, err = 0;
> > @@ -414,11 +413,9 @@ int snd_hdac_refresh_widgets(struct hdac_device *codec, bool sysfs)
> >                 goto unlock;
> >         }
> >
> > -       if (sysfs) {
> > -               err = hda_widget_sysfs_reinit(codec, start_nid, nums);
> > -               if (err < 0)
> > -                       goto unlock;
> > -       }
> > +       err = hda_widget_sysfs_reinit(codec, start_nid, nums);
> > +       if (err < 0)
> > +               goto unlock;
> >
> >         codec->num_nodes = nums;
> >         codec->start_nid = start_nid;
> > diff --git a/sound/hda/hdac_sysfs.c b/sound/hda/hdac_sysfs.c
> > index 909d5ef1179c..e56e83325903 100644
> > --- a/sound/hda/hdac_sysfs.c
> > +++ b/sound/hda/hdac_sysfs.c
> > @@ -428,7 +428,7 @@ int hda_widget_sysfs_reinit(struct hdac_device *codec,
> >         int i;
> >
> >         if (!codec->widgets)
> > -               return hda_widget_sysfs_init(codec);
> > +               return 0;
> 
> Hi Takashi,
> So this no-ops out reinit() if there are no widgets. Are there any
> cases in which hda_widget_sysfs_exit() could be called, followed by
> hda_widget_sysfs_reinit()? That would be problematic, as exit would
> wipe out the widgets, but now reinit would never restore them.

Such a pattern must be a bug.

> Are there any plausible cases where a caller might call
> refresh_widgets() and then attempt to utilize or otherwise depend on
> the widgets being present? The semantics of this function seem odd to
> me now, as it will now return having updated num_nodes, start_nid, and
> end_nid, but without having actually built the widgets array.
> 
> I'm probably biased, but I still think it makes more sense to let
> sysfs_reinit actually reinitialize the widgets, but just pass down
> start_nid and count so that the tree is built correctly.

The semantic is that refresh is a refresh -- not creating a stuff.

Actually this helper function is exposed solely for the case where the
widget tree is updated at the codec driver probe time (typically Intel
HDMI codec).  If it's used for anything else, especially implicitly
relying on its creation behavior, it's a bug to be fixed.


thanks,

Takashi
_______________________________________________
Alsa-devel mailing list
Alsa-devel@alsa-project.org
https://mailman.alsa-project.org/mailman/listinfo/alsa-devel
