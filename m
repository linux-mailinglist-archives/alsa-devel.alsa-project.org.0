Return-Path: <alsa-devel-bounces@alsa-project.org>
X-Original-To: lists+alsa-devel@lfdr.de
Delivered-To: lists+alsa-devel@lfdr.de
Received: from alsa0.perex.cz (alsa0.perex.cz [77.48.224.243])
	by mail.lfdr.de (Postfix) with ESMTPS id 28971206E24
	for <lists+alsa-devel@lfdr.de>; Wed, 24 Jun 2020 09:47:36 +0200 (CEST)
Received: from alsa1.perex.cz (alsa1.perex.cz [207.180.221.201])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by alsa0.perex.cz (Postfix) with ESMTPS id C26651804;
	Wed, 24 Jun 2020 09:46:45 +0200 (CEST)
DKIM-Filter: OpenDKIM Filter v2.11.0 alsa0.perex.cz C26651804
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=alsa-project.org;
	s=default; t=1592984855;
	bh=Ja1f/dW/hu7sDLiOiMsJTqq+gQAEWNx2f/lWJsmVMhs=;
	h=Date:From:To:Subject:In-Reply-To:References:Cc:List-Id:
	 List-Unsubscribe:List-Archive:List-Post:List-Help:List-Subscribe:
	 From;
	b=vnZG4+pYeMZJzmfr0oVWXU2JvP3Qnqg2r0gU2Ecvk9aNURhnrOy8BJHlVhc8dSUg+
	 82HkrTlJt8J2Vz1Wd7q/WfZcZXbEE7hZ0ahm1FAX0RO4CQM/3k+UHjdUbQ9VVBTyTM
	 Gola7WfiGleNKG/hSbjl+WKNtU3r+rASrcz/d/aM=
Received: from alsa1.perex.cz (localhost.localdomain [127.0.0.1])
	by alsa1.perex.cz (Postfix) with ESMTP id DAA3CF80084;
	Wed, 24 Jun 2020 09:45:54 +0200 (CEST)
X-Original-To: alsa-devel@alsa-project.org
Delivered-To: alsa-devel@alsa-project.org
Received: by alsa1.perex.cz (Postfix, from userid 50401)
 id 74609F8015B; Wed, 24 Jun 2020 09:45:51 +0200 (CEST)
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on alsa1.perex.cz
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=RCVD_IN_MSPIKE_H3,
 RCVD_IN_MSPIKE_WL,SPF_HELO_NONE,SPF_PASS autolearn=disabled version=3.4.0
Received: from mx2.suse.de (mx2.suse.de [195.135.220.15])
 (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
 (No client certificate requested)
 by alsa1.perex.cz (Postfix) with ESMTPS id 1B303F80084
 for <alsa-devel@alsa-project.org>; Wed, 24 Jun 2020 09:45:46 +0200 (CEST)
DKIM-Filter: OpenDKIM Filter v2.11.0 alsa1.perex.cz 1B303F80084
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay2.suse.de (unknown [195.135.221.27])
 by mx2.suse.de (Postfix) with ESMTP id 25C80AD4B;
 Wed, 24 Jun 2020 07:45:45 +0000 (UTC)
Date: Wed, 24 Jun 2020 09:45:45 +0200
Message-ID: <s5hr1u4lxee.wl-tiwai@suse.de>
From: Takashi Iwai <tiwai@suse.de>
To: Harsha Priya <harshapriya.n@intel.com>
Subject: Re: [PATCH] ALSA: hda/hdmi: Add Intel silent stream support
In-Reply-To: <1592954796-12449-1-git-send-email-harshapriya.n@intel.com>
References: <1592954796-12449-1-git-send-email-harshapriya.n@intel.com>
User-Agent: Wanderlust/2.15.9 (Almost Unreal) SEMI/1.14.6 (Maruoka)
 FLIM/1.14.9 (=?UTF-8?B?R29qxY0=?=) APEL/10.8 Emacs/25.3
 (x86_64-suse-linux-gnu) MULE/6.0 (HANACHIRUSATO)
MIME-Version: 1.0 (generated by SEMI 1.14.6 - "Maruoka")
Content-Type: text/plain; charset=US-ASCII
Cc: kai.vehmanen@intel.com, Emmanuel Jillela <emmanuel.jillela@intel.com>,
 alsa-devel@alsa-project.org
X-BeenThere: alsa-devel@alsa-project.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: "Alsa-devel mailing list for ALSA developers -
 http://www.alsa-project.org" <alsa-devel.alsa-project.org>
List-Unsubscribe: <https://mailman.alsa-project.org/mailman/options/alsa-devel>, 
 <mailto:alsa-devel-request@alsa-project.org?subject=unsubscribe>
List-Archive: <http://mailman.alsa-project.org/pipermail/alsa-devel/>
List-Post: <mailto:alsa-devel@alsa-project.org>
List-Help: <mailto:alsa-devel-request@alsa-project.org?subject=help>
List-Subscribe: <https://mailman.alsa-project.org/mailman/listinfo/alsa-devel>, 
 <mailto:alsa-devel-request@alsa-project.org?subject=subscribe>
Errors-To: alsa-devel-bounces@alsa-project.org
Sender: "Alsa-devel" <alsa-devel-bounces@alsa-project.org>

On Wed, 24 Jun 2020 01:26:36 +0200,
Harsha Priya wrote:
> 
> External HDMI receivers have analog circuitry that needs to be powered-on
> when exiting standby, and a mechanism to detect PCM v. IEC61937 data.
> These two steps take time and up to 2-3 seconds of audio may be muted
> when starting playback.
> 
> Intel hardware can keep the link active with a 'silent stream', so that
> the receiver does not go through those two steps when valid audio is
> transmitted. This mechanism relies on an info packet and preventing the
> codec from going to D3, which will increase the platform static power
> consumption. The info packet assumes a basic 2ch stereo, and the silent
> stream is enabled when connecting a monitor. In case of format changes the
> detection of PCM v. IEC61937 needs to be re-run. In this case there is no
> way to avoid the 2-3s mute.
> 
> The silent stream is enabled with a Kconfig option, as well as a kernel
> parameter should there be a need to override the build time default.

I'm not sure whether the module option is the best interface.
An alternative is a mixer element that controls dynamically.  Then
it'll be per card unlike the module option.

And I think Kconfig is redundant.

> Silent stream is supported in Intel platforms Skylake and beyond.
> Tested HDMI plug-out plug-in from Intel Cometlake based Chromebook
> connected to few different monitors.

IMO, the feature enablement should be done only for those devices.
The current patch influences on all HDMI devices including AMD and
others that are irrelevant so far.

About the code changes:

>  /* update ELD and jack state via audio component */
>  static void sync_eld_via_acomp(struct hda_codec *codec,
>  			       struct hdmi_spec_per_pin *per_pin)
>  {
>  	struct hdmi_spec *spec = codec->spec;
>  	struct hdmi_eld *eld = &spec->temp_eld;
> +	bool monitor_prev, monitor_next;
>  
>  	mutex_lock(&per_pin->lock);
>  	eld->monitor_present = false;
> +	monitor_prev = per_pin->sink_eld.monitor_present;
>  	eld->eld_size = snd_hdac_acomp_get_eld(&codec->core, per_pin->pin_nid,
>  				      per_pin->dev_id, &eld->monitor_present,
>  				      eld->eld_buffer, ELD_MAX_SIZE);
>  	eld->eld_valid = (eld->eld_size > 0);
>  	update_eld(codec, per_pin, eld, 0);
> +	monitor_next = per_pin->sink_eld.monitor_present;
>  	mutex_unlock(&per_pin->lock);
> +
> +	/*
> +	 * Power-up will call hdmi_present_sense, so the PM calls
> +	 * have to be done without mutex held.
> +	 */
> +
> +	if (enable_silent_stream) {
> +		if (!monitor_prev && monitor_next) {

Isn't a valid ELD mandatory?  The monitor_present flag itself can be
set even for the monitor without audio support, IIRC.

> +			snd_hda_power_up_pm(codec);
> +			silent_stream_enable(codec, per_pin);
> +		} else if (monitor_prev && !monitor_next)
> +			snd_hda_power_down_pm(codec);

This power up/down sequence may lead to the unbalance if the
enable_silent_stream flag is flipped during operation.


thanks,

Takashi
