Return-Path: <alsa-devel-bounces@alsa-project.org>
X-Original-To: lists+alsa-devel@lfdr.de
Delivered-To: lists+alsa-devel@lfdr.de
Received: from alsa0.perex.cz (alsa0.perex.cz [77.48.224.243])
	by mail.lfdr.de (Postfix) with ESMTPS id 5DE93AE447
	for <lists+alsa-devel@lfdr.de>; Tue, 10 Sep 2019 09:08:31 +0200 (CEST)
Received: from alsa1.perex.cz (alsa1.perex.cz [207.180.221.201])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by alsa0.perex.cz (Postfix) with ESMTPS id B49C9166C;
	Tue, 10 Sep 2019 09:07:40 +0200 (CEST)
DKIM-Filter: OpenDKIM Filter v2.11.0 alsa0.perex.cz B49C9166C
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=alsa-project.org;
	s=default; t=1568099310;
	bh=55nLe//AeYF8HMFgs8U61oJzqdC6vU+msLAPfW7nu1A=;
	h=Date:From:To:In-Reply-To:References:Cc:Subject:List-Id:
	 List-Unsubscribe:List-Archive:List-Post:List-Help:List-Subscribe:
	 From;
	b=Qk4r6BNics3EJ+f+0CdRz/IG4MRquqoA0Zsp9b8Hh68+5s9YJNZQLwog2IYc4yb50
	 23z5Msj5heNKmEGQemM2lRdzcQTglZ6iBcfkBBorxZreOKL4Lll8DtUT8powGynv8Z
	 8AkTOga/pKu3qfKIVG+eU06cOjzg2CSHpQc5B5SA=
Received: from alsa1.perex.cz (localhost.localdomain [127.0.0.1])
	by alsa1.perex.cz (Postfix) with ESMTP id 1DFE8F80393;
	Tue, 10 Sep 2019 09:06:46 +0200 (CEST)
X-Original-To: alsa-devel@alsa-project.org
Delivered-To: alsa-devel@alsa-project.org
Received: by alsa1.perex.cz (Postfix, from userid 50401)
 id 4C352F80368; Tue, 10 Sep 2019 09:06:43 +0200 (CEST)
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on alsa1.perex.cz
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=SPF_HELO_NONE,SPF_PASS,
 URIBL_BLOCKED autolearn=disabled version=3.4.0
Received: from mx1.suse.de (mx2.suse.de [195.135.220.15])
 (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
 (No client certificate requested)
 by alsa1.perex.cz (Postfix) with ESMTPS id E2619F800C9
 for <alsa-devel@alsa-project.org>; Tue, 10 Sep 2019 09:06:40 +0200 (CEST)
DKIM-Filter: OpenDKIM Filter v2.11.0 alsa1.perex.cz E2619F800C9
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay2.suse.de (unknown [195.135.220.254])
 by mx1.suse.de (Postfix) with ESMTP id 5557EB0E5;
 Tue, 10 Sep 2019 07:06:39 +0000 (UTC)
Date: Tue, 10 Sep 2019 09:06:38 +0200
Message-ID: <s5hef0oaav5.wl-tiwai@suse.de>
From: Takashi Iwai <tiwai@suse.de>
To: Arnd Bergmann <arnd@arndb.de>
In-Reply-To: <CAK8P3a0WDB_UvAnwfPDyR_maEefE4Qh++fHxAP61=8JfOFmy6w@mail.gmail.com>
References: <20190909195159.3326134-1-arnd@arndb.de>
 <3b69e0ec-63cb-4888-9faa-acb7638d71dc@linux.intel.com>
 <CAK8P3a0WDB_UvAnwfPDyR_maEefE4Qh++fHxAP61=8JfOFmy6w@mail.gmail.com>
User-Agent: Wanderlust/2.15.9 (Almost Unreal) SEMI/1.14.6 (Maruoka)
 FLIM/1.14.9 (=?UTF-8?B?R29qxY0=?=) APEL/10.8 Emacs/25.3
 (x86_64-suse-linux-gnu) MULE/6.0 (HANACHIRUSATO)
MIME-Version: 1.0 (generated by SEMI 1.14.6 - "Maruoka")
Cc: ALSA Development Mailing List <alsa-devel@alsa-project.org>,
 Liam Girdwood <lgirdwood@gmail.com>, Pan Xiuli <xiuli.pan@linux.intel.com>,
 "linux-kernel@vger.kernel.org" <linux-kernel@vger.kernel.org>,
 Evan Green <evgreen@chromium.org>,
 Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>,
 Mark Brown <broonie@kernel.org>
Subject: Re: [alsa-devel] [PATCH] ASoC: SOF: Intel: work
	around	snd_hdac_aligned_read link failure
X-BeenThere: alsa-devel@alsa-project.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: "Alsa-devel mailing list for ALSA developers -
 http://www.alsa-project.org" <alsa-devel.alsa-project.org>
List-Unsubscribe: <https://mailman.alsa-project.org/mailman/options/alsa-devel>, 
 <mailto:alsa-devel-request@alsa-project.org?subject=unsubscribe>
List-Archive: <http://mailman.alsa-project.org/pipermail/alsa-devel/>
List-Post: <mailto:alsa-devel@alsa-project.org>
List-Help: <mailto:alsa-devel-request@alsa-project.org?subject=help>
List-Subscribe: <https://mailman.alsa-project.org/mailman/listinfo/alsa-devel>, 
 <mailto:alsa-devel-request@alsa-project.org?subject=subscribe>
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: 7bit
Errors-To: alsa-devel-bounces@alsa-project.org
Sender: "Alsa-devel" <alsa-devel-bounces@alsa-project.org>

On Mon, 09 Sep 2019 22:51:23 +0200,
Arnd Bergmann wrote:
> 
> On Mon, Sep 9, 2019 at 10:39 PM Pierre-Louis Bossart
> <pierre-louis.bossart@linux.intel.com> wrote:
> >
> > On 9/9/19 2:51 PM, Arnd Bergmann wrote:
> > > When CONFIG_SND_HDA_ALIGNED_MMIO is selected by another driver
> > > (i.e. Tegra) that selects CONFIG_SND_HDA_CORE as a loadable
> > > module, but SND_SOC_SOF_HDA_COMMON is built-in, we get a
> > > link failure from some functions that access the hda register:
> > >
> > > sound/soc/sof/intel/hda.o: In function `hda_ipc_irq_dump':
> > > hda.c:(.text+0x784): undefined reference to `snd_hdac_aligned_read'
> > > sound/soc/sof/intel/hda-stream.o: In function `hda_dsp_stream_threaded_handler':
> > > hda-stream.c:(.text+0x12e4): undefined reference to `snd_hdac_aligned_read'
> > > hda-stream.c:(.text+0x12f8): undefined reference to `snd_hdac_aligned_write'
> > >
> > > Add an explicit 'select' statement as a workaround. This is
> > > not a great solution, but it's the easiest way I could come
> > > up with.
> >
> > Thanks for spotting this, I don't think anyone on the SOF team looked at
> > this. Maybe we can filter with depends on !TEGRA or
> > !SND_HDA_ALIGNED_MMIO at the SOF Intel top-level instead?
> 
> That doesn't sound much better than my approach, but could also work.
> One idea that I had but did not manage to implement was to move out
> the snd_hdac_aligned_read/write functions from the core hda code
> into a separate file. I think that would be the cleanest solution,
> as it decouples the problem from any drivers.

Yeah, that's a tricky problem because of the reverse-selection, as
usual...

Another solution would be to just avoid byte/word access but use only
long access, i.e. replace snd_hdac_chip_readb() with
snd_hdac_chip_readl() with the aligned register and bit shift.
The aligned access helper is needed only for the register that isn't
aligned with 4 bytes offset.

And, one remaining question is whether it makes sense to enable
CONFIG_SND_SOC_SOF_HDA without CONFIG_SND_HDA_EXT_CORE (that selects
CONFIG_SND_HDA_CORE, too).  Currently it seems conditionally selected,
but many codes do depend on snd_hdac_ext_*() and other helper code
with CONFIG_SND_SOC_SOF_HDA-ifdef.


thanks,

Takashi
_______________________________________________
Alsa-devel mailing list
Alsa-devel@alsa-project.org
https://mailman.alsa-project.org/mailman/listinfo/alsa-devel
