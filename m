Return-Path: <alsa-devel-bounces@alsa-project.org>
X-Original-To: lists+alsa-devel@lfdr.de
Delivered-To: lists+alsa-devel@lfdr.de
Received: from alsa0.perex.cz (alsa0.perex.cz [77.48.224.243])
	by mail.lfdr.de (Postfix) with ESMTPS id 463CD35F1BF
	for <lists+alsa-devel@lfdr.de>; Wed, 14 Apr 2021 12:54:05 +0200 (CEST)
Received: from alsa1.perex.cz (alsa1.perex.cz [207.180.221.201])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by alsa0.perex.cz (Postfix) with ESMTPS id 8B3E116F0;
	Wed, 14 Apr 2021 12:53:14 +0200 (CEST)
DKIM-Filter: OpenDKIM Filter v2.11.0 alsa0.perex.cz 8B3E116F0
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=alsa-project.org;
	s=default; t=1618397644;
	bh=r1w5RVSyAN0lZxGtWs0R/GNJatf1fFubW2rxERLZwyA=;
	h=Date:From:To:Subject:In-Reply-To:References:Cc:List-Id:
	 List-Unsubscribe:List-Archive:List-Post:List-Help:List-Subscribe:
	 From;
	b=mXppf1ats56h0N+AFMjniZWrB9nIk7eYtZlxZnkB4A66wUlVh44ke+/HpcdLM7mbj
	 XjS6yYIxAOBMZvwth78QXh2cBT5KHpkByMEIk1N6dBxCz70AQFHijjCY3C1/yDZbOQ
	 wgIpegkeB9lNFQxjTi7kRidgTQRib4v3vIVuu0mk=
Received: from alsa1.perex.cz (localhost.localdomain [127.0.0.1])
	by alsa1.perex.cz (Postfix) with ESMTP id DC0FDF800FF;
	Wed, 14 Apr 2021 12:52:35 +0200 (CEST)
X-Original-To: alsa-devel@alsa-project.org
Delivered-To: alsa-devel@alsa-project.org
Received: by alsa1.perex.cz (Postfix, from userid 50401)
 id 1A8BEF80269; Wed, 14 Apr 2021 12:52:33 +0200 (CEST)
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on alsa1.perex.cz
X-Spam-Level: *
X-Spam-Status: No, score=1.0 required=5.0 tests=PRX_BODY_30,SPF_HELO_NONE,
 SPF_NONE,URIBL_BLOCKED autolearn=disabled version=3.4.0
Received: from mx2.suse.de (mx2.suse.de [195.135.220.15])
 (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
 (No client certificate requested)
 by alsa1.perex.cz (Postfix) with ESMTPS id 98583F800FF
 for <alsa-devel@alsa-project.org>; Wed, 14 Apr 2021 12:52:25 +0200 (CEST)
DKIM-Filter: OpenDKIM Filter v2.11.0 alsa1.perex.cz 98583F800FF
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay2.suse.de (unknown [195.135.221.27])
 by mx2.suse.de (Postfix) with ESMTP id 6C463AEEE;
 Wed, 14 Apr 2021 10:52:25 +0000 (UTC)
Date: Wed, 14 Apr 2021 12:52:25 +0200
Message-ID: <s5hy2dluoie.wl-tiwai@suse.de>
From: Takashi Iwai <tiwai@suse.de>
To: Jaroslav Kysela <perex@perex.cz>
Subject: Re: [PATCH] ALSA: control_led - fix the stack usage (control element
 ops)
In-Reply-To: <7624e19b-d618-0dcd-8798-989a1375614f@perex.cz>
References: <20210414093031.1934261-1-perex@perex.cz>
 <s5h35vtw681.wl-tiwai@suse.de>
 <7624e19b-d618-0dcd-8798-989a1375614f@perex.cz>
User-Agent: Wanderlust/2.15.9 (Almost Unreal) SEMI/1.14.6 (Maruoka)
 FLIM/1.14.9 (=?UTF-8?B?R29qxY0=?=) APEL/10.8 Emacs/25.3
 (x86_64-suse-linux-gnu) MULE/6.0 (HANACHIRUSATO)
MIME-Version: 1.0 (generated by SEMI 1.14.6 - "Maruoka")
Content-Type: text/plain; charset=US-ASCII
Cc: Nathan Chancellor <nathan@kernel.org>,
 ALSA development <alsa-devel@alsa-project.org>
X-BeenThere: alsa-devel@alsa-project.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: "Alsa-devel mailing list for ALSA developers -
 http://www.alsa-project.org" <alsa-devel.alsa-project.org>
List-Unsubscribe: <https://mailman.alsa-project.org/mailman/options/alsa-devel>, 
 <mailto:alsa-devel-request@alsa-project.org?subject=unsubscribe>
List-Archive: <http://mailman.alsa-project.org/pipermail/alsa-devel/>
List-Post: <mailto:alsa-devel@alsa-project.org>
List-Help: <mailto:alsa-devel-request@alsa-project.org?subject=help>
List-Subscribe: <https://mailman.alsa-project.org/mailman/listinfo/alsa-devel>, 
 <mailto:alsa-devel-request@alsa-project.org?subject=subscribe>
Errors-To: alsa-devel-bounces@alsa-project.org
Sender: "Alsa-devel" <alsa-devel-bounces@alsa-project.org>

On Wed, 14 Apr 2021 12:09:07 +0200,
Jaroslav Kysela wrote:
> 
> Dne 14. 04. 21 v 11:44 Takashi Iwai napsal(a):
> > On Wed, 14 Apr 2021 11:30:31 +0200,
> > Jaroslav Kysela wrote:
> >>
> >> It's a bad idea to allocate big structures on the stack. Allocate
> >> the required structures on demand and cache them in the led
> >> structure.
> >>
> >> Fixes: 22d8de62f11b ("ALSA: control - add generic LED trigger module as the new control layer")
> >> Signed-off-by: Jaroslav Kysela <perex@perex.cz>
> >> Cc: Nathan Chancellor <nathan@kernel.org>
> >> Cc: Takashi Sakamoto <o-takashi@sakamocchi.jp>
> > 
> > Thanks for the patch.
> > 
> > But, wouldn't it be simpler if we just add snd_ctl_elem_info and
> > _value in snd_ctl_led object itself?
> > 
> > -- 8< --
> > --- a/sound/core/control_led.c
> > +++ b/sound/core/control_led.c
> > @@ -38,6 +38,8 @@ struct snd_ctl_led {
> >  	enum led_audio trigger_type;
> >  	enum snd_ctl_led_mode mode;
> >  	struct snd_ctl_led_card *cards[SNDRV_CARDS];
> > +	struct snd_ctl_elem_info elem_info;
> > +	struct snd_ctl_elem_value elem_value;
> >  };
> >  
> >  struct snd_ctl_led_ctl {
> > 
> > -- 8< --
> > 
> > Then we need no extra kmalloc.  I guess snd_ctl_led_get() shall be
> > called almost always, so we won't save much even if we allocate
> > dynamically.
> 
> The idea was to allocate this structure purely on demand. We can have the case
> where some LED group is inactive (no speaker LED for example) or the LED
> functionality is not used at all even if the module is loaded. And it's true
> that those structures requires some more bytes.
> 
> Another option is just to make the structures in snd_ctl_led_get() static -
> two line patch. The calls are protected with snd_ctl_led_mutex . But it may be
> problematic if we do a finer mutex locking per LED group in the future.

OK, I see your points.  OTOH, I prefer simplicity at this moment over
yet another kmalloc.  If the static variables are enough, that sounds
like the best option.  Not only that it's way simpler (only two line
changes), it's even more byte-saving as it allocates only once
globally, not per snd_ctl_led object.  Having a comment should be good
enough for avoiding the pitfall in future changes (if any).


thanks,

Takashi
