Return-Path: <alsa-devel-bounces@alsa-project.org>
X-Original-To: lists+alsa-devel@lfdr.de
Delivered-To: lists+alsa-devel@lfdr.de
Received: from alsa0.perex.cz (alsa0.perex.cz [77.48.224.243])
	by mail.lfdr.de (Postfix) with ESMTPS id 841B134A300
	for <lists+alsa-devel@lfdr.de>; Fri, 26 Mar 2021 09:12:47 +0100 (CET)
Received: from alsa1.perex.cz (alsa1.perex.cz [207.180.221.201])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by alsa0.perex.cz (Postfix) with ESMTPS id 0E95B1669;
	Fri, 26 Mar 2021 09:11:57 +0100 (CET)
DKIM-Filter: OpenDKIM Filter v2.11.0 alsa0.perex.cz 0E95B1669
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=alsa-project.org;
	s=default; t=1616746367;
	bh=OBeF/ltlRM3hXX9m4YiK93MoaEKqN2aSIRJJEjKzbIs=;
	h=Date:From:To:Subject:In-Reply-To:References:Cc:List-Id:
	 List-Unsubscribe:List-Archive:List-Post:List-Help:List-Subscribe:
	 From;
	b=bOipJiRMyJFtmgI8tIl1t5gJYEtmzBXUJbzBZmPA+2OA4SQQgnHeu9sfDqWlv7EpV
	 OtPxKmSTqyVtFw00v97Mr7zoLzK0iRYB+sMoePWcmhBfFJLwWGEStBEIceaY+qBjST
	 P5w0sTSfdlJNsdhzGwZJ/OvEcBlY+EbLQvfr4Uuo=
Received: from alsa1.perex.cz (localhost.localdomain [127.0.0.1])
	by alsa1.perex.cz (Postfix) with ESMTP id C54F9F801EB;
	Fri, 26 Mar 2021 09:11:22 +0100 (CET)
X-Original-To: alsa-devel@alsa-project.org
Delivered-To: alsa-devel@alsa-project.org
Received: by alsa1.perex.cz (Postfix, from userid 50401)
 id 4E56EF800D0; Fri, 26 Mar 2021 09:11:18 +0100 (CET)
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on alsa1.perex.cz
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=SPF_HELO_NONE,SPF_NONE,
 URIBL_BLOCKED autolearn=disabled version=3.4.0
Received: from mx2.suse.de (mx2.suse.de [195.135.220.15])
 (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
 (No client certificate requested)
 by alsa1.perex.cz (Postfix) with ESMTPS id E104EF800D0
 for <alsa-devel@alsa-project.org>; Fri, 26 Mar 2021 09:11:10 +0100 (CET)
DKIM-Filter: OpenDKIM Filter v2.11.0 alsa1.perex.cz E104EF800D0
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay2.suse.de (unknown [195.135.221.27])
 by mx2.suse.de (Postfix) with ESMTP id 7CEA8AB8A;
 Fri, 26 Mar 2021 08:11:10 +0000 (UTC)
Date: Fri, 26 Mar 2021 09:11:10 +0100
Message-ID: <s5hlfaal4gx.wl-tiwai@suse.de>
From: Takashi Iwai <tiwai@suse.de>
To: Kai-Heng Feng <kai.heng.feng@canonical.com>
Subject: Re: [PATCH v3 1/2] ALSA: usb-audio: Carve out connector value
 checking into a helper
In-Reply-To: <20210325165918.22593-1-kai.heng.feng@canonical.com>
References: <20210325165918.22593-1-kai.heng.feng@canonical.com>
User-Agent: Wanderlust/2.15.9 (Almost Unreal) SEMI/1.14.6 (Maruoka)
 FLIM/1.14.9 (=?UTF-8?B?R29qxY0=?=) APEL/10.8 Emacs/25.3
 (x86_64-suse-linux-gnu) MULE/6.0 (HANACHIRUSATO)
MIME-Version: 1.0 (generated by SEMI 1.14.6 - "Maruoka")
Content-Type: text/plain; charset=US-ASCII
Cc: "moderated list:SOUND" <alsa-devel@alsa-project.org>,
 Lars-Peter Clausen <lars@metafoo.de>, open list <linux-kernel@vger.kernel.org>,
 Chris Chiu <chiu@endlessm.com>, tiwai@suse.com, Tom Yan <tom.ty89@gmail.com>,
 Mark Brown <broonie@kernel.org>, Joe Perches <joe@perches.com>
X-BeenThere: alsa-devel@alsa-project.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: "Alsa-devel mailing list for ALSA developers -
 http://www.alsa-project.org" <alsa-devel.alsa-project.org>
List-Unsubscribe: <https://mailman.alsa-project.org/mailman/options/alsa-devel>, 
 <mailto:alsa-devel-request@alsa-project.org?subject=unsubscribe>
List-Archive: <http://mailman.alsa-project.org/pipermail/alsa-devel/>
List-Post: <mailto:alsa-devel@alsa-project.org>
List-Help: <mailto:alsa-devel-request@alsa-project.org?subject=help>
List-Subscribe: <https://mailman.alsa-project.org/mailman/listinfo/alsa-devel>, 
 <mailto:alsa-devel-request@alsa-project.org?subject=subscribe>
Errors-To: alsa-devel-bounces@alsa-project.org
Sender: "Alsa-devel" <alsa-devel-bounces@alsa-project.org>

On Thu, 25 Mar 2021 17:59:12 +0100,
Kai-Heng Feng wrote:
> 
> This is preparation for next patch, no functional change intended.
> 
> Signed-off-by: Kai-Heng Feng <kai.heng.feng@canonical.com>

Applied now.  Thanks.


Takashi

> ---
> v3:
>  - No change.
> v2:
>  - Only return early when ret < 0.
> 
>  sound/usb/mixer.c | 34 +++++++++++++++++++++++++---------
>  1 file changed, 25 insertions(+), 9 deletions(-)
> 
> diff --git a/sound/usb/mixer.c b/sound/usb/mixer.c
> index b004b2e63a5d..5a2d9a768f70 100644
> --- a/sound/usb/mixer.c
> +++ b/sound/usb/mixer.c
> @@ -1446,13 +1446,11 @@ static int mixer_ctl_master_bool_get(struct snd_kcontrol *kcontrol,
>  	return 0;
>  }
>  
> -/* get the connectors status and report it as boolean type */
> -static int mixer_ctl_connector_get(struct snd_kcontrol *kcontrol,
> -				   struct snd_ctl_elem_value *ucontrol)
> +static int get_connector_value(struct usb_mixer_elem_info *cval,
> +			       char *name, int *val)
>  {
> -	struct usb_mixer_elem_info *cval = kcontrol->private_data;
>  	struct snd_usb_audio *chip = cval->head.mixer->chip;
> -	int idx = 0, validx, ret, val;
> +	int idx = 0, validx, ret;
>  
>  	validx = cval->control << 8 | 0;
>  
> @@ -1467,21 +1465,24 @@ static int mixer_ctl_connector_get(struct snd_kcontrol *kcontrol,
>  		ret = snd_usb_ctl_msg(chip->dev, usb_rcvctrlpipe(chip->dev, 0), UAC2_CS_CUR,
>  				      USB_RECIP_INTERFACE | USB_TYPE_CLASS | USB_DIR_IN,
>  				      validx, idx, &uac2_conn, sizeof(uac2_conn));
> -		val = !!uac2_conn.bNrChannels;
> +		if (val)
> +			*val = !!uac2_conn.bNrChannels;
>  	} else { /* UAC_VERSION_3 */
>  		struct uac3_insertion_ctl_blk uac3_conn;
>  
>  		ret = snd_usb_ctl_msg(chip->dev, usb_rcvctrlpipe(chip->dev, 0), UAC2_CS_CUR,
>  				      USB_RECIP_INTERFACE | USB_TYPE_CLASS | USB_DIR_IN,
>  				      validx, idx, &uac3_conn, sizeof(uac3_conn));
> -		val = !!uac3_conn.bmConInserted;
> +		if (val)
> +			*val = !!uac3_conn.bmConInserted;
>  	}
>  
>  	snd_usb_unlock_shutdown(chip);
>  
>  	if (ret < 0) {
> -		if (strstr(kcontrol->id.name, "Speaker")) {
> -			ucontrol->value.integer.value[0] = 1;
> +		if (name && strstr(name, "Speaker")) {
> +			if (val)
> +				*val = 1;
>  			return 0;
>  		}
>  error:
> @@ -1491,6 +1492,21 @@ static int mixer_ctl_connector_get(struct snd_kcontrol *kcontrol,
>  		return filter_error(cval, ret);
>  	}
>  
> +	return ret;
> +}
> +
> +/* get the connectors status and report it as boolean type */
> +static int mixer_ctl_connector_get(struct snd_kcontrol *kcontrol,
> +				   struct snd_ctl_elem_value *ucontrol)
> +{
> +	struct usb_mixer_elem_info *cval = kcontrol->private_data;
> +	int ret, val;
> +
> +	ret = get_connector_value(cval, kcontrol->id.name, &val);
> +
> +	if (ret < 0)
> +		return ret;
> +
>  	ucontrol->value.integer.value[0] = val;
>  	return 0;
>  }
> -- 
> 2.30.2
> 
