Return-Path: <alsa-devel-bounces@alsa-project.org>
X-Original-To: lists+alsa-devel@lfdr.de
Delivered-To: lists+alsa-devel@lfdr.de
Received: from alsa0.perex.cz (alsa0.perex.cz [77.48.224.243])
	by mail.lfdr.de (Postfix) with ESMTPS id A6A73196BED
	for <lists+alsa-devel@lfdr.de>; Sun, 29 Mar 2020 10:47:36 +0200 (CEST)
Received: from alsa1.perex.cz (alsa1.perex.cz [207.180.221.201])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by alsa0.perex.cz (Postfix) with ESMTPS id 38F5A166E;
	Sun, 29 Mar 2020 10:46:46 +0200 (CEST)
DKIM-Filter: OpenDKIM Filter v2.11.0 alsa0.perex.cz 38F5A166E
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=alsa-project.org;
	s=default; t=1585471656;
	bh=Q3HnEXtDnABXwa1j8UTyUWjIkn4xS8bSeOZBAA4DYps=;
	h=Date:From:To:Subject:In-Reply-To:References:Cc:List-Id:
	 List-Unsubscribe:List-Archive:List-Post:List-Help:List-Subscribe:
	 From;
	b=Pxg+ltf5xpcP4VPh3DdXL/eG/4ZvNYaNNez+lzYDJKCJ+Dx//VKv0v8pyQxeFjUsW
	 LjLNzpEc5LmcJPWEfTmM33l9dhiKP5tjG9ED2zGPjGgDAHiqvEFW7rP3LALE60U8wh
	 LEgmjHN4IFKPd5bwhJ2waInSlAgwxhGzgIudOuEw=
Received: from alsa1.perex.cz (localhost.localdomain [127.0.0.1])
	by alsa1.perex.cz (Postfix) with ESMTP id 089D0F8013F;
	Sun, 29 Mar 2020 10:45:54 +0200 (CEST)
X-Original-To: alsa-devel@alsa-project.org
Delivered-To: alsa-devel@alsa-project.org
Received: by alsa1.perex.cz (Postfix, from userid 50401)
 id 50815F80146; Sun, 29 Mar 2020 10:45:52 +0200 (CEST)
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on alsa1.perex.cz
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=RCVD_IN_MSPIKE_H3,
 RCVD_IN_MSPIKE_WL,SPF_HELO_NONE,SPF_PASS,URIBL_BLOCKED autolearn=disabled
 version=3.4.0
Received: from mx2.suse.de (mx2.suse.de [195.135.220.15])
 (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
 (No client certificate requested)
 by alsa1.perex.cz (Postfix) with ESMTPS id 311B9F8013F
 for <alsa-devel@alsa-project.org>; Sun, 29 Mar 2020 10:45:48 +0200 (CEST)
DKIM-Filter: OpenDKIM Filter v2.11.0 alsa1.perex.cz 311B9F8013F
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay2.suse.de (unknown [195.135.220.254])
 by mx2.suse.de (Postfix) with ESMTP id 47387AB98;
 Sun, 29 Mar 2020 08:45:48 +0000 (UTC)
Date: Sun, 29 Mar 2020 10:45:47 +0200
Message-ID: <s5hh7y7czwk.wl-tiwai@suse.de>
From: Takashi Iwai <tiwai@suse.de>
To: Andreas Steinmetz <ast@domdv.de>
Subject: Re: PATCH: ALSA USB MIDI: Fix case when USB MIDI interface has more
 than one extra endpoint descriptor
In-Reply-To: <00decacc4cac6a9d88fe696f94a077284fb8bbb9.camel@domdv.de>
References: <00decacc4cac6a9d88fe696f94a077284fb8bbb9.camel@domdv.de>
User-Agent: Wanderlust/2.15.9 (Almost Unreal) SEMI/1.14.6 (Maruoka)
 FLIM/1.14.9 (=?UTF-8?B?R29qxY0=?=) APEL/10.8 Emacs/25.3
 (x86_64-suse-linux-gnu) MULE/6.0 (HANACHIRUSATO)
MIME-Version: 1.0 (generated by SEMI 1.14.6 - "Maruoka")
Content-Type: text/plain; charset=US-ASCII
Cc: alsa-devel@alsa-project.org, clemens@ladisch.de
X-BeenThere: alsa-devel@alsa-project.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: "Alsa-devel mailing list for ALSA developers -
 http://www.alsa-project.org" <alsa-devel.alsa-project.org>
List-Unsubscribe: <https://mailman.alsa-project.org/mailman/options/alsa-devel>, 
 <mailto:alsa-devel-request@alsa-project.org?subject=unsubscribe>
List-Archive: <http://mailman.alsa-project.org/pipermail/alsa-devel/>
List-Post: <mailto:alsa-devel@alsa-project.org>
List-Help: <mailto:alsa-devel-request@alsa-project.org?subject=help>
List-Subscribe: <https://mailman.alsa-project.org/mailman/listinfo/alsa-devel>, 
 <mailto:alsa-devel-request@alsa-project.org?subject=subscribe>
Errors-To: alsa-devel-bounces@alsa-project.org
Sender: "Alsa-devel" <alsa-devel-bounces@alsa-project.org>

On Thu, 26 Mar 2020 18:18:55 +0100,
Andreas Steinmetz wrote:
> 
> The Miditech MIDIFACE 16x16 (USB ID 1290:1749) has more than one extra
> endpoint descriptor.
> 
> The first extra descriptor is: 0x06 0x30 0x00 0x00 0x00 0x00
> 
> As the code in snd_usbmidi_get_ms_info() looks only at the
> first extra descriptor to find USB_DT_CS_ENDPOINT the device
> as such is recognized but there is neither input nor output
> configured.
> 
> The patch iterates through the extra descriptors to find the
> proper one. With this patch the device is correctly configured.
> 
> Signed-off-by: Andreas Steinmetz <ast@domdv.de>
> 
> --- a/sourd/usb/midi.c	2020-03-26 17:34:40.073929497 +0100
> +++ b/sound/usb/midi.c	2020-03-26 17:43:39.123252612 +0100
> @@ -1839,7 +1839,8 @@
>  	struct usb_host_endpoint *hostep;
>  	struct usb_endpoint_descriptor *ep;
>  	struct usb_ms_endpoint_descriptor *ms_ep;
> -	int i, epidx;
> +	int i, epidx, extralen;
> +	unsigned char *extra;
>  
>  	intf = umidi->iface;
>  	if (!intf)
> @@ -1863,12 +1864,21 @@
>  		ep = get_ep_desc(hostep);
>  		if (!usb_endpoint_xfer_bulk(ep) && !usb_endpoint_xfer_int(ep))
>  			continue;
> -		ms_ep = (struct usb_ms_endpoint_descriptor *)hostep->extra;
> -		if (hostep->extralen < 4 ||
> +		extralen = hostep->extralen;
> +		extra = hostep->extra;
> +repeat:		ms_ep = (struct usb_ms_endpoint_descriptor *)extra;
> +		if (extralen < 1)
> +			continue;
> +		if (extralen < 4 ||
>  		    ms_ep->bLength < 4 ||
>  		    ms_ep->bDescriptorType != USB_DT_CS_ENDPOINT ||
> -		    ms_ep->bDescriptorSubtype != UAC_MS_GENERAL)
> -			continue;
> +		    ms_ep->bDescriptorSubtype != UAC_MS_GENERAL) {
> +			if (!extra[0])
> +				continue;
> +			extralen -= extra[0];
> +			extra += extra[0];
> +			goto repeat;
> +		}

This kind of goto-loop in a loop is really cryptic and error-prone.
In general we use goto in the kernel code but only for limited
situations such as the unified error code path or the restart of the
whole loop after an error condition.  But this doesn't fit for such
exceptions and can be better rewritten with a simple loop (maybe even
better to factor out to a function).

So, could you revise the change to be more readable?


thanks,

Takashi
