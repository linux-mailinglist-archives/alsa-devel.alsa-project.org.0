Return-Path: <alsa-devel-bounces@alsa-project.org>
X-Original-To: lists+alsa-devel@lfdr.de
Delivered-To: lists+alsa-devel@lfdr.de
Received: from alsa0.perex.cz (alsa0.perex.cz [77.48.224.243])
	by mail.lfdr.de (Postfix) with ESMTPS id 6F460FC728
	for <lists+alsa-devel@lfdr.de>; Thu, 14 Nov 2019 14:17:11 +0100 (CET)
Received: from alsa1.perex.cz (alsa1.perex.cz [207.180.221.201])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by alsa0.perex.cz (Postfix) with ESMTPS id C9B071615;
	Thu, 14 Nov 2019 14:16:20 +0100 (CET)
DKIM-Filter: OpenDKIM Filter v2.11.0 alsa0.perex.cz C9B071615
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=alsa-project.org;
	s=default; t=1573737430;
	bh=CsSG3Zhn+l54/aFwfE0lj3xtJbtyTLWrcyGqqGZEEFM=;
	h=Date:From:To:In-Reply-To:References:Cc:Subject:List-Id:
	 List-Unsubscribe:List-Archive:List-Post:List-Help:List-Subscribe:
	 From;
	b=i7ArJqHY1jPmMqvFlE11koqjqYs4XicPdNkxuHdpLvvQGU04UrS98PZSgvOaC+X3H
	 c2TqKhdJSmUlXllsKHxTIaeJHav2l9ifCyTBPkVYk03UoSMFU2dI37/WNzjvP0FpaE
	 W/nTvzLS1fBPScUtQ21S4Sa2bsjf0pe88+4AkNMI=
Received: from alsa1.perex.cz (localhost.localdomain [127.0.0.1])
	by alsa1.perex.cz (Postfix) with ESMTP id 64990F800EF;
	Thu, 14 Nov 2019 14:15:36 +0100 (CET)
X-Original-To: alsa-devel@alsa-project.org
Delivered-To: alsa-devel@alsa-project.org
Received: by alsa1.perex.cz (Postfix, from userid 50401)
 id 69D24F800EC; Thu, 14 Nov 2019 14:15:33 +0100 (CET)
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on alsa1.perex.cz
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=SPF_HELO_NONE,SPF_PASS
 autolearn=disabled version=3.4.0
Received: from mx1.suse.de (mx2.suse.de [195.135.220.15])
 (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
 (No client certificate requested)
 by alsa1.perex.cz (Postfix) with ESMTPS id 2973BF80084
 for <alsa-devel@alsa-project.org>; Thu, 14 Nov 2019 14:15:31 +0100 (CET)
DKIM-Filter: OpenDKIM Filter v2.11.0 alsa1.perex.cz 2973BF80084
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay2.suse.de (unknown [195.135.220.254])
 by mx1.suse.de (Postfix) with ESMTP id C7DE2AD6B;
 Thu, 14 Nov 2019 13:15:30 +0000 (UTC)
Date: Thu, 14 Nov 2019 14:15:30 +0100
Message-ID: <s5hbltemwel.wl-tiwai@suse.de>
From: Takashi Iwai <tiwai@suse.de>
To: Nikhil Mahale <nmahale@nvidia.com>
In-Reply-To: <9a27790c-2d30-8622-8e38-1ff547de4c3a@nvidia.com>
References: <20191114033704.18171-1-nmahale@nvidia.com>
 <20191114033704.18171-6-nmahale@nvidia.com>
 <s5hmucyn2jt.wl-tiwai@suse.de>
 <9a27790c-2d30-8622-8e38-1ff547de4c3a@nvidia.com>
User-Agent: Wanderlust/2.15.9 (Almost Unreal) SEMI/1.14.6 (Maruoka)
 FLIM/1.14.9 (=?UTF-8?B?R29qxY0=?=) APEL/10.8 Emacs/25.3
 (x86_64-suse-linux-gnu) MULE/6.0 (HANACHIRUSATO)
MIME-Version: 1.0 (generated by SEMI 1.14.6 - "Maruoka")
Cc: alsa-devel@alsa-project.org, tiwai@suse.com, aplattner@nvidia.com
Subject: Re: [alsa-devel] [PATCH v1 5/5] ALSA: hda - Add DP-MST support for
	NVIDIA codecs
X-BeenThere: alsa-devel@alsa-project.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: "Alsa-devel mailing list for ALSA developers -
 http://www.alsa-project.org" <alsa-devel.alsa-project.org>
List-Unsubscribe: <https://mailman.alsa-project.org/mailman/options/alsa-devel>, 
 <mailto:alsa-devel-request@alsa-project.org?subject=unsubscribe>
List-Archive: <http://mailman.alsa-project.org/pipermail/alsa-devel/>
List-Post: <mailto:alsa-devel@alsa-project.org>
List-Help: <mailto:alsa-devel-request@alsa-project.org?subject=help>
List-Subscribe: <https://mailman.alsa-project.org/mailman/listinfo/alsa-devel>, 
 <mailto:alsa-devel-request@alsa-project.org?subject=subscribe>
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: 7bit
Errors-To: alsa-devel-bounces@alsa-project.org
Sender: "Alsa-devel" <alsa-devel-bounces@alsa-project.org>

On Thu, 14 Nov 2019 12:50:29 +0100,
Nikhil Mahale wrote:
> 
> On 11/14/19 4:32 PM, Takashi Iwai wrote:
> > On Thu, 14 Nov 2019 04:37:04 +0100,
> > Nikhil Mahale wrote:
> >>
> >> @@ -3494,11 +3500,86 @@ static const struct drm_audio_component_audio_ops nvhdmi_audio_ops = {
> >>  	.master_unbind = generic_acomp_master_unbind,
> >>  };
> >>  
> >> +static int nvhdmi_find_pcm_slot(struct hdmi_spec *spec,
> >> +				struct hdmi_spec_per_pin *per_pin)
> >> +{
> >> +	int i;
> >> +
> >> +	/*
> >> +	 * generic_hdmi_build_pcms() allocates (num_nids + dev_num - 1)
> >> +	 * number of pcms.
> >> +	 *
> >> +	 * The per_pin of pin_nid_idx=n and dev_id=m prefers to get pcm-n if m==0.
> >> +	 * This guarantees that dynamic pcm assignments are compatible with the
> >> +	 * legacy static per_pin-pmc assignment that existed in the days before
> >> +	 * DP-MST.
> >> +	 *
> >> +	 * per_pin of m!=0 prefers to get pcm=(num_nids + (m - 1)).
> >> +	 */
> >> +	if (per_pin->dev_id == 0 &&
> >> +	    !test_bit(per_pin->pin_nid_idx, &spec->pcm_bitmap))
> >> +		return per_pin->pin_nid_idx;
> >> +
> >> +	if (per_pin->dev_id != 0 &&
> >> +	    !(test_bit(spec->num_nids + (per_pin->dev_id - 1),
> >> +		&spec->pcm_bitmap))) {
> >> +		return spec->num_nids + (per_pin->dev_id - 1);
> >> +	}
> >> +
> >> +	/* have a second try; check the area over num_nids */
> >> +	for (i = spec->num_nids; i < spec->pcm_used; i++) {
> >> +		if (!test_bit(i, &spec->pcm_bitmap))
> >> +			return i;
> >> +	}
> >> +
> >> +	/* the last try; check the empty slots in pins */
> >> +	for (i = 0; i < spec->num_nids; i++) {
> >> +		if (!test_bit(i, &spec->pcm_bitmap))
> >> +			return i;
> >> +	}
> >> +	return -EBUSY;
> >> +}
> > 
> > I think this can be applied for Intel case, too.  No need for creating
> > yet another indirect branch.
> 
> Do you mean I should replace existing logic in hdmi_find_pcm_slot()
> by this new logic?

Yes.  It's a dynamic assignment for DP-MST in anyway, so the
compatibility of the assigned index shouldn't be a big matter.


Takashi
_______________________________________________
Alsa-devel mailing list
Alsa-devel@alsa-project.org
https://mailman.alsa-project.org/mailman/listinfo/alsa-devel
