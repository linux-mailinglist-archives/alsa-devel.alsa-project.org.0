Return-Path: <alsa-devel-bounces@alsa-project.org>
X-Original-To: lists+alsa-devel@lfdr.de
Delivered-To: lists+alsa-devel@lfdr.de
Received: from alsa0.perex.cz (alsa0.perex.cz [77.48.224.243])
	by mail.lfdr.de (Postfix) with ESMTPS id 4B1F31AD990
	for <lists+alsa-devel@lfdr.de>; Fri, 17 Apr 2020 11:13:49 +0200 (CEST)
Received: from alsa1.perex.cz (alsa1.perex.cz [207.180.221.201])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by alsa0.perex.cz (Postfix) with ESMTPS id AE12B1660;
	Fri, 17 Apr 2020 11:12:58 +0200 (CEST)
DKIM-Filter: OpenDKIM Filter v2.11.0 alsa0.perex.cz AE12B1660
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=alsa-project.org;
	s=default; t=1587114828;
	bh=fj8KeJGH9v6uXfJrrJ8uMuz6ZX6BL4ThVAUYZPLEoRU=;
	h=Date:From:To:Subject:In-Reply-To:References:Cc:List-Id:
	 List-Unsubscribe:List-Archive:List-Post:List-Help:List-Subscribe:
	 From;
	b=ocK/mM0nhiqvFV+54zx29GSOom4TCREsZQAc7EblGTVnUc3NQMjcsSht00TMc7LSf
	 kLgK2kfYqWwgX9kguSADiOQiaCPyBcSo3jyKQjHetuqxBjNix9/w6caqaK+R97rTfD
	 wwVk/bCOzoWbTqUWjiAcMchp/1Syh3PcNUc7819c=
Received: from alsa1.perex.cz (localhost.localdomain [127.0.0.1])
	by alsa1.perex.cz (Postfix) with ESMTP id 009AFF8025F;
	Fri, 17 Apr 2020 11:12:07 +0200 (CEST)
X-Original-To: alsa-devel@alsa-project.org
Delivered-To: alsa-devel@alsa-project.org
Received: by alsa1.perex.cz (Postfix, from userid 50401)
 id 18B0BF80245; Fri, 17 Apr 2020 11:12:04 +0200 (CEST)
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on alsa1.perex.cz
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=RCVD_IN_MSPIKE_H3,
 RCVD_IN_MSPIKE_WL,SPF_HELO_NONE,SPF_PASS autolearn=disabled version=3.4.0
Received: from mx2.suse.de (mx2.suse.de [195.135.220.15])
 (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
 (No client certificate requested)
 by alsa1.perex.cz (Postfix) with ESMTPS id 69067F800AB
 for <alsa-devel@alsa-project.org>; Fri, 17 Apr 2020 11:12:00 +0200 (CEST)
DKIM-Filter: OpenDKIM Filter v2.11.0 alsa1.perex.cz 69067F800AB
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay2.suse.de (unknown [195.135.220.254])
 by mx2.suse.de (Postfix) with ESMTP id C4438ABE2;
 Fri, 17 Apr 2020 09:11:59 +0000 (UTC)
Date: Fri, 17 Apr 2020 11:11:59 +0200
Message-ID: <s5hmu7abhnk.wl-tiwai@suse.de>
From: Takashi Iwai <tiwai@suse.de>
To: Ranjani Sridharan <ranjani.sridharan@linux.intel.com>
Subject: Re: Question about snd_soc_card_register()
In-Reply-To: <0557d9630b96b4111d294017dc621f672fef7fc5.camel@linux.intel.com>
References: <DM6PR11MB29052BDEDBB872123FE6410FE8D80@DM6PR11MB2905.namprd11.prod.outlook.com>
 <s5ho8rrewrq.wl-tiwai@suse.de>
 <1799db6034f66d3c3e65e2cb4dd7a0f158c41047.camel@linux.intel.com>
 <0557d9630b96b4111d294017dc621f672fef7fc5.camel@linux.intel.com>
User-Agent: Wanderlust/2.15.9 (Almost Unreal) SEMI/1.14.6 (Maruoka)
 FLIM/1.14.9 (=?UTF-8?B?R29qxY0=?=) APEL/10.8 Emacs/25.3
 (x86_64-suse-linux-gnu) MULE/6.0 (HANACHIRUSATO)
MIME-Version: 1.0 (generated by SEMI 1.14.6 - "Maruoka")
Content-Type: text/plain; charset=US-ASCII
Cc: Linux-ALSA <alsa-devel@alsa-project.org>, "Sridharan,
 Ranjani" <ranjani.sridharan@intel.com>, Takashi Iwai <tiwai@suse.com>,
 "Bossart, Pierre-louis" <pierre-louis.bossart@intel.com>
X-BeenThere: alsa-devel@alsa-project.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: "Alsa-devel mailing list for ALSA developers -
 http://www.alsa-project.org" <alsa-devel.alsa-project.org>
List-Unsubscribe: <https://mailman.alsa-project.org/mailman/options/alsa-devel>, 
 <mailto:alsa-devel-request@alsa-project.org?subject=unsubscribe>
List-Archive: <http://mailman.alsa-project.org/pipermail/alsa-devel/>
List-Post: <mailto:alsa-devel@alsa-project.org>
List-Help: <mailto:alsa-devel-request@alsa-project.org?subject=help>
List-Subscribe: <https://mailman.alsa-project.org/mailman/listinfo/alsa-devel>, 
 <mailto:alsa-devel-request@alsa-project.org?subject=subscribe>
Errors-To: alsa-devel-bounces@alsa-project.org
Sender: "Alsa-devel" <alsa-devel-bounces@alsa-project.org>

On Thu, 16 Apr 2020 19:34:50 +0200,
Ranjani Sridharan wrote:
> 
> On Thu, 2020-04-16 at 06:18 -0700, Ranjani Sridharan wrote:
> > On Thu, 2020-04-16 at 09:04 +0200, Takashi Iwai wrote:
> > > On Thu, 16 Apr 2020 07:52:45 +0200,
> > > Sridharan, Ranjani wrote:
> > > > 
> > > > Hi Takashi,
> > > > 
> > > > While working on implementing the probes features in SOF using a
> > > > separate card
> > > > for the probe DAI links, I noticed that calling
> > > > snd_soc_register_card() 
> > > > results in
> > > > incrementing the usage_count for the device that registers the
> > > > card
> > > > by 2 and
> > > > it is not decremented until the card is freed.
> > > > 
> > > > Is this the expected behaviour? Typically, we register a separate
> > > > platform
> > > > device for the Intel machines which in turn register the card and
> > > > none of them
> > > > ever enable runtime PM. So this has no impact on the parent
> > > > device's runtime
> > > > PM status. 
> > > > 
> > > > I'd like to avoid creating a separate platform device just to
> > > > register the
> > > > card if possible while also enabling runtime PM . But when I do
> > > > this today,
> > > > the device cannot enter runtime suspend at all. Could you please
> > > > shed some
> > > > light on this?
> > > 
> > > It's not clear how you see the things.  Which device are you
> > > looking
> > > at?  Typically a card object points to two different devices, one
> > > is 
> > > the real device that the chip belongs to (card->dev), and another
> > > the
> > > own device object for managing the device files (card.card_dev).
> > > And in general, snd_soc_card_register() or snd_card_register()
> > > don't
> > > manipulate the runtime PM stuff by itself at all.
> > 
> > Its the card->dev that I am looking at. This is the device that calls
> > devm_snd_soc_register_card(). 
> > In my tests, the usage_count for this device is 0 before calling
> > devm_snd_soc_register_card and it is 2 after the card registration is
> > complete.
> 
> I dug a bit deeper and found that this happens only if the card-
> >dapm.idle_bias_off is not set to true.
> 
> To be honest, I dont quite understand what the idle_bas_off setting is
> meant for exactly but it does prevent card->dev 's being runtime
> resumed in dapm_pre_sequence_async() and solves my issue.
> 
> I dont see this being set for most of the cards in the Intel machine
> drivers and they all manifest the same symptom I was seeing. But, it
> hasnt really caused any real problems because runtime PM for these
> platform devices is never enabled.

Hrm, that's puzzling behavior indeed.

And it seems that Intel byt drivers are the only machine drivers that
set idle_bias_off.  I guess those set the flag for some workaround?


Takashi
