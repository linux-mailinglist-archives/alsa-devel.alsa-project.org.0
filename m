Return-Path: <alsa-devel-bounces@alsa-project.org>
X-Original-To: lists+alsa-devel@lfdr.de
Delivered-To: lists+alsa-devel@lfdr.de
Received: from alsa0.perex.cz (alsa0.perex.cz [77.48.224.243])
	by mail.lfdr.de (Postfix) with ESMTPS id 86A852D4C4
	for <lists+alsa-devel@lfdr.de>; Wed, 29 May 2019 06:30:12 +0200 (CEST)
Received: from alsa1.perex.cz (alsa1.perex.cz [207.180.221.201])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by alsa0.perex.cz (Postfix) with ESMTPS id E12091662;
	Wed, 29 May 2019 06:29:21 +0200 (CEST)
DKIM-Filter: OpenDKIM Filter v2.11.0 alsa0.perex.cz E12091662
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=alsa-project.org;
	s=default; t=1559104212;
	bh=d939Isd89bJyLYbyfsVsDU5u/loLpsIMPhsv+7owYPc=;
	h=Date:From:To:Subject:List-Id:List-Unsubscribe:List-Archive:
	 List-Post:List-Help:List-Subscribe:From;
	b=q2jCz2EpEzDDKVK/JohVELm13ZzmARl4w2lQuV3p8bIOdLHaVoffN3fSQVrySsA1a
	 XbOYCQMF2PTAPugEf+yPKEfMG/Mhqek+XzpscGeRF01SVG8lrfbLPF+tIpznt8/WCO
	 sFMEqAJEmdeMv4UMzd1U4oTu9U10jCalScIRz7FY=
Received: from alsa1.perex.cz (localhost.localdomain [127.0.0.1])
	by alsa1.perex.cz (Postfix) with ESMTP id 5F2C6F896E5;
	Wed, 29 May 2019 06:28:27 +0200 (CEST)
X-Original-To: alsa-devel@alsa-project.org
Delivered-To: alsa-devel@alsa-project.org
Received: by alsa1.perex.cz (Postfix, from userid 50401)
 id 3B4D2F896E4; Wed, 29 May 2019 06:28:19 +0200 (CEST)
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on alsa1.perex.cz
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=AC_FROM_MANY_DOTS,
 SPF_HELO_NONE,SPF_PASS autolearn=disabled version=3.4.0
Received: from relmlie5.idc.renesas.com (relmlor1.renesas.com
 [210.160.252.171])
 by alsa1.perex.cz (Postfix) with ESMTP id 29C33F806E5
 for <alsa-devel@alsa-project.org>; Wed, 29 May 2019 06:28:11 +0200 (CEST)
DKIM-Filter: OpenDKIM Filter v2.11.0 alsa1.perex.cz 29C33F806E5
Date: 29 May 2019 13:28:08 +0900
X-IronPort-AV: E=Sophos;i="5.60,525,1549897200"; d="scan'208";a="17244222"
Received: from unknown (HELO relmlir6.idc.renesas.com) ([10.200.68.152])
 by relmlie5.idc.renesas.com with ESMTP; 29 May 2019 13:28:08 +0900
Received: from morimoto-PC.renesas.com (unknown [10.166.18.140])
 by relmlir6.idc.renesas.com (Postfix) with ESMTP id AE0CF41B0C0A
 for <alsa-devel@alsa-project.org>; Wed, 29 May 2019 13:28:08 +0900 (JST)
Message-ID: <87zhn5x5id.wl-kuninori.morimoto.gx@renesas.com>
From: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
To: Linux-ALSA <alsa-devel@alsa-project.org>
User-Agent: Wanderlust/2.15.9 Emacs/24.5 Mule/6.0
MIME-Version: 1.0 (generated by SEMI-EPG 1.14.7 - "Harue")
Subject: [alsa-devel] Question about aux device
X-BeenThere: alsa-devel@alsa-project.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: "Alsa-devel mailing list for ALSA developers -
 http://www.alsa-project.org" <alsa-devel.alsa-project.org>
List-Unsubscribe: <https://mailman.alsa-project.org/mailman/options/alsa-devel>, 
 <mailto:alsa-devel-request@alsa-project.org?subject=unsubscribe>
List-Archive: <http://mailman.alsa-project.org/pipermail/alsa-devel/>
List-Post: <mailto:alsa-devel@alsa-project.org>
List-Help: <mailto:alsa-devel-request@alsa-project.org?subject=help>
List-Subscribe: <https://mailman.alsa-project.org/mailman/listinfo/alsa-devel>, 
 <mailto:alsa-devel-request@alsa-project.org?subject=subscribe>
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: 7bit
Errors-To: alsa-devel-bounces@alsa-project.org
Sender: "Alsa-devel" <alsa-devel-bounces@alsa-project.org>


Hi ALSA ML

I wonder about aux device probe method.
Does someone know about it ?

(1)
snd_soc_instantiate_card() binds all (normal) components by
soc_bind_dai_link()
~~~~~~~~~~~~~~~~~
(2)
And initialize/probe all binded (normal) components after that.
Here, in this operation, it will calls soc_probe_component().
                                       ~~~~~~~~~~~~~~~~~~~
(3)
After that, auxiliary component is probed by using soc_probe_component()
                                                   ~~~~~~~~~~~~~~~~~~~
(4)
And, auxiliary component is binded by soc_bind_dai_link() after that.
                                       ~~~~~~~~~~~~~~~~~

	static int snd_soc_instantiate_card(struct snd_soc_card *card)
	{
		...
		/* probe normal components here */
		for_each_card_prelinks(card, i, dai_link) {
(1)=>			ret = soc_bind_dai_link(card, dai_link);
			if (ret != 0)
				goto probe_end;
		}
		...
		/* probe all components used by DAI links on this card */
		for_each_comp_order(order) {
			for_each_card_rtds(card, rtd) {
(2)=>				ret = soc_probe_link_components(card, rtd, order);
				...
				}
			}
		}

		/* probe auxiliary components */
(3)=>		ret = soc_probe_aux_devices(card);
		...

		for_each_card_links(card, dai_link) {
			...
(4)=>			ret = soc_bind_dai_link(card, dai_link);
			...
		}


	}

1st question is it seems the order of (1)/(2) and (3)/(4) are different.
are there some reason about it ? or no reason ?

2nd question is can we merge these ? (1)+(4) and (2)+(3).
Or do we have some reason ?
For example (3)/(4) need to be called after xxxx.


Thank you for your help !!
Best regards
---
Kuninori Morimoto
_______________________________________________
Alsa-devel mailing list
Alsa-devel@alsa-project.org
https://mailman.alsa-project.org/mailman/listinfo/alsa-devel
