Return-Path: <alsa-devel-bounces@alsa-project.org>
X-Original-To: lists+alsa-devel@lfdr.de
Delivered-To: lists+alsa-devel@lfdr.de
Received: from alsa0.perex.cz (alsa0.perex.cz [77.48.224.243])
	by mail.lfdr.de (Postfix) with ESMTPS id 2ABE819D5B
	for <lists+alsa-devel@lfdr.de>; Fri, 10 May 2019 14:41:09 +0200 (CEST)
Received: from alsa1.perex.cz (alsa1.perex.cz [207.180.221.201])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by alsa0.perex.cz (Postfix) with ESMTPS id A89BC1948;
	Fri, 10 May 2019 14:40:18 +0200 (CEST)
DKIM-Filter: OpenDKIM Filter v2.11.0 alsa0.perex.cz A89BC1948
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=alsa-project.org;
	s=default; t=1557492068;
	bh=JAv+3IT+vlWl49591gGJ+kRNS4Qc6e2QMSzaDZjXQF8=;
	h=Date:From:To:In-Reply-To:References:Cc:Subject:List-Id:
	 List-Unsubscribe:List-Archive:List-Post:List-Help:List-Subscribe:
	 From;
	b=Duxpsy5ezCVYD9GwiP6WtsiOFXEWP2spHsgwKHn/SE5JzBdL2y6qjDuZB0uU+WiEZ
	 iJwVgE05wSMLcoU9nspvh6Em8HTAGnohEPC6FghWmacgW7DbW7gd6FosYgwSxRwPc5
	 AGtElrtXzLuQAb/yKtAtoHex2FT09pBBD0n/Kb3E=
Received: from alsa1.perex.cz (localhost.localdomain [127.0.0.1])
	by alsa1.perex.cz (Postfix) with ESMTP id 41F63F896F0;
	Fri, 10 May 2019 14:39:24 +0200 (CEST)
X-Original-To: alsa-devel@alsa-project.org
Delivered-To: alsa-devel@alsa-project.org
Received: by alsa1.perex.cz (Postfix, from userid 50401)
 id E1019F896FD; Fri, 10 May 2019 14:39:21 +0200 (CEST)
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on alsa1.perex.cz
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=RCVD_IN_DNSWL_BLOCKED, SPF_PASS,
 URIBL_BLOCKED autolearn=disabled version=3.4.0
Received: from mx1.suse.de (mx2.suse.de [195.135.220.15])
 (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
 (No client certificate requested)
 by alsa1.perex.cz (Postfix) with ESMTPS id E54B7F8073C
 for <alsa-devel@alsa-project.org>; Fri, 10 May 2019 14:39:18 +0200 (CEST)
DKIM-Filter: OpenDKIM Filter v2.11.0 alsa1.perex.cz E54B7F8073C
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay2.suse.de (unknown [195.135.220.254])
 by mx1.suse.de (Postfix) with ESMTP id C41A6AE51;
 Fri, 10 May 2019 12:39:17 +0000 (UTC)
Date: Fri, 10 May 2019 14:39:17 +0200
Message-ID: <s5hwoiymqkq.wl-tiwai@suse.de>
From: Takashi Iwai <tiwai@suse.de>
To: "Yang, Libin" <libin.yang@intel.com>
In-Reply-To: <96A12704CE18D347B625EE2D4A099D1952839824@SHSMSX103.ccr.corp.intel.com>
References: <1557282761-26146-1-git-send-email-libin.yang@intel.com>
 <aa0c6eea81a721f340dd1362801e49049a6620dd.camel@linux.intel.com>
 <s5htve4mymn.wl-tiwai@suse.de>
 <ac99b2fefe05833787e473cbd2327a35c02de68b.camel@linux.intel.com>
 <s5hd0krmsyy.wl-tiwai@suse.de>
 <96A12704CE18D347B625EE2D4A099D19528396E1@SHSMSX103.ccr.corp.intel.com>
 <9a392d4db4e6e700cf473f6ddaab532fcf3876f2.camel@linux.intel.com>
 <96A12704CE18D347B625EE2D4A099D1952839824@SHSMSX103.ccr.corp.intel.com>
User-Agent: Wanderlust/2.15.9 (Almost Unreal) SEMI/1.14.6 (Maruoka)
 FLIM/1.14.9 (=?UTF-8?B?R29qxY0=?=) APEL/10.8 Emacs/25.3
 (x86_64-suse-linux-gnu) MULE/6.0 (HANACHIRUSATO)
MIME-Version: 1.0 (generated by SEMI 1.14.6 - "Maruoka")
Cc: "pierre-louis.bossart@linux.intel.com"
 <pierre-louis.bossart@linux.intel.com>,
 "alsa-devel@alsa-project.org" <alsa-devel@alsa-project.org>, "Sridharan,
 Ranjani" <ranjani.sridharan@intel.com>,
 Ranjani Sridharan <ranjani.sridharan@linux.intel.com>, "Wang,
 Rander" <rander.wang@intel.com>, "broonie@kernel.org" <broonie@kernel.org>
Subject: Re: [alsa-devel] [PATCH V2] ASoC: soc-pcm: BE dai needs prepare
	when pause release after resume
X-BeenThere: alsa-devel@alsa-project.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: "Alsa-devel mailing list for ALSA developers -
 http://www.alsa-project.org" <alsa-devel.alsa-project.org>
List-Unsubscribe: <https://mailman.alsa-project.org/mailman/options/alsa-devel>, 
 <mailto:alsa-devel-request@alsa-project.org?subject=unsubscribe>
List-Archive: <http://mailman.alsa-project.org/pipermail/alsa-devel/>
List-Post: <mailto:alsa-devel@alsa-project.org>
List-Help: <mailto:alsa-devel-request@alsa-project.org?subject=help>
List-Subscribe: <https://mailman.alsa-project.org/mailman/listinfo/alsa-devel>, 
 <mailto:alsa-devel-request@alsa-project.org?subject=subscribe>
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: 7bit
Errors-To: alsa-devel-bounces@alsa-project.org
Sender: "Alsa-devel" <alsa-devel-bounces@alsa-project.org>

On Fri, 10 May 2019 04:32:11 +0200,
Yang, Libin wrote:
> 
> 
> 
> >-----Original Message-----
> >From: Ranjani Sridharan [mailto:ranjani.sridharan@linux.intel.com]
> >Sent: Friday, May 10, 2019 10:03 AM
> >To: Yang, Libin <libin.yang@intel.com>; Takashi Iwai <tiwai@suse.de>
> >Cc: alsa-devel@alsa-project.org; Sridharan, Ranjani
> ><ranjani.sridharan@intel.com>; pierre-louis.bossart@linux.intel.com; Wang,
> >Rander <rander.wang@intel.com>; broonie@kernel.org
> >Subject: Re: [alsa-devel] [PATCH V2] ASoC: soc-pcm: BE dai needs prepare
> >when pause release after resume
> >
> >> > >
> >> > > So in the current scenario what we see is that after resuming from
> >> > > S3, a pause-release action from the user results in a FE prepare()
> >> > > followed by the START trigger (and not a PAUSE-RELEASE trigger).
> >> > >
> >> > > Libin's patch proposes to do a prepare() for the BE even in the
> >> > > case of a regular pause-release. But this might not be ideal since
> >> > > other drivers might have logic in the prepare() ioctl that might
> >> > > end up with errors.
> >> >
> >> > Right.
> >> >
> >> > > So I am thinking maybe we can have some internal logic in the SOF
> >> > > prepare() callback that will also call the BE prepare() when the
> >> > > be->dpcm[stream].state is SND_SOC_DPCM_STATE_PAUSED? Would that
> >> >
> >> > make
> >> > > sense?
> >> >
> >> > Yes, that would work, I guess.  Eventually this might be needed to
> >> > be addressed in ALSA core side, too, but it's good to have some fix
> >> > beforehand in DPCM.
> >>
> >> Ranjani, with "regular pause-release", do you mean pause-release
> >> without S3? The prepare() is called from alsa core (pcm_native.c) in
> >> S3 case.
> >> Prepare() being called in pause-release after S3 is because of S3, not
> >> because of pause-release. Actually, if you pause-release without S3
> >> (not sure in pm-runtime case), ASoC's prepare() will not be called. So
> >> dpcm_be_dai_prepare() will not be called. So you assumption of
> >> "regular pause-release" calling prepare() is wrong.
> >Oh yes. That's right. Thanks for pointing it out.
> >In this case, the patch sounds like a good fix. Basically, you're saying that if the
> >FE prepare() gets called (which happens in the case of pause-release without
> >INFO_RESUME) it should also call the BE prepare(), right?
> 
> I mean as there is a S3, we need prepare() for both FE and BE.
> And logically, if ASoC calls FE prepare(), it should also call BE prepare().
> Otherwise, FE and BE are not synced. The behavior is unknown unless
> we really know what's happening in ASoC.
> 
> >
> >Takashi, what do you think?
> >
> >>
> >> Please let me describe the flow below:
> >> 1. Pause-release after S3 without RESUME_INFO
> >> Prepare() -> trigger start
> >> 2. pause-release without S3 without/with RESUME_INFO Trigger
> >> pause-release
> >
> >> 3. Pause-release after S3 with RESUME_INFO Trigger resume
> >Are you sure about this? A paused stream will not be suspended. So it would
> >still be trigger PAUSE-RELEASE in this case?
> 
> Hum, maybe you are right. I didn't test such case. If we don't need call 
> "trigger resume" even after
> S3? If it triggers PAUSE-RELEASE, how can we know it is after S3 or not?
> Driver may do different operations for pause release for with S3 or without S3.

Yes, some change in ALSA PCM core side is needed for that.  It's what
I mentioned in my previous post.

My rough idea is a patch like below.  It'll make trigger(SUSPEND) call
for all cases already in PREPARE or later state.
You'd need to implement the corresponding trigger stuff properly in
the driver side, of course.


thanks,

Takashi

---
--- a/include/uapi/sound/asound.h
+++ b/include/uapi/sound/asound.h
@@ -298,6 +298,7 @@ typedef int __bitwise snd_pcm_subformat_t;
 #define SNDRV_PCM_INFO_HAS_LINK_ESTIMATED_ATIME    0x04000000  /* report estimated link audio time */
 #define SNDRV_PCM_INFO_HAS_LINK_SYNCHRONIZED_ATIME 0x08000000  /* report synchronized audio/system time */
 
+#define SNDRV_PCM_INFO_SUSPEND_TRIGGER	0x20000000		/* internal kernel flag - always trigger at suspend */
 #define SNDRV_PCM_INFO_DRAIN_TRIGGER	0x40000000		/* internal kernel flag - trigger in drain */
 #define SNDRV_PCM_INFO_FIFO_IN_FRAMES	0x80000000	/* internal kernel flag - FIFO size is in frames */
 
--- a/sound/core/pcm_native.c
+++ b/sound/core/pcm_native.c
@@ -1463,7 +1463,8 @@ static int snd_pcm_do_suspend(struct snd_pcm_substream *substream, int state)
 	struct snd_pcm_runtime *runtime = substream->runtime;
 	if (runtime->trigger_master != substream)
 		return 0;
-	if (! snd_pcm_running(substream))
+	if (!(runtime->info & SNDRV_PCM_INFO_TRIGGER_SUSPEND) &&
+	    !snd_pcm_running(substream))
 		return 0;
 	substream->ops->trigger(substream, SNDRV_PCM_TRIGGER_SUSPEND);
 	return 0; /* suspend unconditionally */
_______________________________________________
Alsa-devel mailing list
Alsa-devel@alsa-project.org
https://mailman.alsa-project.org/mailman/listinfo/alsa-devel
