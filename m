Return-Path: <alsa-devel-bounces@alsa-project.org>
X-Original-To: lists+alsa-devel@lfdr.de
Delivered-To: lists+alsa-devel@lfdr.de
Received: from alsa0.perex.cz (alsa0.perex.cz [77.48.224.243])
	by mail.lfdr.de (Postfix) with ESMTPS id D6C9413D3C4
	for <lists+alsa-devel@lfdr.de>; Thu, 16 Jan 2020 06:30:32 +0100 (CET)
Received: from alsa1.perex.cz (alsa1.perex.cz [207.180.221.201])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by alsa0.perex.cz (Postfix) with ESMTPS id 5AC6A17B7;
	Thu, 16 Jan 2020 06:29:42 +0100 (CET)
DKIM-Filter: OpenDKIM Filter v2.11.0 alsa0.perex.cz 5AC6A17B7
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=alsa-project.org;
	s=default; t=1579152632;
	bh=R9UnBhT6sdx1vzhq3gy/qHd4Q/M2zype22z3ixCAq3U=;
	h=Date:From:To:Subject:List-Id:List-Unsubscribe:List-Archive:
	 List-Post:List-Help:List-Subscribe:From;
	b=o8ywbKTEdErTy0e2rsMTjO52fAmGviI6YXmNZ5IFI1eXsvibw/Zu+kYaYQGmQA64g
	 hIyjWd+hzU4I1GDsl8d8IVNgu8L8BspcgdTpZ1FDJ24wfIWim4g9l6v1jw+dRBm/kw
	 ADMLHWaElgr+pAN14TA1SYneIHUHiNu8emp82eg4=
Received: from alsa1.perex.cz (localhost.localdomain [127.0.0.1])
	by alsa1.perex.cz (Postfix) with ESMTP id E72AFF80171;
	Thu, 16 Jan 2020 06:28:48 +0100 (CET)
X-Original-To: alsa-devel@alsa-project.org
Delivered-To: alsa-devel@alsa-project.org
Received: by alsa1.perex.cz (Postfix, from userid 50401)
 id 4F8A5F8014E; Thu, 16 Jan 2020 06:28:40 +0100 (CET)
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on alsa1.perex.cz
X-Spam-Level: **
X-Spam-Status: No, score=3.0 required=5.0 tests=AC_FROM_MANY_DOTS,
 SPF_HELO_NONE,SPF_PASS autolearn=disabled version=3.4.0
Received: from relmlie5.idc.renesas.com (relmlor1.renesas.com
 [210.160.252.171])
 by alsa1.perex.cz (Postfix) with ESMTP id 4B419F800B9
 for <alsa-devel@alsa-project.org>; Thu, 16 Jan 2020 06:28:34 +0100 (CET)
DKIM-Filter: OpenDKIM Filter v2.11.0 alsa1.perex.cz 4B419F800B9
Date: 16 Jan 2020 14:28:31 +0900
X-IronPort-AV: E=Sophos;i="5.70,325,1574089200"; d="scan'208";a="36815360"
Received: from unknown (HELO relmlir5.idc.renesas.com) ([10.200.68.151])
 by relmlie5.idc.renesas.com with ESMTP; 16 Jan 2020 14:28:31 +0900
Received: from morimoto-PC.renesas.com (unknown [10.166.18.140])
 by relmlir5.idc.renesas.com (Postfix) with ESMTP id C991E400E8DD
 for <alsa-devel@alsa-project.org>; Thu, 16 Jan 2020 14:28:31 +0900 (JST)
Message-ID: <87eew00y2o.wl-kuninori.morimoto.gx@renesas.com>
From: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
To: Linux-ALSA <alsa-devel@alsa-project.org>
User-Agent: Wanderlust/2.15.9 Emacs/24.5 Mule/6.0
MIME-Version: 1.0 (generated by SEMI-EPG 1.14.7 - "Harue")
Subject: [alsa-devel] Question: Can aux_dev suspend/resume ?
X-BeenThere: alsa-devel@alsa-project.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: "Alsa-devel mailing list for ALSA developers -
 http://www.alsa-project.org" <alsa-devel.alsa-project.org>
List-Unsubscribe: <https://mailman.alsa-project.org/mailman/options/alsa-devel>, 
 <mailto:alsa-devel-request@alsa-project.org?subject=unsubscribe>
List-Archive: <http://mailman.alsa-project.org/pipermail/alsa-devel/>
List-Post: <mailto:alsa-devel@alsa-project.org>
List-Help: <mailto:alsa-devel-request@alsa-project.org?subject=help>
List-Subscribe: <https://mailman.alsa-project.org/mailman/listinfo/alsa-devel>, 
 <mailto:alsa-devel-request@alsa-project.org?subject=subscribe>
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: 7bit
Errors-To: alsa-devel-bounces@alsa-project.org
Sender: "Alsa-devel" <alsa-devel-bounces@alsa-project.org>


Hi ALSA ML

I'm checking ALSA SoC framework.
Now, many Components are connected to Card.
When we want to do something to all Components,
we have 2 type of loops

1)	for_each_card_components(card, component) {
		...
	}

2)	for_each_card_rtds(card, rtd) {
		for_each_rtd_components(rtd, i, component) {
			...
		}
	}

But, I noticed that these 1) and 2) are not same.

Please double check it.
We have 3 ways to connect Component to Card.

	a) via Card pre-linked Aux  (= card->aux_dev)
	b) via Card pre-linked link (= card->dai_link)
	c) via Topology dai_link

	static int snd_soc_bind_card(struct snd_soc_card *card)
	{
		...
	a)	ret = soc_bind_aux_dev(card);
		...

		for_each_card_prelinks(card, i, dai_link) {
	b)		ret = snd_soc_add_pcm_runtime(card, dai_link);
			...
		}
		...

	c)	ret = snd_soc_card_probe(card);
		...

	X)	ret = soc_probe_link_components(card);
		...

	Y)	ret = soc_probe_aux_devices(card);
		...

Here, b) and c) has dai_link / rtd.
And, connected Component are probed at X) (= b) + c)) Y) (= a)).
Then, probed Component are connected to card->component_dev_list.
Above 1) loop is based on it.

In total, 1) and 2) loop difference are

	1) loop is for a) + b) + c)
	2) loop is for      b) + c)

Now, ALSA SoC suspend/resume checks below,
but a) doesn't have it.

	rtd->dai_link->ignore_suspend.

Thus, "suspend" is using 2) loop,
but,  "resume"  is using 1) loop.

My question here is that can AUX suspend/resume ?
I think we need/want to use 1) loop for it.

Thank you for your help !!
Best regards
---
Kuninori Morimoto
_______________________________________________
Alsa-devel mailing list
Alsa-devel@alsa-project.org
https://mailman.alsa-project.org/mailman/listinfo/alsa-devel
