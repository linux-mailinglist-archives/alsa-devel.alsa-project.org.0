Return-Path: <alsa-devel-bounces@alsa-project.org>
X-Original-To: lists+alsa-devel@lfdr.de
Delivered-To: lists+alsa-devel@lfdr.de
Received: from alsa0.perex.cz (alsa0.perex.cz [77.48.224.243])
	by mail.lfdr.de (Postfix) with ESMTPS id BD6DD3762C9
	for <lists+alsa-devel@lfdr.de>; Fri,  7 May 2021 11:25:43 +0200 (CEST)
Received: from alsa1.perex.cz (alsa1.perex.cz [207.180.221.201])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by alsa0.perex.cz (Postfix) with ESMTPS id 4BF4016AD;
	Fri,  7 May 2021 11:24:53 +0200 (CEST)
DKIM-Filter: OpenDKIM Filter v2.11.0 alsa0.perex.cz 4BF4016AD
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=alsa-project.org;
	s=default; t=1620379543;
	bh=aVwObF8a7pavBTveKycOq/lWYR8iq9GDyjhtONw8TVM=;
	h=Date:From:To:Subject:In-Reply-To:References:Cc:List-Id:
	 List-Unsubscribe:List-Archive:List-Post:List-Help:List-Subscribe:
	 From;
	b=qBUyrzPs5+Xif8prC9YLRJhSsS07hMTRhehmhBfGCvPJgJvM8ncFy6SJ8mtIHEsuf
	 nkbLTMK8+LuBDr6+mxEAwiSLrUZq/LCLYOpa5rJ5BiJm3l1DzBy4DsPR/odRm4A3WA
	 k1ozLBkTqXta3Dg6+VvB30cigMbtq25+q1MiNmIA=
Received: from alsa1.perex.cz (localhost.localdomain [127.0.0.1])
	by alsa1.perex.cz (Postfix) with ESMTP id AF35EF8010B;
	Fri,  7 May 2021 11:24:15 +0200 (CEST)
X-Original-To: alsa-devel@alsa-project.org
Delivered-To: alsa-devel@alsa-project.org
Received: by alsa1.perex.cz (Postfix, from userid 50401)
 id 95879F8025F; Fri,  7 May 2021 11:24:13 +0200 (CEST)
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on alsa1.perex.cz
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=SPF_HELO_NONE,SPF_NONE
 autolearn=disabled version=3.4.0
Received: from mx2.suse.de (mx2.suse.de [195.135.220.15])
 (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
 (No client certificate requested)
 by alsa1.perex.cz (Postfix) with ESMTPS id 620DFF8010B
 for <alsa-devel@alsa-project.org>; Fri,  7 May 2021 11:24:05 +0200 (CEST)
DKIM-Filter: OpenDKIM Filter v2.11.0 alsa1.perex.cz 620DFF8010B
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay2.suse.de (unknown [195.135.221.27])
 by mx2.suse.de (Postfix) with ESMTP id 1A6F8AC3E;
 Fri,  7 May 2021 09:24:05 +0000 (UTC)
Date: Fri, 07 May 2021 11:24:04 +0200
Message-ID: <s5hfsyyj3rf.wl-tiwai@suse.de>
From: Takashi Iwai <tiwai@suse.de>
To: =?UTF-8?B?0J/QvtC00LPQvtGA0L3Ri9C5INCQ0LvQtdC60YHQtdC5INCe0LvQtdCz0L4=?=
 =?UTF-8?B?0LLQuNGH?= <s02190176@gse.cs.msu.ru>
Subject: Re: [BUG] ALSA: korg1212: Potential NULL pointer dereference in
 snd_korg1212_interrupt()
In-Reply-To: <CAA5EkfcVXC4MwMj=2GsfyLDjPsnT1nxgNk5XhdE346MuLFwMVQ@mail.gmail.com>
References: <CAA5EkfcVXC4MwMj=2GsfyLDjPsnT1nxgNk5XhdE346MuLFwMVQ@mail.gmail.com>
User-Agent: Wanderlust/2.15.9 (Almost Unreal) SEMI/1.14.6 (Maruoka)
 FLIM/1.14.9 (=?UTF-8?B?R29qxY0=?=) APEL/10.8 Emacs/25.3
 (x86_64-suse-linux-gnu) MULE/6.0 (HANACHIRUSATO)
MIME-Version: 1.0 (generated by SEMI 1.14.6 - "Maruoka")
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
Cc: ldv-project@linuxtesting.org, alsa-devel@alsa-project.org,
 Leon Romanovsky <leon@kernel.org>, linux-kernel@vger.kernel.org,
 Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>,
 Takashi Iwai <tiwai@suse.com>, Alexey Khoroshilov <khoroshilov@ispras.ru>
X-BeenThere: alsa-devel@alsa-project.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: "Alsa-devel mailing list for ALSA developers -
 http://www.alsa-project.org" <alsa-devel.alsa-project.org>
List-Unsubscribe: <https://mailman.alsa-project.org/mailman/options/alsa-devel>, 
 <mailto:alsa-devel-request@alsa-project.org?subject=unsubscribe>
List-Archive: <http://mailman.alsa-project.org/pipermail/alsa-devel/>
List-Post: <mailto:alsa-devel@alsa-project.org>
List-Help: <mailto:alsa-devel-request@alsa-project.org?subject=help>
List-Subscribe: <https://mailman.alsa-project.org/mailman/listinfo/alsa-devel>, 
 <mailto:alsa-devel-request@alsa-project.org?subject=subscribe>
Errors-To: alsa-devel-bounces@alsa-project.org
Sender: "Alsa-devel" <alsa-devel-bounces@alsa-project.org>

On Fri, 07 May 2021 11:18:56 +0200,
Подгорный Алексей Олегович wrote:
> 
> snd_korg1212_create() makes the following steps during initialization
> of the card:
> 1) registers an interrupt handler (lines 2230-2232)
> 2) allocates and initializes korg1212->sharedBufferPtr (lines 2280-2287)
> 3) reboots the card via snd_korg1212_Send1212Command() (line 2358)
> 
> 2145    static int snd_korg1212_create(struct snd_card *card, struct
>                                  pci_dev *pci, struct snd_korg1212 **rchip)
> 2147    {
>                 ...
> 2230            err = request_irq(pci->irq, snd_korg1212_interrupt,
> 2231                                        IRQF_SHARED,
> 2232                                        KBUILD_MODNAME, korg1212);
>                 ...
> 2280            if (snd_dma_alloc_pages(SNDRV_DMA_TYPE_DEV, &pci->dev,
> 2281            sizeof(struct KorgSharedBuffer), &korg1212->dma_shared) < 0){
> 
> 2282                         snd_printk(KERN_ERR "korg1212: can not
>                                  allocate shared buffer memory (%zdbytes)\n",
>                                  sizeof(struct KorgSharedBuffer));
> 
> 2283                         snd_korg1212_free(korg1212);
> 2284                         return -ENOMEM;
> 2285            }
> 2286            korg1212->sharedBufferPtr =
>                         (struct KorgSharedBuffer*)korg1212->dma_shared.area;
> 2287            korg1212->sharedBufferPhy = korg1212->dma_shared.addr;
>                 ...
> 2358            rc = snd_korg1212_Send1212Command(korg1212,
>                         K1212_DB_RebootCard, 0, 0, 0, 0);
>                 ...
> 2412    }
> 
> But if interrupt happens when snd_korg1212_create() is still within
> lines 2233-2286,
> snd_korg1212_interrupt() may dereference korg1212->sharedBufferPtr before
> it was initialized without any checks (line 1149):
> 
> 1098    static irqreturn_t snd_korg1212_interrupt(int irq, void *dev_id)
> 1099    {
>                 ...
> 1116            switch (doorbellValue) {
>                 ...
> 1145                        case K1212_DB_CARDSTOPPED:
> 1146                            K1212_DEBUG_PRINTK_VERBOSE("K1212_DEBUG: IRQ
>                                         CSTP count - %ld, %x, [%s].\n",
> 1147                                korg1212->irqcount, doorbellValue,
> 1148                                stateName[korg1212->cardState]);
> 1149                        korg1212->sharedBufferPtr->cardCommand = 0;
>                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 1150                        break;
>                 ...
> 1185    }
> 
> Should we be sure that such interrupt cannot happen or
> should we move the registration of the interrupt handler after
> korg1212->sharedBufferPtr is initialized?

Yes, in general the IRQ handler should be registered at the end.
Could you submit a fix patch?


thanks,

Takashi
