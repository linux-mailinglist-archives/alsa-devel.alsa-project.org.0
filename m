Return-Path: <alsa-devel-bounces@alsa-project.org>
X-Original-To: lists+alsa-devel@lfdr.de
Delivered-To: lists+alsa-devel@lfdr.de
Received: from alsa0.perex.cz (alsa0.perex.cz [77.48.224.243])
	by mail.lfdr.de (Postfix) with ESMTPS id 2D0388D70A
	for <lists+alsa-devel@lfdr.de>; Wed, 14 Aug 2019 17:16:18 +0200 (CEST)
Received: from alsa1.perex.cz (alsa1.perex.cz [207.180.221.201])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by alsa0.perex.cz (Postfix) with ESMTPS id 903E3166F;
	Wed, 14 Aug 2019 17:15:27 +0200 (CEST)
DKIM-Filter: OpenDKIM Filter v2.11.0 alsa0.perex.cz 903E3166F
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=alsa-project.org;
	s=default; t=1565795777;
	bh=F5b3s2SUNT+H/FDTW2zj1FmwISuR0dz4JMsHgwh/D20=;
	h=Date:From:To:In-Reply-To:References:Cc:Subject:List-Id:
	 List-Unsubscribe:List-Archive:List-Post:List-Help:List-Subscribe:
	 From;
	b=clAyZxM1KuZEtFBVIh9oYaGd0hmUzvWN/8+/ryhxhoWV7WQNCSbDk51hMx0hjdYcR
	 iib3QvcFZNOysKmyrNirtPrw9xl/OdewKHo9Tc9bAj/Znc7v5Nue/H0HSN61KErYyu
	 0I/6Uxde8QwZvNlGgZfyfheM7S+6fiaRmEsbi768=
Received: from alsa1.perex.cz (localhost.localdomain [127.0.0.1])
	by alsa1.perex.cz (Postfix) with ESMTP id BDC81F80268;
	Wed, 14 Aug 2019 17:14:33 +0200 (CEST)
X-Original-To: alsa-devel@alsa-project.org
Delivered-To: alsa-devel@alsa-project.org
Received: by alsa1.perex.cz (Postfix, from userid 50401)
 id C6E36F80214; Wed, 14 Aug 2019 17:14:31 +0200 (CEST)
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on alsa1.perex.cz
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=SPF_HELO_NONE,SPF_PASS,
 URIBL_BLOCKED autolearn=disabled version=3.4.0
Received: from mx1.suse.de (mx2.suse.de [195.135.220.15])
 (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
 (No client certificate requested)
 by alsa1.perex.cz (Postfix) with ESMTPS id 6C0A1F8015B
 for <alsa-devel@alsa-project.org>; Wed, 14 Aug 2019 17:14:27 +0200 (CEST)
DKIM-Filter: OpenDKIM Filter v2.11.0 alsa1.perex.cz 6C0A1F8015B
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay2.suse.de (unknown [195.135.220.254])
 by mx1.suse.de (Postfix) with ESMTP id 7F9E0AB92;
 Wed, 14 Aug 2019 15:14:26 +0000 (UTC)
Date: Wed, 14 Aug 2019 17:14:25 +0200
Message-ID: <s5h8srvdbji.wl-tiwai@suse.de>
From: Takashi Iwai <tiwai@suse.de>
To: Dan Carpenter <dan.carpenter@oracle.com>
In-Reply-To: <20190814090921.GO1935@kadam>
References: <20190814023625.21683-1-benquike@gmail.com>
 <s5hzhkcb6dh.wl-tiwai@suse.de> <20190814090921.GO1935@kadam>
User-Agent: Wanderlust/2.15.9 (Almost Unreal) SEMI/1.14.6 (Maruoka)
 FLIM/1.14.9 (=?UTF-8?B?R29qxY0=?=) APEL/10.8 Emacs/25.3
 (x86_64-suse-linux-gnu) MULE/6.0 (HANACHIRUSATO)
MIME-Version: 1.0 (generated by SEMI 1.14.6 - "Maruoka")
Cc: Mathias Payer <mathias.payer@nebelwelt.net>, security@kernel.org,
 Wenwen Wang <wang6495@umn.edu>, linux-kernel@vger.kernel.org,
 Takashi Iwai <tiwai@suse.com>, YueHaibing <yuehaibing@huawei.com>,
 alsa-devel@alsa-project.org, Thomas Gleixner <tglx@linutronix.de>,
 Hui Peng <benquike@gmail.com>, Allison Randal <allison@lohutok.net>
Subject: Re: [alsa-devel] [PATCH] Fix an OOB bug in parse_audio_mixer_unit
X-BeenThere: alsa-devel@alsa-project.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: "Alsa-devel mailing list for ALSA developers -
 http://www.alsa-project.org" <alsa-devel.alsa-project.org>
List-Unsubscribe: <https://mailman.alsa-project.org/mailman/options/alsa-devel>, 
 <mailto:alsa-devel-request@alsa-project.org?subject=unsubscribe>
List-Archive: <http://mailman.alsa-project.org/pipermail/alsa-devel/>
List-Post: <mailto:alsa-devel@alsa-project.org>
List-Help: <mailto:alsa-devel-request@alsa-project.org?subject=help>
List-Subscribe: <https://mailman.alsa-project.org/mailman/listinfo/alsa-devel>, 
 <mailto:alsa-devel-request@alsa-project.org?subject=subscribe>
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: 7bit
Errors-To: alsa-devel-bounces@alsa-project.org
Sender: "Alsa-devel" <alsa-devel-bounces@alsa-project.org>

On Wed, 14 Aug 2019 11:09:21 +0200,
Dan Carpenter wrote:
> 
> On Wed, Aug 14, 2019 at 08:36:42AM +0200, Takashi Iwai wrote:
> > On Wed, 14 Aug 2019 04:36:24 +0200,
> > Hui Peng wrote:
> > > 
> > > The `uac_mixer_unit_descriptor` shown as below is read from the
> > > device side. In `parse_audio_mixer_unit`, `baSourceID` field is
> > > accessed from index 0 to `bNrInPins` - 1, the current implementation
> > > assumes that descriptor is always valid (the length  of descriptor
> > > is no shorter than 5 + `bNrInPins`). If a descriptor read from
> > > the device side is invalid, it may trigger out-of-bound memory
> > > access.
> > > 
> > > ```
> > > struct uac_mixer_unit_descriptor {
> > > 	__u8 bLength;
> > > 	__u8 bDescriptorType;
> > > 	__u8 bDescriptorSubtype;
> > > 	__u8 bUnitID;
> > > 	__u8 bNrInPins;
> > > 	__u8 baSourceID[];
> > > }
> > > ```
> > > 
> > > This patch fixes the bug by add a sanity check on the length of
> > > the descriptor.
> > > 
> > > Signed-off-by: Hui Peng <benquike@gmail.com>
> > > Reported-by: Hui Peng <benquike@gmail.com>
> > > Reported-by: Mathias Payer <mathias.payer@nebelwelt.net>
> > > ---
> > >  sound/usb/mixer.c | 9 +++++++++
> > >  1 file changed, 9 insertions(+)
> > > 
> > > diff --git a/sound/usb/mixer.c b/sound/usb/mixer.c
> > > index 7498b5191b68..38202ce67237 100644
> > > --- a/sound/usb/mixer.c
> > > +++ b/sound/usb/mixer.c
> > > @@ -2091,6 +2091,15 @@ static int parse_audio_mixer_unit(struct mixer_build *state, int unitid,
> > >  	struct usb_audio_term iterm;
> > >  	int input_pins, num_ins, num_outs;
> > >  	int pin, ich, err;
> > > +	int desc_len = (int) ((unsigned long) state->buffer +
> > > +			state->buflen - (unsigned long) raw_desc);
> > > +
> > > +	if (desc_len < sizeof(*desc) + desc->bNrInPins) {
> > > +		usb_audio_err(state->chip,
> > > +			      "descriptor %d too short\n",
> > > +			      unitid);
> > > +		return -EINVAL;
> > > +	}
> > >  
> > >  	err = uac_mixer_unit_get_channels(state, desc);
> > >  	if (err < 0) {
> > 
> > Hm, what is the desc->bLength value in the error case?
> > 
> > Basically the buffer boundary is already checked against bLength in
> > snd_usb_find_desc() which is called from obtaining the raw_desc in the
> > caller of this function (parse_audio_unit()).
> > 
> > So, if any, we need to check bLength for the possible overflow like
> > below.
> > 
> > 
> > thanks,
> > 
> > Takashi
> > 
> > --- a/sound/usb/mixer.c
> > +++ b/sound/usb/mixer.c
> > @@ -744,6 +744,8 @@ static int uac_mixer_unit_get_channels(struct mixer_build *state,
> >  		return -EINVAL;
> >  	if (!desc->bNrInPins)
> >  		return -EINVAL;
> > +	if (desc->bLength < sizeof(*desc) + desc->bNrInPins)
> > +		return -EINVAL;
> 
> VERSION 1 and 2 already have a different check:
> 
> 	if (desc->bLength < sizeof(*desc) + desc->bNrInPins + 1)
> 		return 0; /* no bmControls -> skip */
>
> So something is possibly off by one.  It's just version 3 which doesn't
> have a check.
> 

No, both are sensible checks.  The first check is about the minimal
size that doesn't contain bmControls bitmap which is optional on some
devices, while the latter checks about the presence of bmControls
field.  Note that the latter returns zero, which means no error, while
the former returns an error.


thanks,

Takashi
_______________________________________________
Alsa-devel mailing list
Alsa-devel@alsa-project.org
https://mailman.alsa-project.org/mailman/listinfo/alsa-devel
